### YamlMime:XRefMap
sorted: true
references:
- uid: Vim.Math3d
  name: Vim.Math3d
  href: api/Vim.Math3d.html
  commentId: N:Vim.Math3d
  fullName: Vim.Math3d
  nameWithType: Vim.Math3d
- uid: Vim.Math3d.AABox
  name: AABox
  href: api/Vim.Math3d.AABox.html
  commentId: T:Vim.Math3d.AABox
  fullName: Vim.Math3d.AABox
  nameWithType: AABox
- uid: Vim.Math3d.AABox.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: AABox((Vector3 min, Vector3 max))
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox__ctor_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.AABox.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: AABox((min As Vector3, max As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.AABox.AABox(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.AABox.AABox(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: AABox.AABox((Vector3 min, Vector3 max))
  nameWithType.vb: AABox.AABox((min As Vector3, max As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.AABox.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: AABox(Vector3, Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox__ctor_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.AABox(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: AABox.AABox(Vector3, Vector3)
- uid: Vim.Math3d.AABox.#ctor*
  name: AABox
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox__ctor_
  commentId: Overload:Vim.Math3d.AABox.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.AABox.AABox
  nameWithType: AABox.AABox
- uid: Vim.Math3d.AABox.AlmostEquals(Vim.Math3d.AABox,System.Single)
  name: AlmostEquals(AABox, Single)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_AlmostEquals_Vim_Math3d_AABox_System_Single_
  commentId: M:Vim.Math3d.AABox.AlmostEquals(Vim.Math3d.AABox,System.Single)
  fullName: Vim.Math3d.AABox.AlmostEquals(Vim.Math3d.AABox, System.Single)
  nameWithType: AABox.AlmostEquals(AABox, Single)
- uid: Vim.Math3d.AABox.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_AlmostEquals_
  commentId: Overload:Vim.Math3d.AABox.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.AABox.AlmostEquals
  nameWithType: AABox.AlmostEquals
- uid: Vim.Math3d.AABox.BackIndices
  name: BackIndices
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_BackIndices
  commentId: F:Vim.Math3d.AABox.BackIndices
  fullName: Vim.Math3d.AABox.BackIndices
  nameWithType: AABox.BackIndices
- uid: Vim.Math3d.AABox.BottomIndices
  name: BottomIndices
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_BottomIndices
  commentId: F:Vim.Math3d.AABox.BottomIndices
  fullName: Vim.Math3d.AABox.BottomIndices
  nameWithType: AABox.BottomIndices
- uid: Vim.Math3d.AABox.Center
  name: Center
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Center
  commentId: P:Vim.Math3d.AABox.Center
  fullName: Vim.Math3d.AABox.Center
  nameWithType: AABox.Center
- uid: Vim.Math3d.AABox.Center*
  name: Center
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Center_
  commentId: Overload:Vim.Math3d.AABox.Center
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Center
  nameWithType: AABox.Center
- uid: Vim.Math3d.AABox.CenterBottom
  name: CenterBottom
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CenterBottom
  commentId: P:Vim.Math3d.AABox.CenterBottom
  fullName: Vim.Math3d.AABox.CenterBottom
  nameWithType: AABox.CenterBottom
- uid: Vim.Math3d.AABox.CenterBottom*
  name: CenterBottom
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CenterBottom_
  commentId: Overload:Vim.Math3d.AABox.CenterBottom
  isSpec: "True"
  fullName: Vim.Math3d.AABox.CenterBottom
  nameWithType: AABox.CenterBottom
- uid: Vim.Math3d.AABox.CenterDistance(Vim.Math3d.Vector3)
  name: CenterDistance(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CenterDistance_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.CenterDistance(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.CenterDistance(Vim.Math3d.Vector3)
  nameWithType: AABox.CenterDistance(Vector3)
- uid: Vim.Math3d.AABox.CenterDistance*
  name: CenterDistance
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CenterDistance_
  commentId: Overload:Vim.Math3d.AABox.CenterDistance
  isSpec: "True"
  fullName: Vim.Math3d.AABox.CenterDistance
  nameWithType: AABox.CenterDistance
- uid: Vim.Math3d.AABox.CenterDistanceToOrigin
  name: CenterDistanceToOrigin
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CenterDistanceToOrigin
  commentId: P:Vim.Math3d.AABox.CenterDistanceToOrigin
  fullName: Vim.Math3d.AABox.CenterDistanceToOrigin
  nameWithType: AABox.CenterDistanceToOrigin
- uid: Vim.Math3d.AABox.CenterDistanceToOrigin*
  name: CenterDistanceToOrigin
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CenterDistanceToOrigin_
  commentId: Overload:Vim.Math3d.AABox.CenterDistanceToOrigin
  isSpec: "True"
  fullName: Vim.Math3d.AABox.CenterDistanceToOrigin
  nameWithType: AABox.CenterDistanceToOrigin
- uid: Vim.Math3d.AABox.CompareTo(Vim.Math3d.AABox)
  name: CompareTo(AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CompareTo_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.CompareTo(Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.CompareTo(Vim.Math3d.AABox)
  nameWithType: AABox.CompareTo(AABox)
- uid: Vim.Math3d.AABox.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CompareTo_
  commentId: Overload:Vim.Math3d.AABox.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.AABox.CompareTo
  nameWithType: AABox.CompareTo
- uid: Vim.Math3d.AABox.Contains(Vim.Math3d.AABox)
  name: Contains(AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Contains_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.Contains(Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Contains(Vim.Math3d.AABox)
  nameWithType: AABox.Contains(AABox)
- uid: Vim.Math3d.AABox.Contains(Vim.Math3d.Sphere)
  name: Contains(Sphere)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Contains_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.AABox.Contains(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.AABox.Contains(Vim.Math3d.Sphere)
  nameWithType: AABox.Contains(Sphere)
- uid: Vim.Math3d.AABox.Contains(Vim.Math3d.Vector3)
  name: Contains(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Contains_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.Contains(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.Contains(Vim.Math3d.Vector3)
  nameWithType: AABox.Contains(Vector3)
- uid: Vim.Math3d.AABox.Contains*
  name: Contains
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Contains_
  commentId: Overload:Vim.Math3d.AABox.Contains
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Contains
  nameWithType: AABox.Contains
- uid: Vim.Math3d.AABox.Corners
  name: Corners
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Corners
  commentId: P:Vim.Math3d.AABox.Corners
  fullName: Vim.Math3d.AABox.Corners
  nameWithType: AABox.Corners
- uid: Vim.Math3d.AABox.Corners*
  name: Corners
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Corners_
  commentId: Overload:Vim.Math3d.AABox.Corners
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Corners
  nameWithType: AABox.Corners
- uid: Vim.Math3d.AABox.Count
  name: Count
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Count
  commentId: P:Vim.Math3d.AABox.Count
  fullName: Vim.Math3d.AABox.Count
  nameWithType: AABox.Count
- uid: Vim.Math3d.AABox.Count*
  name: Count
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Count_
  commentId: Overload:Vim.Math3d.AABox.Count
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Count
  nameWithType: AABox.Count
- uid: Vim.Math3d.AABox.Create(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Create(IEnumerable<Vector3>)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Create_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.AABox.Create(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Create(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.AABox.Create(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.AABox.Create(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: AABox.Create(IEnumerable<Vector3>)
  nameWithType.vb: AABox.Create(IEnumerable(Of Vector3))
- uid: Vim.Math3d.AABox.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Create((Vector3 min, Vector3 max))
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Create_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.AABox.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Create((min As Vector3, max As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.AABox.Create(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.AABox.Create(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: AABox.Create((Vector3 min, Vector3 max))
  nameWithType.vb: AABox.Create((min As Vector3, max As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.AABox.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Create(Vector3, Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Create_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.Create(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: AABox.Create(Vector3, Vector3)
- uid: Vim.Math3d.AABox.Create(Vim.Math3d.Vector3[])
  name: Create(Vector3[])
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Create_Vim_Math3d_Vector3___
  commentId: M:Vim.Math3d.AABox.Create(Vim.Math3d.Vector3[])
  name.vb: Create(Vector3())
  fullName: Vim.Math3d.AABox.Create(Vim.Math3d.Vector3[])
  fullName.vb: Vim.Math3d.AABox.Create(Vim.Math3d.Vector3())
  nameWithType: AABox.Create(Vector3[])
  nameWithType.vb: AABox.Create(Vector3())
- uid: Vim.Math3d.AABox.Create*
  name: Create
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Create_
  commentId: Overload:Vim.Math3d.AABox.Create
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Create
  nameWithType: AABox.Create
- uid: Vim.Math3d.AABox.CreateFromSphere(Vim.Math3d.Sphere)
  name: CreateFromSphere(Sphere)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CreateFromSphere_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.AABox.CreateFromSphere(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.AABox.CreateFromSphere(Vim.Math3d.Sphere)
  nameWithType: AABox.CreateFromSphere(Sphere)
- uid: Vim.Math3d.AABox.CreateFromSphere*
  name: CreateFromSphere
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_CreateFromSphere_
  commentId: Overload:Vim.Math3d.AABox.CreateFromSphere
  isSpec: "True"
  fullName: Vim.Math3d.AABox.CreateFromSphere
  nameWithType: AABox.CreateFromSphere
- uid: Vim.Math3d.AABox.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name: Deconstruct(out Vector3, out Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Deconstruct_Vim_Math3d_Vector3__Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.AABox.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Vector3)
  fullName: Vim.Math3d.AABox.Deconstruct(out Vim.Math3d.Vector3, out Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.AABox.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3)
  nameWithType: AABox.Deconstruct(out Vector3, out Vector3)
  nameWithType.vb: AABox.Deconstruct(ByRef Vector3, ByRef Vector3)
- uid: Vim.Math3d.AABox.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Deconstruct_
  commentId: Overload:Vim.Math3d.AABox.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Deconstruct
  nameWithType: AABox.Deconstruct
- uid: Vim.Math3d.AABox.Diagonal
  name: Diagonal
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Diagonal
  commentId: P:Vim.Math3d.AABox.Diagonal
  fullName: Vim.Math3d.AABox.Diagonal
  nameWithType: AABox.Diagonal
- uid: Vim.Math3d.AABox.Diagonal*
  name: Diagonal
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Diagonal_
  commentId: Overload:Vim.Math3d.AABox.Diagonal
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Diagonal
  nameWithType: AABox.Diagonal
- uid: Vim.Math3d.AABox.Distance(Vim.Math3d.Vector3)
  name: Distance(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Distance_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.Distance(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.Distance(Vim.Math3d.Vector3)
  nameWithType: AABox.Distance(Vector3)
- uid: Vim.Math3d.AABox.Distance*
  name: Distance
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Distance_
  commentId: Overload:Vim.Math3d.AABox.Distance
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Distance
  nameWithType: AABox.Distance
- uid: Vim.Math3d.AABox.DistanceToOrigin
  name: DistanceToOrigin
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_DistanceToOrigin
  commentId: P:Vim.Math3d.AABox.DistanceToOrigin
  fullName: Vim.Math3d.AABox.DistanceToOrigin
  nameWithType: AABox.DistanceToOrigin
- uid: Vim.Math3d.AABox.DistanceToOrigin*
  name: DistanceToOrigin
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_DistanceToOrigin_
  commentId: Overload:Vim.Math3d.AABox.DistanceToOrigin
  isSpec: "True"
  fullName: Vim.Math3d.AABox.DistanceToOrigin
  nameWithType: AABox.DistanceToOrigin
- uid: Vim.Math3d.AABox.Empty
  name: Empty
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Empty
  commentId: F:Vim.Math3d.AABox.Empty
  fullName: Vim.Math3d.AABox.Empty
  nameWithType: AABox.Empty
- uid: Vim.Math3d.AABox.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Equals_System_Object_
  commentId: M:Vim.Math3d.AABox.Equals(System.Object)
  fullName: Vim.Math3d.AABox.Equals(System.Object)
  nameWithType: AABox.Equals(Object)
- uid: Vim.Math3d.AABox.Equals(Vim.Math3d.AABox)
  name: Equals(AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Equals_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.Equals(Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Equals(Vim.Math3d.AABox)
  nameWithType: AABox.Equals(AABox)
- uid: Vim.Math3d.AABox.Equals*
  name: Equals
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Equals_
  commentId: Overload:Vim.Math3d.AABox.Equals
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Equals
  nameWithType: AABox.Equals
- uid: Vim.Math3d.AABox.Extent
  name: Extent
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Extent
  commentId: P:Vim.Math3d.AABox.Extent
  fullName: Vim.Math3d.AABox.Extent
  nameWithType: AABox.Extent
- uid: Vim.Math3d.AABox.Extent*
  name: Extent
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Extent_
  commentId: Overload:Vim.Math3d.AABox.Extent
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Extent
  nameWithType: AABox.Extent
- uid: Vim.Math3d.AABox.FaceCenters
  name: FaceCenters()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_FaceCenters
  commentId: M:Vim.Math3d.AABox.FaceCenters
  fullName: Vim.Math3d.AABox.FaceCenters()
  nameWithType: AABox.FaceCenters()
- uid: Vim.Math3d.AABox.FaceCenters*
  name: FaceCenters
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_FaceCenters_
  commentId: Overload:Vim.Math3d.AABox.FaceCenters
  isSpec: "True"
  fullName: Vim.Math3d.AABox.FaceCenters
  nameWithType: AABox.FaceCenters
- uid: Vim.Math3d.AABox.FromCenterAndExtent(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: FromCenterAndExtent(Vector3, Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_FromCenterAndExtent_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.FromCenterAndExtent(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.FromCenterAndExtent(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: AABox.FromCenterAndExtent(Vector3, Vector3)
- uid: Vim.Math3d.AABox.FromCenterAndExtent*
  name: FromCenterAndExtent
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_FromCenterAndExtent_
  commentId: Overload:Vim.Math3d.AABox.FromCenterAndExtent
  isSpec: "True"
  fullName: Vim.Math3d.AABox.FromCenterAndExtent
  nameWithType: AABox.FromCenterAndExtent
- uid: Vim.Math3d.AABox.FrontIndices
  name: FrontIndices
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_FrontIndices
  commentId: F:Vim.Math3d.AABox.FrontIndices
  fullName: Vim.Math3d.AABox.FrontIndices
  nameWithType: AABox.FrontIndices
- uid: Vim.Math3d.AABox.GetCorners(Vim.Math3d.Vector3[])
  name: GetCorners(Vector3[])
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_GetCorners_Vim_Math3d_Vector3___
  commentId: M:Vim.Math3d.AABox.GetCorners(Vim.Math3d.Vector3[])
  name.vb: GetCorners(Vector3())
  fullName: Vim.Math3d.AABox.GetCorners(Vim.Math3d.Vector3[])
  fullName.vb: Vim.Math3d.AABox.GetCorners(Vim.Math3d.Vector3())
  nameWithType: AABox.GetCorners(Vector3[])
  nameWithType.vb: AABox.GetCorners(Vector3())
- uid: Vim.Math3d.AABox.GetCorners*
  name: GetCorners
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_GetCorners_
  commentId: Overload:Vim.Math3d.AABox.GetCorners
  isSpec: "True"
  fullName: Vim.Math3d.AABox.GetCorners
  nameWithType: AABox.GetCorners
- uid: Vim.Math3d.AABox.GetCornersAndFaceCenters
  name: GetCornersAndFaceCenters()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_GetCornersAndFaceCenters
  commentId: M:Vim.Math3d.AABox.GetCornersAndFaceCenters
  fullName: Vim.Math3d.AABox.GetCornersAndFaceCenters()
  nameWithType: AABox.GetCornersAndFaceCenters()
- uid: Vim.Math3d.AABox.GetCornersAndFaceCenters*
  name: GetCornersAndFaceCenters
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_GetCornersAndFaceCenters_
  commentId: Overload:Vim.Math3d.AABox.GetCornersAndFaceCenters
  isSpec: "True"
  fullName: Vim.Math3d.AABox.GetCornersAndFaceCenters
  nameWithType: AABox.GetCornersAndFaceCenters
- uid: Vim.Math3d.AABox.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_GetHashCode
  commentId: M:Vim.Math3d.AABox.GetHashCode
  fullName: Vim.Math3d.AABox.GetHashCode()
  nameWithType: AABox.GetHashCode()
- uid: Vim.Math3d.AABox.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_GetHashCode_
  commentId: Overload:Vim.Math3d.AABox.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.AABox.GetHashCode
  nameWithType: AABox.GetHashCode
- uid: Vim.Math3d.AABox.Intersection(Vim.Math3d.AABox)
  name: Intersection(AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Intersection_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.Intersection(Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Intersection(Vim.Math3d.AABox)
  nameWithType: AABox.Intersection(AABox)
- uid: Vim.Math3d.AABox.Intersection*
  name: Intersection
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Intersection_
  commentId: Overload:Vim.Math3d.AABox.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Intersection
  nameWithType: AABox.Intersection
- uid: Vim.Math3d.AABox.Intersects(Vim.Math3d.AABox)
  name: Intersects(AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Intersects_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.Intersects(Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Intersects(Vim.Math3d.AABox)
  nameWithType: AABox.Intersects(AABox)
- uid: Vim.Math3d.AABox.Intersects(Vim.Math3d.AABox,System.Boolean@)
  name: Intersects(AABox, out Boolean)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Intersects_Vim_Math3d_AABox_System_Boolean__
  commentId: M:Vim.Math3d.AABox.Intersects(Vim.Math3d.AABox,System.Boolean@)
  name.vb: Intersects(AABox, ByRef Boolean)
  fullName: Vim.Math3d.AABox.Intersects(Vim.Math3d.AABox, out System.Boolean)
  fullName.vb: Vim.Math3d.AABox.Intersects(Vim.Math3d.AABox, ByRef System.Boolean)
  nameWithType: AABox.Intersects(AABox, out Boolean)
  nameWithType.vb: AABox.Intersects(AABox, ByRef Boolean)
- uid: Vim.Math3d.AABox.Intersects(Vim.Math3d.Plane)
  name: Intersects(Plane)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Intersects_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.AABox.Intersects(Vim.Math3d.Plane)
  fullName: Vim.Math3d.AABox.Intersects(Vim.Math3d.Plane)
  nameWithType: AABox.Intersects(Plane)
- uid: Vim.Math3d.AABox.Intersects(Vim.Math3d.Sphere)
  name: Intersects(Sphere)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Intersects_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.AABox.Intersects(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.AABox.Intersects(Vim.Math3d.Sphere)
  nameWithType: AABox.Intersects(Sphere)
- uid: Vim.Math3d.AABox.Intersects*
  name: Intersects
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Intersects_
  commentId: Overload:Vim.Math3d.AABox.Intersects
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Intersects
  nameWithType: AABox.Intersects
- uid: Vim.Math3d.AABox.IsEmpty
  name: IsEmpty
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsEmpty
  commentId: P:Vim.Math3d.AABox.IsEmpty
  fullName: Vim.Math3d.AABox.IsEmpty
  nameWithType: AABox.IsEmpty
- uid: Vim.Math3d.AABox.IsEmpty*
  name: IsEmpty
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsEmpty_
  commentId: Overload:Vim.Math3d.AABox.IsEmpty
  isSpec: "True"
  fullName: Vim.Math3d.AABox.IsEmpty
  nameWithType: AABox.IsEmpty
- uid: Vim.Math3d.AABox.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsInfinity
  commentId: M:Vim.Math3d.AABox.IsInfinity
  fullName: Vim.Math3d.AABox.IsInfinity()
  nameWithType: AABox.IsInfinity()
- uid: Vim.Math3d.AABox.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsInfinity_
  commentId: Overload:Vim.Math3d.AABox.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.AABox.IsInfinity
  nameWithType: AABox.IsInfinity
- uid: Vim.Math3d.AABox.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsNaN
  commentId: M:Vim.Math3d.AABox.IsNaN
  fullName: Vim.Math3d.AABox.IsNaN()
  nameWithType: AABox.IsNaN()
- uid: Vim.Math3d.AABox.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsNaN_
  commentId: Overload:Vim.Math3d.AABox.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.AABox.IsNaN
  nameWithType: AABox.IsNaN
- uid: Vim.Math3d.AABox.IsValid
  name: IsValid
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsValid
  commentId: P:Vim.Math3d.AABox.IsValid
  fullName: Vim.Math3d.AABox.IsValid
  nameWithType: AABox.IsValid
- uid: Vim.Math3d.AABox.IsValid*
  name: IsValid
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_IsValid_
  commentId: Overload:Vim.Math3d.AABox.IsValid
  isSpec: "True"
  fullName: Vim.Math3d.AABox.IsValid
  nameWithType: AABox.IsValid
- uid: Vim.Math3d.AABox.Item(System.Int32)
  name: Item[Int32]
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Item_System_Int32_
  commentId: P:Vim.Math3d.AABox.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Vim.Math3d.AABox.Item[System.Int32]
  fullName.vb: Vim.Math3d.AABox.Item(System.Int32)
  nameWithType: AABox.Item[Int32]
  nameWithType.vb: AABox.Item(Int32)
- uid: Vim.Math3d.AABox.Item*
  name: Item
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Item_
  commentId: Overload:Vim.Math3d.AABox.Item
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Item
  nameWithType: AABox.Item
- uid: Vim.Math3d.AABox.LeftIndices
  name: LeftIndices
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_LeftIndices
  commentId: F:Vim.Math3d.AABox.LeftIndices
  fullName: Vim.Math3d.AABox.LeftIndices
  nameWithType: AABox.LeftIndices
- uid: Vim.Math3d.AABox.Lerp(Vim.Math3d.Vector3)
  name: Lerp(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Lerp_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.Lerp(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.Lerp(Vim.Math3d.Vector3)
  nameWithType: AABox.Lerp(Vector3)
- uid: Vim.Math3d.AABox.Lerp*
  name: Lerp
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Lerp_
  commentId: Overload:Vim.Math3d.AABox.Lerp
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Lerp
  nameWithType: AABox.Lerp
- uid: Vim.Math3d.AABox.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Magnitude
  commentId: M:Vim.Math3d.AABox.Magnitude
  fullName: Vim.Math3d.AABox.Magnitude()
  nameWithType: AABox.Magnitude()
- uid: Vim.Math3d.AABox.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Magnitude_
  commentId: Overload:Vim.Math3d.AABox.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Magnitude
  nameWithType: AABox.Magnitude
- uid: Vim.Math3d.AABox.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MagnitudeSquared
  commentId: M:Vim.Math3d.AABox.MagnitudeSquared
  fullName: Vim.Math3d.AABox.MagnitudeSquared()
  nameWithType: AABox.MagnitudeSquared()
- uid: Vim.Math3d.AABox.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.AABox.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.AABox.MagnitudeSquared
  nameWithType: AABox.MagnitudeSquared
- uid: Vim.Math3d.AABox.Max
  name: Max
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Max
  commentId: F:Vim.Math3d.AABox.Max
  fullName: Vim.Math3d.AABox.Max
  nameWithType: AABox.Max
- uid: Vim.Math3d.AABox.MaxFaceArea
  name: MaxFaceArea
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MaxFaceArea
  commentId: P:Vim.Math3d.AABox.MaxFaceArea
  fullName: Vim.Math3d.AABox.MaxFaceArea
  nameWithType: AABox.MaxFaceArea
- uid: Vim.Math3d.AABox.MaxFaceArea*
  name: MaxFaceArea
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MaxFaceArea_
  commentId: Overload:Vim.Math3d.AABox.MaxFaceArea
  isSpec: "True"
  fullName: Vim.Math3d.AABox.MaxFaceArea
  nameWithType: AABox.MaxFaceArea
- uid: Vim.Math3d.AABox.MaxSide
  name: MaxSide
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MaxSide
  commentId: P:Vim.Math3d.AABox.MaxSide
  fullName: Vim.Math3d.AABox.MaxSide
  nameWithType: AABox.MaxSide
- uid: Vim.Math3d.AABox.MaxSide*
  name: MaxSide
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MaxSide_
  commentId: Overload:Vim.Math3d.AABox.MaxSide
  isSpec: "True"
  fullName: Vim.Math3d.AABox.MaxSide
  nameWithType: AABox.MaxSide
- uid: Vim.Math3d.AABox.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MaxValue
  commentId: F:Vim.Math3d.AABox.MaxValue
  fullName: Vim.Math3d.AABox.MaxValue
  nameWithType: AABox.MaxValue
- uid: Vim.Math3d.AABox.Merge(Vim.Math3d.AABox)
  name: Merge(AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Merge_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.Merge(Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Merge(Vim.Math3d.AABox)
  nameWithType: AABox.Merge(AABox)
- uid: Vim.Math3d.AABox.Merge(Vim.Math3d.Vector3)
  name: Merge(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Merge_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.Merge(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.Merge(Vim.Math3d.Vector3)
  nameWithType: AABox.Merge(Vector3)
- uid: Vim.Math3d.AABox.Merge*
  name: Merge
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Merge_
  commentId: Overload:Vim.Math3d.AABox.Merge
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Merge
  nameWithType: AABox.Merge
- uid: Vim.Math3d.AABox.Min
  name: Min
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Min
  commentId: F:Vim.Math3d.AABox.Min
  fullName: Vim.Math3d.AABox.Min
  nameWithType: AABox.Min
- uid: Vim.Math3d.AABox.MinSide
  name: MinSide
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MinSide
  commentId: P:Vim.Math3d.AABox.MinSide
  fullName: Vim.Math3d.AABox.MinSide
  nameWithType: AABox.MinSide
- uid: Vim.Math3d.AABox.MinSide*
  name: MinSide
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MinSide_
  commentId: Overload:Vim.Math3d.AABox.MinSide
  isSpec: "True"
  fullName: Vim.Math3d.AABox.MinSide
  nameWithType: AABox.MinSide
- uid: Vim.Math3d.AABox.MinValue
  name: MinValue
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_MinValue
  commentId: F:Vim.Math3d.AABox.MinValue
  fullName: Vim.Math3d.AABox.MinValue
  nameWithType: AABox.MinValue
- uid: Vim.Math3d.AABox.op_Addition(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: Addition(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Addition_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_Addition(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Addition(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.Addition(AABox, AABox)
- uid: Vim.Math3d.AABox.op_Addition(Vim.Math3d.AABox,Vim.Math3d.Vector3)
  name: Addition(AABox, Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Addition_Vim_Math3d_AABox_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.op_Addition(Vim.Math3d.AABox,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.Addition(Vim.Math3d.AABox, Vim.Math3d.Vector3)
  nameWithType: AABox.Addition(AABox, Vector3)
- uid: Vim.Math3d.AABox.op_Addition*
  name: Addition
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Addition_
  commentId: Overload:Vim.Math3d.AABox.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Addition
  nameWithType: AABox.Addition
- uid: Vim.Math3d.AABox.op_Equality(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: Equality(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Equality_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_Equality(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Equality(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.Equality(AABox, AABox)
- uid: Vim.Math3d.AABox.op_Equality*
  name: Equality
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Equality_
  commentId: Overload:Vim.Math3d.AABox.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Equality
  nameWithType: AABox.Equality
- uid: Vim.Math3d.AABox.op_GreaterThan(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: GreaterThan(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_GreaterThan_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_GreaterThan(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.GreaterThan(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.GreaterThan(AABox, AABox)
- uid: Vim.Math3d.AABox.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_GreaterThan_
  commentId: Overload:Vim.Math3d.AABox.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.AABox.GreaterThan
  nameWithType: AABox.GreaterThan
- uid: Vim.Math3d.AABox.op_GreaterThanOrEqual(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: GreaterThanOrEqual(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_GreaterThanOrEqual_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_GreaterThanOrEqual(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.GreaterThanOrEqual(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.GreaterThanOrEqual(AABox, AABox)
- uid: Vim.Math3d.AABox.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.AABox.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.AABox.GreaterThanOrEqual
  nameWithType: AABox.GreaterThanOrEqual
- uid: Vim.Math3d.AABox.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.AABox
  name: Implicit((Vector3 min, Vector3 max) to AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3___Vim_Math3d_AABox
  commentId: M:Vim.Math3d.AABox.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.AABox
  name.vb: Widening((min As Vector3, max As Vector3)(Of Vector3, Vector3) to AABox)
  fullName: Vim.Math3d.AABox.Implicit(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3> to Vim.Math3d.AABox)
  fullName.vb: Vim.Math3d.AABox.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3) to Vim.Math3d.AABox)
  nameWithType: AABox.Implicit((Vector3 min, Vector3 max) to AABox)
  nameWithType.vb: AABox.Widening((min As Vector3, max As Vector3)(Of Vector3, Vector3) to AABox)
- uid: Vim.Math3d.AABox.op_Implicit(Vim.Math3d.AABox)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name: Implicit(AABox to (Vector3 min, Vector3 max))
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Implicit_Vim_Math3d_AABox__System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.op_Implicit(Vim.Math3d.AABox)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name.vb: Widening(AABox to (min As Vector3, max As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.AABox.Implicit(Vim.Math3d.AABox to System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.AABox.Widening(Vim.Math3d.AABox to System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: AABox.Implicit(AABox to (Vector3 min, Vector3 max))
  nameWithType.vb: AABox.Widening(AABox to (min As Vector3, max As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.AABox.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Implicit_
  commentId: Overload:Vim.Math3d.AABox.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.AABox.Implicit
  fullName.vb: Vim.Math3d.AABox.Widening
  nameWithType: AABox.Implicit
  nameWithType.vb: AABox.Widening
- uid: Vim.Math3d.AABox.op_Inequality(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: Inequality(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Inequality_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_Inequality(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Inequality(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.Inequality(AABox, AABox)
- uid: Vim.Math3d.AABox.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Inequality_
  commentId: Overload:Vim.Math3d.AABox.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Inequality
  nameWithType: AABox.Inequality
- uid: Vim.Math3d.AABox.op_LessThan(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: LessThan(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_LessThan_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_LessThan(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.LessThan(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.LessThan(AABox, AABox)
- uid: Vim.Math3d.AABox.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_LessThan_
  commentId: Overload:Vim.Math3d.AABox.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.AABox.LessThan
  nameWithType: AABox.LessThan
- uid: Vim.Math3d.AABox.op_LessThanOrEqual(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: LessThanOrEqual(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_LessThanOrEqual_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_LessThanOrEqual(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.LessThanOrEqual(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.LessThanOrEqual(AABox, AABox)
- uid: Vim.Math3d.AABox.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.AABox.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.AABox.LessThanOrEqual
  nameWithType: AABox.LessThanOrEqual
- uid: Vim.Math3d.AABox.op_Subtraction(Vim.Math3d.AABox,Vim.Math3d.AABox)
  name: Subtraction(AABox, AABox)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Subtraction_Vim_Math3d_AABox_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.AABox.op_Subtraction(Vim.Math3d.AABox,Vim.Math3d.AABox)
  fullName: Vim.Math3d.AABox.Subtraction(Vim.Math3d.AABox, Vim.Math3d.AABox)
  nameWithType: AABox.Subtraction(AABox, AABox)
- uid: Vim.Math3d.AABox.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_op_Subtraction_
  commentId: Overload:Vim.Math3d.AABox.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Subtraction
  nameWithType: AABox.Subtraction
- uid: Vim.Math3d.AABox.Recenter
  name: Recenter()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Recenter
  commentId: M:Vim.Math3d.AABox.Recenter
  fullName: Vim.Math3d.AABox.Recenter()
  nameWithType: AABox.Recenter()
- uid: Vim.Math3d.AABox.Recenter*
  name: Recenter
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Recenter_
  commentId: Overload:Vim.Math3d.AABox.Recenter
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Recenter
  nameWithType: AABox.Recenter
- uid: Vim.Math3d.AABox.RelativePosition(Vim.Math3d.Vector3)
  name: RelativePosition(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_RelativePosition_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.RelativePosition(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.RelativePosition(Vim.Math3d.Vector3)
  nameWithType: AABox.RelativePosition(Vector3)
- uid: Vim.Math3d.AABox.RelativePosition*
  name: RelativePosition
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_RelativePosition_
  commentId: Overload:Vim.Math3d.AABox.RelativePosition
  isSpec: "True"
  fullName: Vim.Math3d.AABox.RelativePosition
  nameWithType: AABox.RelativePosition
- uid: Vim.Math3d.AABox.RightIndices
  name: RightIndices
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_RightIndices
  commentId: F:Vim.Math3d.AABox.RightIndices
  fullName: Vim.Math3d.AABox.RightIndices
  nameWithType: AABox.RightIndices
- uid: Vim.Math3d.AABox.Scale(System.Single)
  name: Scale(Single)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Scale_System_Single_
  commentId: M:Vim.Math3d.AABox.Scale(System.Single)
  fullName: Vim.Math3d.AABox.Scale(System.Single)
  nameWithType: AABox.Scale(Single)
- uid: Vim.Math3d.AABox.Scale*
  name: Scale
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Scale_
  commentId: Overload:Vim.Math3d.AABox.Scale
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Scale
  nameWithType: AABox.Scale
- uid: Vim.Math3d.AABox.SetCenter(Vim.Math3d.Vector3)
  name: SetCenter(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetCenter_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.SetCenter(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.SetCenter(Vim.Math3d.Vector3)
  nameWithType: AABox.SetCenter(Vector3)
- uid: Vim.Math3d.AABox.SetCenter*
  name: SetCenter
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetCenter_
  commentId: Overload:Vim.Math3d.AABox.SetCenter
  isSpec: "True"
  fullName: Vim.Math3d.AABox.SetCenter
  nameWithType: AABox.SetCenter
- uid: Vim.Math3d.AABox.SetExtent(Vim.Math3d.Vector3)
  name: SetExtent(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetExtent_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.SetExtent(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.SetExtent(Vim.Math3d.Vector3)
  nameWithType: AABox.SetExtent(Vector3)
- uid: Vim.Math3d.AABox.SetExtent*
  name: SetExtent
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetExtent_
  commentId: Overload:Vim.Math3d.AABox.SetExtent
  isSpec: "True"
  fullName: Vim.Math3d.AABox.SetExtent
  nameWithType: AABox.SetExtent
- uid: Vim.Math3d.AABox.SetMax(Vim.Math3d.Vector3)
  name: SetMax(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetMax_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.SetMax(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.SetMax(Vim.Math3d.Vector3)
  nameWithType: AABox.SetMax(Vector3)
- uid: Vim.Math3d.AABox.SetMax*
  name: SetMax
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetMax_
  commentId: Overload:Vim.Math3d.AABox.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.AABox.SetMax
  nameWithType: AABox.SetMax
- uid: Vim.Math3d.AABox.SetMin(Vim.Math3d.Vector3)
  name: SetMin(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetMin_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.SetMin(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.SetMin(Vim.Math3d.Vector3)
  nameWithType: AABox.SetMin(Vector3)
- uid: Vim.Math3d.AABox.SetMin*
  name: SetMin
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_SetMin_
  commentId: Overload:Vim.Math3d.AABox.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.AABox.SetMin
  nameWithType: AABox.SetMin
- uid: Vim.Math3d.AABox.TopIndices
  name: TopIndices
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_TopIndices
  commentId: F:Vim.Math3d.AABox.TopIndices
  fullName: Vim.Math3d.AABox.TopIndices
  nameWithType: AABox.TopIndices
- uid: Vim.Math3d.AABox.ToSphere
  name: ToSphere()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_ToSphere
  commentId: M:Vim.Math3d.AABox.ToSphere
  fullName: Vim.Math3d.AABox.ToSphere()
  nameWithType: AABox.ToSphere()
- uid: Vim.Math3d.AABox.ToSphere*
  name: ToSphere
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_ToSphere_
  commentId: Overload:Vim.Math3d.AABox.ToSphere
  isSpec: "True"
  fullName: Vim.Math3d.AABox.ToSphere
  nameWithType: AABox.ToSphere
- uid: Vim.Math3d.AABox.ToString
  name: ToString()
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_ToString
  commentId: M:Vim.Math3d.AABox.ToString
  fullName: Vim.Math3d.AABox.ToString()
  nameWithType: AABox.ToString()
- uid: Vim.Math3d.AABox.ToString*
  name: ToString
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_ToString_
  commentId: Overload:Vim.Math3d.AABox.ToString
  isSpec: "True"
  fullName: Vim.Math3d.AABox.ToString
  nameWithType: AABox.ToString
- uid: Vim.Math3d.AABox.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.AABox.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.AABox.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: AABox.Transform(Matrix4x4)
- uid: Vim.Math3d.AABox.Transform*
  name: Transform
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Transform_
  commentId: Overload:Vim.Math3d.AABox.Transform
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Transform
  nameWithType: AABox.Transform
- uid: Vim.Math3d.AABox.Translate(Vim.Math3d.Vector3)
  name: Translate(Vector3)
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Translate_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.AABox.Translate(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.AABox.Translate(Vim.Math3d.Vector3)
  nameWithType: AABox.Translate(Vector3)
- uid: Vim.Math3d.AABox.Translate*
  name: Translate
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Translate_
  commentId: Overload:Vim.Math3d.AABox.Translate
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Translate
  nameWithType: AABox.Translate
- uid: Vim.Math3d.AABox.Unit
  name: Unit
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Unit
  commentId: F:Vim.Math3d.AABox.Unit
  fullName: Vim.Math3d.AABox.Unit
  nameWithType: AABox.Unit
- uid: Vim.Math3d.AABox.Volume
  name: Volume
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Volume
  commentId: P:Vim.Math3d.AABox.Volume
  fullName: Vim.Math3d.AABox.Volume
  nameWithType: AABox.Volume
- uid: Vim.Math3d.AABox.Volume*
  name: Volume
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Volume_
  commentId: Overload:Vim.Math3d.AABox.Volume
  isSpec: "True"
  fullName: Vim.Math3d.AABox.Volume
  nameWithType: AABox.Volume
- uid: Vim.Math3d.AABox.Zero
  name: Zero
  href: api/Vim.Math3d.AABox.html#Vim_Math3d_AABox_Zero
  commentId: F:Vim.Math3d.AABox.Zero
  fullName: Vim.Math3d.AABox.Zero
  nameWithType: AABox.Zero
- uid: Vim.Math3d.AABox2D
  name: AABox2D
  href: api/Vim.Math3d.AABox2D.html
  commentId: T:Vim.Math3d.AABox2D
  fullName: Vim.Math3d.AABox2D
  nameWithType: AABox2D
- uid: Vim.Math3d.AABox2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: AABox2D((Vector2 min, Vector2 max))
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D__ctor_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.AABox2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: AABox2D((min As Vector2, max As Vector2)(Of Vector2, Vector2))
  fullName: Vim.Math3d.AABox2D.AABox2D(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.AABox2D.AABox2D(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: AABox2D.AABox2D((Vector2 min, Vector2 max))
  nameWithType.vb: AABox2D.AABox2D((min As Vector2, max As Vector2)(Of Vector2, Vector2))
- uid: Vim.Math3d.AABox2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: AABox2D(Vector2, Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D__ctor_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.AABox2D(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: AABox2D.AABox2D(Vector2, Vector2)
- uid: Vim.Math3d.AABox2D.#ctor*
  name: AABox2D
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D__ctor_
  commentId: Overload:Vim.Math3d.AABox2D.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.AABox2D
  nameWithType: AABox2D.AABox2D
- uid: Vim.Math3d.AABox2D.AlmostEquals(Vim.Math3d.AABox2D,System.Single)
  name: AlmostEquals(AABox2D, Single)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_AlmostEquals_Vim_Math3d_AABox2D_System_Single_
  commentId: M:Vim.Math3d.AABox2D.AlmostEquals(Vim.Math3d.AABox2D,System.Single)
  fullName: Vim.Math3d.AABox2D.AlmostEquals(Vim.Math3d.AABox2D, System.Single)
  nameWithType: AABox2D.AlmostEquals(AABox2D, Single)
- uid: Vim.Math3d.AABox2D.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_AlmostEquals_
  commentId: Overload:Vim.Math3d.AABox2D.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.AlmostEquals
  nameWithType: AABox2D.AlmostEquals
- uid: Vim.Math3d.AABox2D.Area
  name: Area
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Area
  commentId: P:Vim.Math3d.AABox2D.Area
  fullName: Vim.Math3d.AABox2D.Area
  nameWithType: AABox2D.Area
- uid: Vim.Math3d.AABox2D.Area*
  name: Area
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Area_
  commentId: Overload:Vim.Math3d.AABox2D.Area
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Area
  nameWithType: AABox2D.Area
- uid: Vim.Math3d.AABox2D.Center
  name: Center
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Center
  commentId: P:Vim.Math3d.AABox2D.Center
  fullName: Vim.Math3d.AABox2D.Center
  nameWithType: AABox2D.Center
- uid: Vim.Math3d.AABox2D.Center*
  name: Center
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Center_
  commentId: Overload:Vim.Math3d.AABox2D.Center
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Center
  nameWithType: AABox2D.Center
- uid: Vim.Math3d.AABox2D.CenterBottom
  name: CenterBottom
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CenterBottom
  commentId: P:Vim.Math3d.AABox2D.CenterBottom
  fullName: Vim.Math3d.AABox2D.CenterBottom
  nameWithType: AABox2D.CenterBottom
- uid: Vim.Math3d.AABox2D.CenterBottom*
  name: CenterBottom
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CenterBottom_
  commentId: Overload:Vim.Math3d.AABox2D.CenterBottom
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.CenterBottom
  nameWithType: AABox2D.CenterBottom
- uid: Vim.Math3d.AABox2D.CenterDistance(Vim.Math3d.Vector2)
  name: CenterDistance(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CenterDistance_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.CenterDistance(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.CenterDistance(Vim.Math3d.Vector2)
  nameWithType: AABox2D.CenterDistance(Vector2)
- uid: Vim.Math3d.AABox2D.CenterDistance*
  name: CenterDistance
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CenterDistance_
  commentId: Overload:Vim.Math3d.AABox2D.CenterDistance
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.CenterDistance
  nameWithType: AABox2D.CenterDistance
- uid: Vim.Math3d.AABox2D.CenterDistanceToOrigin
  name: CenterDistanceToOrigin
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CenterDistanceToOrigin
  commentId: P:Vim.Math3d.AABox2D.CenterDistanceToOrigin
  fullName: Vim.Math3d.AABox2D.CenterDistanceToOrigin
  nameWithType: AABox2D.CenterDistanceToOrigin
- uid: Vim.Math3d.AABox2D.CenterDistanceToOrigin*
  name: CenterDistanceToOrigin
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CenterDistanceToOrigin_
  commentId: Overload:Vim.Math3d.AABox2D.CenterDistanceToOrigin
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.CenterDistanceToOrigin
  nameWithType: AABox2D.CenterDistanceToOrigin
- uid: Vim.Math3d.AABox2D.CompareTo(Vim.Math3d.AABox2D)
  name: CompareTo(AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CompareTo_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.CompareTo(Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.CompareTo(Vim.Math3d.AABox2D)
  nameWithType: AABox2D.CompareTo(AABox2D)
- uid: Vim.Math3d.AABox2D.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CompareTo_
  commentId: Overload:Vim.Math3d.AABox2D.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.CompareTo
  nameWithType: AABox2D.CompareTo
- uid: Vim.Math3d.AABox2D.Contains(Vim.Math3d.AABox2D)
  name: Contains(AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Contains_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.Contains(Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Contains(Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Contains(AABox2D)
- uid: Vim.Math3d.AABox2D.Contains(Vim.Math3d.Vector2)
  name: Contains(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Contains_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.Contains(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.Contains(Vim.Math3d.Vector2)
  nameWithType: AABox2D.Contains(Vector2)
- uid: Vim.Math3d.AABox2D.Contains*
  name: Contains
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Contains_
  commentId: Overload:Vim.Math3d.AABox2D.Contains
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Contains
  nameWithType: AABox2D.Contains
- uid: Vim.Math3d.AABox2D.Corners
  name: Corners
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Corners
  commentId: P:Vim.Math3d.AABox2D.Corners
  fullName: Vim.Math3d.AABox2D.Corners
  nameWithType: AABox2D.Corners
- uid: Vim.Math3d.AABox2D.Corners*
  name: Corners
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Corners_
  commentId: Overload:Vim.Math3d.AABox2D.Corners
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Corners
  nameWithType: AABox2D.Corners
- uid: Vim.Math3d.AABox2D.Count
  name: Count
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Count
  commentId: P:Vim.Math3d.AABox2D.Count
  fullName: Vim.Math3d.AABox2D.Count
  nameWithType: AABox2D.Count
- uid: Vim.Math3d.AABox2D.Count*
  name: Count
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Count_
  commentId: Overload:Vim.Math3d.AABox2D.Count
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Count
  nameWithType: AABox2D.Count
- uid: Vim.Math3d.AABox2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: Create((Vector2 min, Vector2 max))
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Create_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.AABox2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: Create((min As Vector2, max As Vector2)(Of Vector2, Vector2))
  fullName: Vim.Math3d.AABox2D.Create(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.AABox2D.Create(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: AABox2D.Create((Vector2 min, Vector2 max))
  nameWithType.vb: AABox2D.Create((min As Vector2, max As Vector2)(Of Vector2, Vector2))
- uid: Vim.Math3d.AABox2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Create(Vector2, Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Create_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.Create(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: AABox2D.Create(Vector2, Vector2)
- uid: Vim.Math3d.AABox2D.Create*
  name: Create
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Create_
  commentId: Overload:Vim.Math3d.AABox2D.Create
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Create
  nameWithType: AABox2D.Create
- uid: Vim.Math3d.AABox2D.CreateFromPoints(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: CreateFromPoints(IEnumerable<Vector2>)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CreateFromPoints_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.AABox2D.CreateFromPoints(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: CreateFromPoints(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.AABox2D.CreateFromPoints(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.AABox2D.CreateFromPoints(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: AABox2D.CreateFromPoints(IEnumerable<Vector2>)
  nameWithType.vb: AABox2D.CreateFromPoints(IEnumerable(Of Vector2))
- uid: Vim.Math3d.AABox2D.CreateFromPoints(Vim.Math3d.Vector2[])
  name: CreateFromPoints(Vector2[])
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CreateFromPoints_Vim_Math3d_Vector2___
  commentId: M:Vim.Math3d.AABox2D.CreateFromPoints(Vim.Math3d.Vector2[])
  name.vb: CreateFromPoints(Vector2())
  fullName: Vim.Math3d.AABox2D.CreateFromPoints(Vim.Math3d.Vector2[])
  fullName.vb: Vim.Math3d.AABox2D.CreateFromPoints(Vim.Math3d.Vector2())
  nameWithType: AABox2D.CreateFromPoints(Vector2[])
  nameWithType.vb: AABox2D.CreateFromPoints(Vector2())
- uid: Vim.Math3d.AABox2D.CreateFromPoints*
  name: CreateFromPoints
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_CreateFromPoints_
  commentId: Overload:Vim.Math3d.AABox2D.CreateFromPoints
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.CreateFromPoints
  nameWithType: AABox2D.CreateFromPoints
- uid: Vim.Math3d.AABox2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name: Deconstruct(out Vector2, out Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Deconstruct_Vim_Math3d_Vector2__Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.AABox2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name.vb: Deconstruct(ByRef Vector2, ByRef Vector2)
  fullName: Vim.Math3d.AABox2D.Deconstruct(out Vim.Math3d.Vector2, out Vim.Math3d.Vector2)
  fullName.vb: Vim.Math3d.AABox2D.Deconstruct(ByRef Vim.Math3d.Vector2, ByRef Vim.Math3d.Vector2)
  nameWithType: AABox2D.Deconstruct(out Vector2, out Vector2)
  nameWithType.vb: AABox2D.Deconstruct(ByRef Vector2, ByRef Vector2)
- uid: Vim.Math3d.AABox2D.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Deconstruct_
  commentId: Overload:Vim.Math3d.AABox2D.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Deconstruct
  nameWithType: AABox2D.Deconstruct
- uid: Vim.Math3d.AABox2D.Diagonal
  name: Diagonal
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Diagonal
  commentId: P:Vim.Math3d.AABox2D.Diagonal
  fullName: Vim.Math3d.AABox2D.Diagonal
  nameWithType: AABox2D.Diagonal
- uid: Vim.Math3d.AABox2D.Diagonal*
  name: Diagonal
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Diagonal_
  commentId: Overload:Vim.Math3d.AABox2D.Diagonal
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Diagonal
  nameWithType: AABox2D.Diagonal
- uid: Vim.Math3d.AABox2D.Distance(Vim.Math3d.Vector2)
  name: Distance(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Distance_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.Distance(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.Distance(Vim.Math3d.Vector2)
  nameWithType: AABox2D.Distance(Vector2)
- uid: Vim.Math3d.AABox2D.Distance*
  name: Distance
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Distance_
  commentId: Overload:Vim.Math3d.AABox2D.Distance
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Distance
  nameWithType: AABox2D.Distance
- uid: Vim.Math3d.AABox2D.DistanceToOrigin
  name: DistanceToOrigin
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_DistanceToOrigin
  commentId: P:Vim.Math3d.AABox2D.DistanceToOrigin
  fullName: Vim.Math3d.AABox2D.DistanceToOrigin
  nameWithType: AABox2D.DistanceToOrigin
- uid: Vim.Math3d.AABox2D.DistanceToOrigin*
  name: DistanceToOrigin
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_DistanceToOrigin_
  commentId: Overload:Vim.Math3d.AABox2D.DistanceToOrigin
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.DistanceToOrigin
  nameWithType: AABox2D.DistanceToOrigin
- uid: Vim.Math3d.AABox2D.Empty
  name: Empty
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Empty
  commentId: F:Vim.Math3d.AABox2D.Empty
  fullName: Vim.Math3d.AABox2D.Empty
  nameWithType: AABox2D.Empty
- uid: Vim.Math3d.AABox2D.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Equals_System_Object_
  commentId: M:Vim.Math3d.AABox2D.Equals(System.Object)
  fullName: Vim.Math3d.AABox2D.Equals(System.Object)
  nameWithType: AABox2D.Equals(Object)
- uid: Vim.Math3d.AABox2D.Equals(Vim.Math3d.AABox2D)
  name: Equals(AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Equals_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.Equals(Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Equals(Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Equals(AABox2D)
- uid: Vim.Math3d.AABox2D.Equals*
  name: Equals
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Equals_
  commentId: Overload:Vim.Math3d.AABox2D.Equals
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Equals
  nameWithType: AABox2D.Equals
- uid: Vim.Math3d.AABox2D.Extent
  name: Extent
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Extent
  commentId: P:Vim.Math3d.AABox2D.Extent
  fullName: Vim.Math3d.AABox2D.Extent
  nameWithType: AABox2D.Extent
- uid: Vim.Math3d.AABox2D.Extent*
  name: Extent
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Extent_
  commentId: Overload:Vim.Math3d.AABox2D.Extent
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Extent
  nameWithType: AABox2D.Extent
- uid: Vim.Math3d.AABox2D.GetCorners(Vim.Math3d.Vector2[])
  name: GetCorners(Vector2[])
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_GetCorners_Vim_Math3d_Vector2___
  commentId: M:Vim.Math3d.AABox2D.GetCorners(Vim.Math3d.Vector2[])
  name.vb: GetCorners(Vector2())
  fullName: Vim.Math3d.AABox2D.GetCorners(Vim.Math3d.Vector2[])
  fullName.vb: Vim.Math3d.AABox2D.GetCorners(Vim.Math3d.Vector2())
  nameWithType: AABox2D.GetCorners(Vector2[])
  nameWithType.vb: AABox2D.GetCorners(Vector2())
- uid: Vim.Math3d.AABox2D.GetCorners*
  name: GetCorners
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_GetCorners_
  commentId: Overload:Vim.Math3d.AABox2D.GetCorners
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.GetCorners
  nameWithType: AABox2D.GetCorners
- uid: Vim.Math3d.AABox2D.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_GetHashCode
  commentId: M:Vim.Math3d.AABox2D.GetHashCode
  fullName: Vim.Math3d.AABox2D.GetHashCode()
  nameWithType: AABox2D.GetHashCode()
- uid: Vim.Math3d.AABox2D.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_GetHashCode_
  commentId: Overload:Vim.Math3d.AABox2D.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.GetHashCode
  nameWithType: AABox2D.GetHashCode
- uid: Vim.Math3d.AABox2D.Indices
  name: Indices
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Indices
  commentId: F:Vim.Math3d.AABox2D.Indices
  fullName: Vim.Math3d.AABox2D.Indices
  nameWithType: AABox2D.Indices
- uid: Vim.Math3d.AABox2D.Intersection(Vim.Math3d.AABox2D)
  name: Intersection(AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Intersection_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.Intersection(Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Intersection(Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Intersection(AABox2D)
- uid: Vim.Math3d.AABox2D.Intersection*
  name: Intersection
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Intersection_
  commentId: Overload:Vim.Math3d.AABox2D.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Intersection
  nameWithType: AABox2D.Intersection
- uid: Vim.Math3d.AABox2D.Intersects(Vim.Math3d.AABox2D)
  name: Intersects(AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Intersects_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.Intersects(Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Intersects(Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Intersects(AABox2D)
- uid: Vim.Math3d.AABox2D.Intersects(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: Intersects(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Intersects_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.Intersects(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Intersects(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Intersects(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.Intersects*
  name: Intersects
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Intersects_
  commentId: Overload:Vim.Math3d.AABox2D.Intersects
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Intersects
  nameWithType: AABox2D.Intersects
- uid: Vim.Math3d.AABox2D.IsEmpty
  name: IsEmpty
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsEmpty
  commentId: P:Vim.Math3d.AABox2D.IsEmpty
  fullName: Vim.Math3d.AABox2D.IsEmpty
  nameWithType: AABox2D.IsEmpty
- uid: Vim.Math3d.AABox2D.IsEmpty*
  name: IsEmpty
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsEmpty_
  commentId: Overload:Vim.Math3d.AABox2D.IsEmpty
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.IsEmpty
  nameWithType: AABox2D.IsEmpty
- uid: Vim.Math3d.AABox2D.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsInfinity
  commentId: M:Vim.Math3d.AABox2D.IsInfinity
  fullName: Vim.Math3d.AABox2D.IsInfinity()
  nameWithType: AABox2D.IsInfinity()
- uid: Vim.Math3d.AABox2D.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsInfinity_
  commentId: Overload:Vim.Math3d.AABox2D.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.IsInfinity
  nameWithType: AABox2D.IsInfinity
- uid: Vim.Math3d.AABox2D.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsNaN
  commentId: M:Vim.Math3d.AABox2D.IsNaN
  fullName: Vim.Math3d.AABox2D.IsNaN()
  nameWithType: AABox2D.IsNaN()
- uid: Vim.Math3d.AABox2D.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsNaN_
  commentId: Overload:Vim.Math3d.AABox2D.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.IsNaN
  nameWithType: AABox2D.IsNaN
- uid: Vim.Math3d.AABox2D.IsValid
  name: IsValid
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsValid
  commentId: P:Vim.Math3d.AABox2D.IsValid
  fullName: Vim.Math3d.AABox2D.IsValid
  nameWithType: AABox2D.IsValid
- uid: Vim.Math3d.AABox2D.IsValid*
  name: IsValid
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_IsValid_
  commentId: Overload:Vim.Math3d.AABox2D.IsValid
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.IsValid
  nameWithType: AABox2D.IsValid
- uid: Vim.Math3d.AABox2D.Item(System.Int32)
  name: Item[Int32]
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Item_System_Int32_
  commentId: P:Vim.Math3d.AABox2D.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Vim.Math3d.AABox2D.Item[System.Int32]
  fullName.vb: Vim.Math3d.AABox2D.Item(System.Int32)
  nameWithType: AABox2D.Item[Int32]
  nameWithType.vb: AABox2D.Item(Int32)
- uid: Vim.Math3d.AABox2D.Item*
  name: Item
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Item_
  commentId: Overload:Vim.Math3d.AABox2D.Item
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Item
  nameWithType: AABox2D.Item
- uid: Vim.Math3d.AABox2D.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Magnitude
  commentId: M:Vim.Math3d.AABox2D.Magnitude
  fullName: Vim.Math3d.AABox2D.Magnitude()
  nameWithType: AABox2D.Magnitude()
- uid: Vim.Math3d.AABox2D.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Magnitude_
  commentId: Overload:Vim.Math3d.AABox2D.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Magnitude
  nameWithType: AABox2D.Magnitude
- uid: Vim.Math3d.AABox2D.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MagnitudeSquared
  commentId: M:Vim.Math3d.AABox2D.MagnitudeSquared
  fullName: Vim.Math3d.AABox2D.MagnitudeSquared()
  nameWithType: AABox2D.MagnitudeSquared()
- uid: Vim.Math3d.AABox2D.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.AABox2D.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.MagnitudeSquared
  nameWithType: AABox2D.MagnitudeSquared
- uid: Vim.Math3d.AABox2D.Max
  name: Max
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Max
  commentId: F:Vim.Math3d.AABox2D.Max
  fullName: Vim.Math3d.AABox2D.Max
  nameWithType: AABox2D.Max
- uid: Vim.Math3d.AABox2D.MaxSide
  name: MaxSide
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MaxSide
  commentId: P:Vim.Math3d.AABox2D.MaxSide
  fullName: Vim.Math3d.AABox2D.MaxSide
  nameWithType: AABox2D.MaxSide
- uid: Vim.Math3d.AABox2D.MaxSide*
  name: MaxSide
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MaxSide_
  commentId: Overload:Vim.Math3d.AABox2D.MaxSide
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.MaxSide
  nameWithType: AABox2D.MaxSide
- uid: Vim.Math3d.AABox2D.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MaxValue
  commentId: F:Vim.Math3d.AABox2D.MaxValue
  fullName: Vim.Math3d.AABox2D.MaxValue
  nameWithType: AABox2D.MaxValue
- uid: Vim.Math3d.AABox2D.Merge(Vim.Math3d.AABox2D)
  name: Merge(AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Merge_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.Merge(Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Merge(Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Merge(AABox2D)
- uid: Vim.Math3d.AABox2D.Merge(Vim.Math3d.Vector2)
  name: Merge(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Merge_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.Merge(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.Merge(Vim.Math3d.Vector2)
  nameWithType: AABox2D.Merge(Vector2)
- uid: Vim.Math3d.AABox2D.Merge*
  name: Merge
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Merge_
  commentId: Overload:Vim.Math3d.AABox2D.Merge
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Merge
  nameWithType: AABox2D.Merge
- uid: Vim.Math3d.AABox2D.Min
  name: Min
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Min
  commentId: F:Vim.Math3d.AABox2D.Min
  fullName: Vim.Math3d.AABox2D.Min
  nameWithType: AABox2D.Min
- uid: Vim.Math3d.AABox2D.MinSide
  name: MinSide
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MinSide
  commentId: P:Vim.Math3d.AABox2D.MinSide
  fullName: Vim.Math3d.AABox2D.MinSide
  nameWithType: AABox2D.MinSide
- uid: Vim.Math3d.AABox2D.MinSide*
  name: MinSide
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MinSide_
  commentId: Overload:Vim.Math3d.AABox2D.MinSide
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.MinSide
  nameWithType: AABox2D.MinSide
- uid: Vim.Math3d.AABox2D.MinValue
  name: MinValue
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_MinValue
  commentId: F:Vim.Math3d.AABox2D.MinValue
  fullName: Vim.Math3d.AABox2D.MinValue
  nameWithType: AABox2D.MinValue
- uid: Vim.Math3d.AABox2D.op_Addition(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: Addition(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Addition_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_Addition(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Addition(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Addition(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_Addition(Vim.Math3d.AABox2D,Vim.Math3d.Vector2)
  name: Addition(AABox2D, Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Addition_Vim_Math3d_AABox2D_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.op_Addition(Vim.Math3d.AABox2D,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.Addition(Vim.Math3d.AABox2D, Vim.Math3d.Vector2)
  nameWithType: AABox2D.Addition(AABox2D, Vector2)
- uid: Vim.Math3d.AABox2D.op_Addition*
  name: Addition
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Addition_
  commentId: Overload:Vim.Math3d.AABox2D.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Addition
  nameWithType: AABox2D.Addition
- uid: Vim.Math3d.AABox2D.op_Equality(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: Equality(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Equality_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_Equality(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Equality(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Equality(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_Equality*
  name: Equality
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Equality_
  commentId: Overload:Vim.Math3d.AABox2D.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Equality
  nameWithType: AABox2D.Equality
- uid: Vim.Math3d.AABox2D.op_GreaterThan(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: GreaterThan(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_GreaterThan_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_GreaterThan(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.GreaterThan(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.GreaterThan(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_GreaterThan_
  commentId: Overload:Vim.Math3d.AABox2D.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.GreaterThan
  nameWithType: AABox2D.GreaterThan
- uid: Vim.Math3d.AABox2D.op_GreaterThanOrEqual(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: GreaterThanOrEqual(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_GreaterThanOrEqual_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_GreaterThanOrEqual(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.GreaterThanOrEqual(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.GreaterThanOrEqual(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.AABox2D.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.GreaterThanOrEqual
  nameWithType: AABox2D.GreaterThanOrEqual
- uid: Vim.Math3d.AABox2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.AABox2D
  name: Implicit((Vector2 min, Vector2 max) to AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Implicit_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2___Vim_Math3d_AABox2D
  commentId: M:Vim.Math3d.AABox2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.AABox2D
  name.vb: Widening((min As Vector2, max As Vector2)(Of Vector2, Vector2) to AABox2D)
  fullName: Vim.Math3d.AABox2D.Implicit(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2> to Vim.Math3d.AABox2D)
  fullName.vb: Vim.Math3d.AABox2D.Widening(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2) to Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Implicit((Vector2 min, Vector2 max) to AABox2D)
  nameWithType.vb: AABox2D.Widening((min As Vector2, max As Vector2)(Of Vector2, Vector2) to AABox2D)
- uid: Vim.Math3d.AABox2D.op_Implicit(Vim.Math3d.AABox2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name: Implicit(AABox2D to (Vector2 min, Vector2 max))
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Implicit_Vim_Math3d_AABox2D__System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.op_Implicit(Vim.Math3d.AABox2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name.vb: Widening(AABox2D to (min As Vector2, max As Vector2)(Of Vector2, Vector2))
  fullName: Vim.Math3d.AABox2D.Implicit(Vim.Math3d.AABox2D to System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.AABox2D.Widening(Vim.Math3d.AABox2D to System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: AABox2D.Implicit(AABox2D to (Vector2 min, Vector2 max))
  nameWithType.vb: AABox2D.Widening(AABox2D to (min As Vector2, max As Vector2)(Of Vector2, Vector2))
- uid: Vim.Math3d.AABox2D.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Implicit_
  commentId: Overload:Vim.Math3d.AABox2D.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.AABox2D.Implicit
  fullName.vb: Vim.Math3d.AABox2D.Widening
  nameWithType: AABox2D.Implicit
  nameWithType.vb: AABox2D.Widening
- uid: Vim.Math3d.AABox2D.op_Inequality(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: Inequality(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Inequality_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_Inequality(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Inequality(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Inequality(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Inequality_
  commentId: Overload:Vim.Math3d.AABox2D.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Inequality
  nameWithType: AABox2D.Inequality
- uid: Vim.Math3d.AABox2D.op_LessThan(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: LessThan(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_LessThan_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_LessThan(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.LessThan(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.LessThan(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_LessThan_
  commentId: Overload:Vim.Math3d.AABox2D.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.LessThan
  nameWithType: AABox2D.LessThan
- uid: Vim.Math3d.AABox2D.op_LessThanOrEqual(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: LessThanOrEqual(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_LessThanOrEqual_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_LessThanOrEqual(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.LessThanOrEqual(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.LessThanOrEqual(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.AABox2D.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.LessThanOrEqual
  nameWithType: AABox2D.LessThanOrEqual
- uid: Vim.Math3d.AABox2D.op_Subtraction(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  name: Subtraction(AABox2D, AABox2D)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Subtraction_Vim_Math3d_AABox2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.AABox2D.op_Subtraction(Vim.Math3d.AABox2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.AABox2D.Subtraction(Vim.Math3d.AABox2D, Vim.Math3d.AABox2D)
  nameWithType: AABox2D.Subtraction(AABox2D, AABox2D)
- uid: Vim.Math3d.AABox2D.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_op_Subtraction_
  commentId: Overload:Vim.Math3d.AABox2D.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Subtraction
  nameWithType: AABox2D.Subtraction
- uid: Vim.Math3d.AABox2D.Recenter
  name: Recenter()
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Recenter
  commentId: M:Vim.Math3d.AABox2D.Recenter
  fullName: Vim.Math3d.AABox2D.Recenter()
  nameWithType: AABox2D.Recenter()
- uid: Vim.Math3d.AABox2D.Recenter*
  name: Recenter
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Recenter_
  commentId: Overload:Vim.Math3d.AABox2D.Recenter
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Recenter
  nameWithType: AABox2D.Recenter
- uid: Vim.Math3d.AABox2D.RelativePosition(Vim.Math3d.Vector2)
  name: RelativePosition(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_RelativePosition_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.RelativePosition(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.RelativePosition(Vim.Math3d.Vector2)
  nameWithType: AABox2D.RelativePosition(Vector2)
- uid: Vim.Math3d.AABox2D.RelativePosition*
  name: RelativePosition
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_RelativePosition_
  commentId: Overload:Vim.Math3d.AABox2D.RelativePosition
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.RelativePosition
  nameWithType: AABox2D.RelativePosition
- uid: Vim.Math3d.AABox2D.Scale(System.Single)
  name: Scale(Single)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Scale_System_Single_
  commentId: M:Vim.Math3d.AABox2D.Scale(System.Single)
  fullName: Vim.Math3d.AABox2D.Scale(System.Single)
  nameWithType: AABox2D.Scale(Single)
- uid: Vim.Math3d.AABox2D.Scale*
  name: Scale
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Scale_
  commentId: Overload:Vim.Math3d.AABox2D.Scale
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Scale
  nameWithType: AABox2D.Scale
- uid: Vim.Math3d.AABox2D.SetMax(Vim.Math3d.Vector2)
  name: SetMax(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_SetMax_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.SetMax(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.SetMax(Vim.Math3d.Vector2)
  nameWithType: AABox2D.SetMax(Vector2)
- uid: Vim.Math3d.AABox2D.SetMax*
  name: SetMax
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_SetMax_
  commentId: Overload:Vim.Math3d.AABox2D.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.SetMax
  nameWithType: AABox2D.SetMax
- uid: Vim.Math3d.AABox2D.SetMin(Vim.Math3d.Vector2)
  name: SetMin(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_SetMin_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.SetMin(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.SetMin(Vim.Math3d.Vector2)
  nameWithType: AABox2D.SetMin(Vector2)
- uid: Vim.Math3d.AABox2D.SetMin*
  name: SetMin
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_SetMin_
  commentId: Overload:Vim.Math3d.AABox2D.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.SetMin
  nameWithType: AABox2D.SetMin
- uid: Vim.Math3d.AABox2D.ToString
  name: ToString()
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_ToString
  commentId: M:Vim.Math3d.AABox2D.ToString
  fullName: Vim.Math3d.AABox2D.ToString()
  nameWithType: AABox2D.ToString()
- uid: Vim.Math3d.AABox2D.ToString*
  name: ToString
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_ToString_
  commentId: Overload:Vim.Math3d.AABox2D.ToString
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.ToString
  nameWithType: AABox2D.ToString
- uid: Vim.Math3d.AABox2D.Translate(Vim.Math3d.Vector2)
  name: Translate(Vector2)
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Translate_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.AABox2D.Translate(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.AABox2D.Translate(Vim.Math3d.Vector2)
  nameWithType: AABox2D.Translate(Vector2)
- uid: Vim.Math3d.AABox2D.Translate*
  name: Translate
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Translate_
  commentId: Overload:Vim.Math3d.AABox2D.Translate
  isSpec: "True"
  fullName: Vim.Math3d.AABox2D.Translate
  nameWithType: AABox2D.Translate
- uid: Vim.Math3d.AABox2D.Unit
  name: Unit
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Unit
  commentId: F:Vim.Math3d.AABox2D.Unit
  fullName: Vim.Math3d.AABox2D.Unit
  nameWithType: AABox2D.Unit
- uid: Vim.Math3d.AABox2D.Zero
  name: Zero
  href: api/Vim.Math3d.AABox2D.html#Vim_Math3d_AABox2D_Zero
  commentId: F:Vim.Math3d.AABox2D.Zero
  fullName: Vim.Math3d.AABox2D.Zero
  nameWithType: AABox2D.Zero
- uid: Vim.Math3d.AABox4D
  name: AABox4D
  href: api/Vim.Math3d.AABox4D.html
  commentId: T:Vim.Math3d.AABox4D
  fullName: Vim.Math3d.AABox4D
  nameWithType: AABox4D
- uid: Vim.Math3d.AABox4D.#ctor(System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4})
  name: AABox4D((Vector4 min, Vector4 max))
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D__ctor_System_ValueTuple_Vim_Math3d_Vector4_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.AABox4D.#ctor(System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4})
  name.vb: AABox4D((min As Vector4, max As Vector4)(Of Vector4, Vector4))
  fullName: Vim.Math3d.AABox4D.AABox4D(System.ValueTuple<Vim.Math3d.Vector4, Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.AABox4D.AABox4D(System.ValueTuple(Of Vim.Math3d.Vector4, Vim.Math3d.Vector4))
  nameWithType: AABox4D.AABox4D((Vector4 min, Vector4 max))
  nameWithType.vb: AABox4D.AABox4D((min As Vector4, max As Vector4)(Of Vector4, Vector4))
- uid: Vim.Math3d.AABox4D.#ctor(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: AABox4D(Vector4, Vector4)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D__ctor_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.AABox4D.#ctor(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.AABox4D.AABox4D(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: AABox4D.AABox4D(Vector4, Vector4)
- uid: Vim.Math3d.AABox4D.#ctor*
  name: AABox4D
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D__ctor_
  commentId: Overload:Vim.Math3d.AABox4D.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.AABox4D
  nameWithType: AABox4D.AABox4D
- uid: Vim.Math3d.AABox4D.AlmostEquals(Vim.Math3d.AABox4D,System.Single)
  name: AlmostEquals(AABox4D, Single)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_AlmostEquals_Vim_Math3d_AABox4D_System_Single_
  commentId: M:Vim.Math3d.AABox4D.AlmostEquals(Vim.Math3d.AABox4D,System.Single)
  fullName: Vim.Math3d.AABox4D.AlmostEquals(Vim.Math3d.AABox4D, System.Single)
  nameWithType: AABox4D.AlmostEquals(AABox4D, Single)
- uid: Vim.Math3d.AABox4D.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_AlmostEquals_
  commentId: Overload:Vim.Math3d.AABox4D.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.AlmostEquals
  nameWithType: AABox4D.AlmostEquals
- uid: Vim.Math3d.AABox4D.Center
  name: Center
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Center
  commentId: P:Vim.Math3d.AABox4D.Center
  fullName: Vim.Math3d.AABox4D.Center
  nameWithType: AABox4D.Center
- uid: Vim.Math3d.AABox4D.Center*
  name: Center
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Center_
  commentId: Overload:Vim.Math3d.AABox4D.Center
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Center
  nameWithType: AABox4D.Center
- uid: Vim.Math3d.AABox4D.CompareTo(Vim.Math3d.AABox4D)
  name: CompareTo(AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_CompareTo_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.CompareTo(Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.CompareTo(Vim.Math3d.AABox4D)
  nameWithType: AABox4D.CompareTo(AABox4D)
- uid: Vim.Math3d.AABox4D.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_CompareTo_
  commentId: Overload:Vim.Math3d.AABox4D.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.CompareTo
  nameWithType: AABox4D.CompareTo
- uid: Vim.Math3d.AABox4D.Create(System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4})
  name: Create((Vector4 min, Vector4 max))
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Create_System_ValueTuple_Vim_Math3d_Vector4_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.AABox4D.Create(System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4})
  name.vb: Create((min As Vector4, max As Vector4)(Of Vector4, Vector4))
  fullName: Vim.Math3d.AABox4D.Create(System.ValueTuple<Vim.Math3d.Vector4, Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.AABox4D.Create(System.ValueTuple(Of Vim.Math3d.Vector4, Vim.Math3d.Vector4))
  nameWithType: AABox4D.Create((Vector4 min, Vector4 max))
  nameWithType.vb: AABox4D.Create((min As Vector4, max As Vector4)(Of Vector4, Vector4))
- uid: Vim.Math3d.AABox4D.Create(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Create(Vector4, Vector4)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Create_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.AABox4D.Create(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.AABox4D.Create(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: AABox4D.Create(Vector4, Vector4)
- uid: Vim.Math3d.AABox4D.Create*
  name: Create
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Create_
  commentId: Overload:Vim.Math3d.AABox4D.Create
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Create
  nameWithType: AABox4D.Create
- uid: Vim.Math3d.AABox4D.Deconstruct(Vim.Math3d.Vector4@,Vim.Math3d.Vector4@)
  name: Deconstruct(out Vector4, out Vector4)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Deconstruct_Vim_Math3d_Vector4__Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.AABox4D.Deconstruct(Vim.Math3d.Vector4@,Vim.Math3d.Vector4@)
  name.vb: Deconstruct(ByRef Vector4, ByRef Vector4)
  fullName: Vim.Math3d.AABox4D.Deconstruct(out Vim.Math3d.Vector4, out Vim.Math3d.Vector4)
  fullName.vb: Vim.Math3d.AABox4D.Deconstruct(ByRef Vim.Math3d.Vector4, ByRef Vim.Math3d.Vector4)
  nameWithType: AABox4D.Deconstruct(out Vector4, out Vector4)
  nameWithType.vb: AABox4D.Deconstruct(ByRef Vector4, ByRef Vector4)
- uid: Vim.Math3d.AABox4D.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Deconstruct_
  commentId: Overload:Vim.Math3d.AABox4D.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Deconstruct
  nameWithType: AABox4D.Deconstruct
- uid: Vim.Math3d.AABox4D.Empty
  name: Empty
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Empty
  commentId: F:Vim.Math3d.AABox4D.Empty
  fullName: Vim.Math3d.AABox4D.Empty
  nameWithType: AABox4D.Empty
- uid: Vim.Math3d.AABox4D.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Equals_System_Object_
  commentId: M:Vim.Math3d.AABox4D.Equals(System.Object)
  fullName: Vim.Math3d.AABox4D.Equals(System.Object)
  nameWithType: AABox4D.Equals(Object)
- uid: Vim.Math3d.AABox4D.Equals(Vim.Math3d.AABox4D)
  name: Equals(AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Equals_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.Equals(Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.Equals(Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Equals(AABox4D)
- uid: Vim.Math3d.AABox4D.Equals*
  name: Equals
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Equals_
  commentId: Overload:Vim.Math3d.AABox4D.Equals
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Equals
  nameWithType: AABox4D.Equals
- uid: Vim.Math3d.AABox4D.Extent
  name: Extent
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Extent
  commentId: P:Vim.Math3d.AABox4D.Extent
  fullName: Vim.Math3d.AABox4D.Extent
  nameWithType: AABox4D.Extent
- uid: Vim.Math3d.AABox4D.Extent*
  name: Extent
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Extent_
  commentId: Overload:Vim.Math3d.AABox4D.Extent
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Extent
  nameWithType: AABox4D.Extent
- uid: Vim.Math3d.AABox4D.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_GetHashCode
  commentId: M:Vim.Math3d.AABox4D.GetHashCode
  fullName: Vim.Math3d.AABox4D.GetHashCode()
  nameWithType: AABox4D.GetHashCode()
- uid: Vim.Math3d.AABox4D.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_GetHashCode_
  commentId: Overload:Vim.Math3d.AABox4D.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.GetHashCode
  nameWithType: AABox4D.GetHashCode
- uid: Vim.Math3d.AABox4D.Intersection(Vim.Math3d.AABox4D)
  name: Intersection(AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Intersection_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.Intersection(Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.Intersection(Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Intersection(AABox4D)
- uid: Vim.Math3d.AABox4D.Intersection*
  name: Intersection
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Intersection_
  commentId: Overload:Vim.Math3d.AABox4D.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Intersection
  nameWithType: AABox4D.Intersection
- uid: Vim.Math3d.AABox4D.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_IsInfinity
  commentId: M:Vim.Math3d.AABox4D.IsInfinity
  fullName: Vim.Math3d.AABox4D.IsInfinity()
  nameWithType: AABox4D.IsInfinity()
- uid: Vim.Math3d.AABox4D.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_IsInfinity_
  commentId: Overload:Vim.Math3d.AABox4D.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.IsInfinity
  nameWithType: AABox4D.IsInfinity
- uid: Vim.Math3d.AABox4D.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_IsNaN
  commentId: M:Vim.Math3d.AABox4D.IsNaN
  fullName: Vim.Math3d.AABox4D.IsNaN()
  nameWithType: AABox4D.IsNaN()
- uid: Vim.Math3d.AABox4D.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_IsNaN_
  commentId: Overload:Vim.Math3d.AABox4D.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.IsNaN
  nameWithType: AABox4D.IsNaN
- uid: Vim.Math3d.AABox4D.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Magnitude
  commentId: M:Vim.Math3d.AABox4D.Magnitude
  fullName: Vim.Math3d.AABox4D.Magnitude()
  nameWithType: AABox4D.Magnitude()
- uid: Vim.Math3d.AABox4D.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Magnitude_
  commentId: Overload:Vim.Math3d.AABox4D.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Magnitude
  nameWithType: AABox4D.Magnitude
- uid: Vim.Math3d.AABox4D.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_MagnitudeSquared
  commentId: M:Vim.Math3d.AABox4D.MagnitudeSquared
  fullName: Vim.Math3d.AABox4D.MagnitudeSquared()
  nameWithType: AABox4D.MagnitudeSquared()
- uid: Vim.Math3d.AABox4D.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.AABox4D.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.MagnitudeSquared
  nameWithType: AABox4D.MagnitudeSquared
- uid: Vim.Math3d.AABox4D.Max
  name: Max
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Max
  commentId: F:Vim.Math3d.AABox4D.Max
  fullName: Vim.Math3d.AABox4D.Max
  nameWithType: AABox4D.Max
- uid: Vim.Math3d.AABox4D.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_MaxValue
  commentId: F:Vim.Math3d.AABox4D.MaxValue
  fullName: Vim.Math3d.AABox4D.MaxValue
  nameWithType: AABox4D.MaxValue
- uid: Vim.Math3d.AABox4D.Merge(Vim.Math3d.AABox4D)
  name: Merge(AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Merge_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.Merge(Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.Merge(Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Merge(AABox4D)
- uid: Vim.Math3d.AABox4D.Merge(Vim.Math3d.Vector4)
  name: Merge(Vector4)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Merge_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.AABox4D.Merge(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.AABox4D.Merge(Vim.Math3d.Vector4)
  nameWithType: AABox4D.Merge(Vector4)
- uid: Vim.Math3d.AABox4D.Merge*
  name: Merge
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Merge_
  commentId: Overload:Vim.Math3d.AABox4D.Merge
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Merge
  nameWithType: AABox4D.Merge
- uid: Vim.Math3d.AABox4D.Min
  name: Min
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Min
  commentId: F:Vim.Math3d.AABox4D.Min
  fullName: Vim.Math3d.AABox4D.Min
  nameWithType: AABox4D.Min
- uid: Vim.Math3d.AABox4D.MinValue
  name: MinValue
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_MinValue
  commentId: F:Vim.Math3d.AABox4D.MinValue
  fullName: Vim.Math3d.AABox4D.MinValue
  nameWithType: AABox4D.MinValue
- uid: Vim.Math3d.AABox4D.op_Addition(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: Addition(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Addition_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_Addition(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.Addition(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Addition(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_Addition(Vim.Math3d.AABox4D,Vim.Math3d.Vector4)
  name: Addition(AABox4D, Vector4)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Addition_Vim_Math3d_AABox4D_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.AABox4D.op_Addition(Vim.Math3d.AABox4D,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.AABox4D.Addition(Vim.Math3d.AABox4D, Vim.Math3d.Vector4)
  nameWithType: AABox4D.Addition(AABox4D, Vector4)
- uid: Vim.Math3d.AABox4D.op_Addition*
  name: Addition
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Addition_
  commentId: Overload:Vim.Math3d.AABox4D.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Addition
  nameWithType: AABox4D.Addition
- uid: Vim.Math3d.AABox4D.op_Equality(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: Equality(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Equality_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_Equality(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.Equality(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Equality(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_Equality*
  name: Equality
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Equality_
  commentId: Overload:Vim.Math3d.AABox4D.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Equality
  nameWithType: AABox4D.Equality
- uid: Vim.Math3d.AABox4D.op_GreaterThan(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: GreaterThan(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_GreaterThan_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_GreaterThan(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.GreaterThan(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.GreaterThan(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_GreaterThan_
  commentId: Overload:Vim.Math3d.AABox4D.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.GreaterThan
  nameWithType: AABox4D.GreaterThan
- uid: Vim.Math3d.AABox4D.op_GreaterThanOrEqual(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: GreaterThanOrEqual(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_GreaterThanOrEqual_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_GreaterThanOrEqual(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.GreaterThanOrEqual(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.GreaterThanOrEqual(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.AABox4D.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.GreaterThanOrEqual
  nameWithType: AABox4D.GreaterThanOrEqual
- uid: Vim.Math3d.AABox4D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4})~Vim.Math3d.AABox4D
  name: Implicit((Vector4 min, Vector4 max) to AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Implicit_System_ValueTuple_Vim_Math3d_Vector4_Vim_Math3d_Vector4___Vim_Math3d_AABox4D
  commentId: M:Vim.Math3d.AABox4D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4})~Vim.Math3d.AABox4D
  name.vb: Widening((min As Vector4, max As Vector4)(Of Vector4, Vector4) to AABox4D)
  fullName: Vim.Math3d.AABox4D.Implicit(System.ValueTuple<Vim.Math3d.Vector4, Vim.Math3d.Vector4> to Vim.Math3d.AABox4D)
  fullName.vb: Vim.Math3d.AABox4D.Widening(System.ValueTuple(Of Vim.Math3d.Vector4, Vim.Math3d.Vector4) to Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Implicit((Vector4 min, Vector4 max) to AABox4D)
  nameWithType.vb: AABox4D.Widening((min As Vector4, max As Vector4)(Of Vector4, Vector4) to AABox4D)
- uid: Vim.Math3d.AABox4D.op_Implicit(Vim.Math3d.AABox4D)~System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4}
  name: Implicit(AABox4D to (Vector4 min, Vector4 max))
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Implicit_Vim_Math3d_AABox4D__System_ValueTuple_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.AABox4D.op_Implicit(Vim.Math3d.AABox4D)~System.ValueTuple{Vim.Math3d.Vector4,Vim.Math3d.Vector4}
  name.vb: Widening(AABox4D to (min As Vector4, max As Vector4)(Of Vector4, Vector4))
  fullName: Vim.Math3d.AABox4D.Implicit(Vim.Math3d.AABox4D to System.ValueTuple<Vim.Math3d.Vector4, Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.AABox4D.Widening(Vim.Math3d.AABox4D to System.ValueTuple(Of Vim.Math3d.Vector4, Vim.Math3d.Vector4))
  nameWithType: AABox4D.Implicit(AABox4D to (Vector4 min, Vector4 max))
  nameWithType.vb: AABox4D.Widening(AABox4D to (min As Vector4, max As Vector4)(Of Vector4, Vector4))
- uid: Vim.Math3d.AABox4D.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Implicit_
  commentId: Overload:Vim.Math3d.AABox4D.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.AABox4D.Implicit
  fullName.vb: Vim.Math3d.AABox4D.Widening
  nameWithType: AABox4D.Implicit
  nameWithType.vb: AABox4D.Widening
- uid: Vim.Math3d.AABox4D.op_Inequality(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: Inequality(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Inequality_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_Inequality(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.Inequality(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Inequality(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Inequality_
  commentId: Overload:Vim.Math3d.AABox4D.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Inequality
  nameWithType: AABox4D.Inequality
- uid: Vim.Math3d.AABox4D.op_LessThan(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: LessThan(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_LessThan_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_LessThan(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.LessThan(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.LessThan(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_LessThan_
  commentId: Overload:Vim.Math3d.AABox4D.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.LessThan
  nameWithType: AABox4D.LessThan
- uid: Vim.Math3d.AABox4D.op_LessThanOrEqual(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: LessThanOrEqual(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_LessThanOrEqual_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_LessThanOrEqual(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.LessThanOrEqual(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.LessThanOrEqual(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.AABox4D.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.LessThanOrEqual
  nameWithType: AABox4D.LessThanOrEqual
- uid: Vim.Math3d.AABox4D.op_Subtraction(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  name: Subtraction(AABox4D, AABox4D)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Subtraction_Vim_Math3d_AABox4D_Vim_Math3d_AABox4D_
  commentId: M:Vim.Math3d.AABox4D.op_Subtraction(Vim.Math3d.AABox4D,Vim.Math3d.AABox4D)
  fullName: Vim.Math3d.AABox4D.Subtraction(Vim.Math3d.AABox4D, Vim.Math3d.AABox4D)
  nameWithType: AABox4D.Subtraction(AABox4D, AABox4D)
- uid: Vim.Math3d.AABox4D.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_op_Subtraction_
  commentId: Overload:Vim.Math3d.AABox4D.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.Subtraction
  nameWithType: AABox4D.Subtraction
- uid: Vim.Math3d.AABox4D.SetMax(Vim.Math3d.Vector4)
  name: SetMax(Vector4)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_SetMax_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.AABox4D.SetMax(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.AABox4D.SetMax(Vim.Math3d.Vector4)
  nameWithType: AABox4D.SetMax(Vector4)
- uid: Vim.Math3d.AABox4D.SetMax*
  name: SetMax
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_SetMax_
  commentId: Overload:Vim.Math3d.AABox4D.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.SetMax
  nameWithType: AABox4D.SetMax
- uid: Vim.Math3d.AABox4D.SetMin(Vim.Math3d.Vector4)
  name: SetMin(Vector4)
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_SetMin_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.AABox4D.SetMin(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.AABox4D.SetMin(Vim.Math3d.Vector4)
  nameWithType: AABox4D.SetMin(Vector4)
- uid: Vim.Math3d.AABox4D.SetMin*
  name: SetMin
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_SetMin_
  commentId: Overload:Vim.Math3d.AABox4D.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.SetMin
  nameWithType: AABox4D.SetMin
- uid: Vim.Math3d.AABox4D.ToString
  name: ToString()
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_ToString
  commentId: M:Vim.Math3d.AABox4D.ToString
  fullName: Vim.Math3d.AABox4D.ToString()
  nameWithType: AABox4D.ToString()
- uid: Vim.Math3d.AABox4D.ToString*
  name: ToString
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_ToString_
  commentId: Overload:Vim.Math3d.AABox4D.ToString
  isSpec: "True"
  fullName: Vim.Math3d.AABox4D.ToString
  nameWithType: AABox4D.ToString
- uid: Vim.Math3d.AABox4D.Zero
  name: Zero
  href: api/Vim.Math3d.AABox4D.html#Vim_Math3d_AABox4D_Zero
  commentId: F:Vim.Math3d.AABox4D.Zero
  fullName: Vim.Math3d.AABox4D.Zero
  nameWithType: AABox4D.Zero
- uid: Vim.Math3d.AngularMotion
  name: AngularMotion
  href: api/Vim.Math3d.AngularMotion.html
  commentId: T:Vim.Math3d.AngularMotion
  fullName: Vim.Math3d.AngularMotion
  nameWithType: AngularMotion
- uid: Vim.Math3d.AngularMotion.#ctor(System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single})
  name: AngularMotion((Quaternion velocity, Quaternion acceleration, Single friction))
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion__ctor_System_ValueTuple_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single__
  commentId: M:Vim.Math3d.AngularMotion.#ctor(System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single})
  name.vb: AngularMotion((velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single))
  fullName: Vim.Math3d.AngularMotion.AngularMotion(System.ValueTuple<Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single>)
  fullName.vb: Vim.Math3d.AngularMotion.AngularMotion(System.ValueTuple(Of Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single))
  nameWithType: AngularMotion.AngularMotion((Quaternion velocity, Quaternion acceleration, Single friction))
  nameWithType.vb: AngularMotion.AngularMotion((velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single))
- uid: Vim.Math3d.AngularMotion.#ctor(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  name: AngularMotion(Quaternion, Quaternion, Single)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion__ctor_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single_
  commentId: M:Vim.Math3d.AngularMotion.#ctor(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  fullName: Vim.Math3d.AngularMotion.AngularMotion(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single)
  nameWithType: AngularMotion.AngularMotion(Quaternion, Quaternion, Single)
- uid: Vim.Math3d.AngularMotion.#ctor*
  name: AngularMotion
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion__ctor_
  commentId: Overload:Vim.Math3d.AngularMotion.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.AngularMotion
  nameWithType: AngularMotion.AngularMotion
- uid: Vim.Math3d.AngularMotion.Acceleration
  name: Acceleration
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Acceleration
  commentId: F:Vim.Math3d.AngularMotion.Acceleration
  fullName: Vim.Math3d.AngularMotion.Acceleration
  nameWithType: AngularMotion.Acceleration
- uid: Vim.Math3d.AngularMotion.AlmostEquals(Vim.Math3d.AngularMotion,System.Single)
  name: AlmostEquals(AngularMotion, Single)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_AlmostEquals_Vim_Math3d_AngularMotion_System_Single_
  commentId: M:Vim.Math3d.AngularMotion.AlmostEquals(Vim.Math3d.AngularMotion,System.Single)
  fullName: Vim.Math3d.AngularMotion.AlmostEquals(Vim.Math3d.AngularMotion, System.Single)
  nameWithType: AngularMotion.AlmostEquals(AngularMotion, Single)
- uid: Vim.Math3d.AngularMotion.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_AlmostEquals_
  commentId: Overload:Vim.Math3d.AngularMotion.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.AlmostEquals
  nameWithType: AngularMotion.AlmostEquals
- uid: Vim.Math3d.AngularMotion.Create(System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single})
  name: Create((Quaternion velocity, Quaternion acceleration, Single friction))
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Create_System_ValueTuple_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single__
  commentId: M:Vim.Math3d.AngularMotion.Create(System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single})
  name.vb: Create((velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single))
  fullName: Vim.Math3d.AngularMotion.Create(System.ValueTuple<Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single>)
  fullName.vb: Vim.Math3d.AngularMotion.Create(System.ValueTuple(Of Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single))
  nameWithType: AngularMotion.Create((Quaternion velocity, Quaternion acceleration, Single friction))
  nameWithType.vb: AngularMotion.Create((velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single))
- uid: Vim.Math3d.AngularMotion.Create(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  name: Create(Quaternion, Quaternion, Single)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Create_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single_
  commentId: M:Vim.Math3d.AngularMotion.Create(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  fullName: Vim.Math3d.AngularMotion.Create(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single)
  nameWithType: AngularMotion.Create(Quaternion, Quaternion, Single)
- uid: Vim.Math3d.AngularMotion.Create*
  name: Create
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Create_
  commentId: Overload:Vim.Math3d.AngularMotion.Create
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.Create
  nameWithType: AngularMotion.Create
- uid: Vim.Math3d.AngularMotion.Deconstruct(Vim.Math3d.Quaternion@,Vim.Math3d.Quaternion@,System.Single@)
  name: Deconstruct(out Quaternion, out Quaternion, out Single)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Deconstruct_Vim_Math3d_Quaternion__Vim_Math3d_Quaternion__System_Single__
  commentId: M:Vim.Math3d.AngularMotion.Deconstruct(Vim.Math3d.Quaternion@,Vim.Math3d.Quaternion@,System.Single@)
  name.vb: Deconstruct(ByRef Quaternion, ByRef Quaternion, ByRef Single)
  fullName: Vim.Math3d.AngularMotion.Deconstruct(out Vim.Math3d.Quaternion, out Vim.Math3d.Quaternion, out System.Single)
  fullName.vb: Vim.Math3d.AngularMotion.Deconstruct(ByRef Vim.Math3d.Quaternion, ByRef Vim.Math3d.Quaternion, ByRef System.Single)
  nameWithType: AngularMotion.Deconstruct(out Quaternion, out Quaternion, out Single)
  nameWithType.vb: AngularMotion.Deconstruct(ByRef Quaternion, ByRef Quaternion, ByRef Single)
- uid: Vim.Math3d.AngularMotion.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Deconstruct_
  commentId: Overload:Vim.Math3d.AngularMotion.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.Deconstruct
  nameWithType: AngularMotion.Deconstruct
- uid: Vim.Math3d.AngularMotion.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Equals_System_Object_
  commentId: M:Vim.Math3d.AngularMotion.Equals(System.Object)
  fullName: Vim.Math3d.AngularMotion.Equals(System.Object)
  nameWithType: AngularMotion.Equals(Object)
- uid: Vim.Math3d.AngularMotion.Equals(Vim.Math3d.AngularMotion)
  name: Equals(AngularMotion)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Equals_Vim_Math3d_AngularMotion_
  commentId: M:Vim.Math3d.AngularMotion.Equals(Vim.Math3d.AngularMotion)
  fullName: Vim.Math3d.AngularMotion.Equals(Vim.Math3d.AngularMotion)
  nameWithType: AngularMotion.Equals(AngularMotion)
- uid: Vim.Math3d.AngularMotion.Equals*
  name: Equals
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Equals_
  commentId: Overload:Vim.Math3d.AngularMotion.Equals
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.Equals
  nameWithType: AngularMotion.Equals
- uid: Vim.Math3d.AngularMotion.Friction
  name: Friction
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Friction
  commentId: F:Vim.Math3d.AngularMotion.Friction
  fullName: Vim.Math3d.AngularMotion.Friction
  nameWithType: AngularMotion.Friction
- uid: Vim.Math3d.AngularMotion.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_GetHashCode
  commentId: M:Vim.Math3d.AngularMotion.GetHashCode
  fullName: Vim.Math3d.AngularMotion.GetHashCode()
  nameWithType: AngularMotion.GetHashCode()
- uid: Vim.Math3d.AngularMotion.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_GetHashCode_
  commentId: Overload:Vim.Math3d.AngularMotion.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.GetHashCode
  nameWithType: AngularMotion.GetHashCode
- uid: Vim.Math3d.AngularMotion.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_MaxValue
  commentId: F:Vim.Math3d.AngularMotion.MaxValue
  fullName: Vim.Math3d.AngularMotion.MaxValue
  nameWithType: AngularMotion.MaxValue
- uid: Vim.Math3d.AngularMotion.MinValue
  name: MinValue
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_MinValue
  commentId: F:Vim.Math3d.AngularMotion.MinValue
  fullName: Vim.Math3d.AngularMotion.MinValue
  nameWithType: AngularMotion.MinValue
- uid: Vim.Math3d.AngularMotion.op_Equality(Vim.Math3d.AngularMotion,Vim.Math3d.AngularMotion)
  name: Equality(AngularMotion, AngularMotion)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_op_Equality_Vim_Math3d_AngularMotion_Vim_Math3d_AngularMotion_
  commentId: M:Vim.Math3d.AngularMotion.op_Equality(Vim.Math3d.AngularMotion,Vim.Math3d.AngularMotion)
  fullName: Vim.Math3d.AngularMotion.Equality(Vim.Math3d.AngularMotion, Vim.Math3d.AngularMotion)
  nameWithType: AngularMotion.Equality(AngularMotion, AngularMotion)
- uid: Vim.Math3d.AngularMotion.op_Equality*
  name: Equality
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_op_Equality_
  commentId: Overload:Vim.Math3d.AngularMotion.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.Equality
  nameWithType: AngularMotion.Equality
- uid: Vim.Math3d.AngularMotion.op_Implicit(System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single})~Vim.Math3d.AngularMotion
  name: Implicit((Quaternion velocity, Quaternion acceleration, Single friction) to AngularMotion)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_op_Implicit_System_ValueTuple_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single___Vim_Math3d_AngularMotion
  commentId: M:Vim.Math3d.AngularMotion.op_Implicit(System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single})~Vim.Math3d.AngularMotion
  name.vb: Widening((velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single) to AngularMotion)
  fullName: Vim.Math3d.AngularMotion.Implicit(System.ValueTuple<Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single> to Vim.Math3d.AngularMotion)
  fullName.vb: Vim.Math3d.AngularMotion.Widening(System.ValueTuple(Of Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single) to Vim.Math3d.AngularMotion)
  nameWithType: AngularMotion.Implicit((Quaternion velocity, Quaternion acceleration, Single friction) to AngularMotion)
  nameWithType.vb: AngularMotion.Widening((velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single) to AngularMotion)
- uid: Vim.Math3d.AngularMotion.op_Implicit(Vim.Math3d.AngularMotion)~System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single}
  name: Implicit(AngularMotion to (Quaternion velocity, Quaternion acceleration, Single friction))
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_op_Implicit_Vim_Math3d_AngularMotion__System_ValueTuple_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single_
  commentId: M:Vim.Math3d.AngularMotion.op_Implicit(Vim.Math3d.AngularMotion)~System.ValueTuple{Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single}
  name.vb: Widening(AngularMotion to (velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single))
  fullName: Vim.Math3d.AngularMotion.Implicit(Vim.Math3d.AngularMotion to System.ValueTuple<Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single>)
  fullName.vb: Vim.Math3d.AngularMotion.Widening(Vim.Math3d.AngularMotion to System.ValueTuple(Of Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single))
  nameWithType: AngularMotion.Implicit(AngularMotion to (Quaternion velocity, Quaternion acceleration, Single friction))
  nameWithType.vb: AngularMotion.Widening(AngularMotion to (velocity As Quaternion, acceleration As Quaternion, friction As Single)(Of Quaternion, Quaternion, Single))
- uid: Vim.Math3d.AngularMotion.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_op_Implicit_
  commentId: Overload:Vim.Math3d.AngularMotion.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.AngularMotion.Implicit
  fullName.vb: Vim.Math3d.AngularMotion.Widening
  nameWithType: AngularMotion.Implicit
  nameWithType.vb: AngularMotion.Widening
- uid: Vim.Math3d.AngularMotion.op_Inequality(Vim.Math3d.AngularMotion,Vim.Math3d.AngularMotion)
  name: Inequality(AngularMotion, AngularMotion)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_op_Inequality_Vim_Math3d_AngularMotion_Vim_Math3d_AngularMotion_
  commentId: M:Vim.Math3d.AngularMotion.op_Inequality(Vim.Math3d.AngularMotion,Vim.Math3d.AngularMotion)
  fullName: Vim.Math3d.AngularMotion.Inequality(Vim.Math3d.AngularMotion, Vim.Math3d.AngularMotion)
  nameWithType: AngularMotion.Inequality(AngularMotion, AngularMotion)
- uid: Vim.Math3d.AngularMotion.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_op_Inequality_
  commentId: Overload:Vim.Math3d.AngularMotion.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.Inequality
  nameWithType: AngularMotion.Inequality
- uid: Vim.Math3d.AngularMotion.SetAcceleration(Vim.Math3d.Quaternion)
  name: SetAcceleration(Quaternion)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_SetAcceleration_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.AngularMotion.SetAcceleration(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.AngularMotion.SetAcceleration(Vim.Math3d.Quaternion)
  nameWithType: AngularMotion.SetAcceleration(Quaternion)
- uid: Vim.Math3d.AngularMotion.SetAcceleration*
  name: SetAcceleration
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_SetAcceleration_
  commentId: Overload:Vim.Math3d.AngularMotion.SetAcceleration
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.SetAcceleration
  nameWithType: AngularMotion.SetAcceleration
- uid: Vim.Math3d.AngularMotion.SetFriction(System.Single)
  name: SetFriction(Single)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_SetFriction_System_Single_
  commentId: M:Vim.Math3d.AngularMotion.SetFriction(System.Single)
  fullName: Vim.Math3d.AngularMotion.SetFriction(System.Single)
  nameWithType: AngularMotion.SetFriction(Single)
- uid: Vim.Math3d.AngularMotion.SetFriction*
  name: SetFriction
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_SetFriction_
  commentId: Overload:Vim.Math3d.AngularMotion.SetFriction
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.SetFriction
  nameWithType: AngularMotion.SetFriction
- uid: Vim.Math3d.AngularMotion.SetVelocity(Vim.Math3d.Quaternion)
  name: SetVelocity(Quaternion)
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_SetVelocity_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.AngularMotion.SetVelocity(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.AngularMotion.SetVelocity(Vim.Math3d.Quaternion)
  nameWithType: AngularMotion.SetVelocity(Quaternion)
- uid: Vim.Math3d.AngularMotion.SetVelocity*
  name: SetVelocity
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_SetVelocity_
  commentId: Overload:Vim.Math3d.AngularMotion.SetVelocity
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.SetVelocity
  nameWithType: AngularMotion.SetVelocity
- uid: Vim.Math3d.AngularMotion.ToString
  name: ToString()
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_ToString
  commentId: M:Vim.Math3d.AngularMotion.ToString
  fullName: Vim.Math3d.AngularMotion.ToString()
  nameWithType: AngularMotion.ToString()
- uid: Vim.Math3d.AngularMotion.ToString*
  name: ToString
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_ToString_
  commentId: Overload:Vim.Math3d.AngularMotion.ToString
  isSpec: "True"
  fullName: Vim.Math3d.AngularMotion.ToString
  nameWithType: AngularMotion.ToString
- uid: Vim.Math3d.AngularMotion.Velocity
  name: Velocity
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Velocity
  commentId: F:Vim.Math3d.AngularMotion.Velocity
  fullName: Vim.Math3d.AngularMotion.Velocity
  nameWithType: AngularMotion.Velocity
- uid: Vim.Math3d.AngularMotion.Zero
  name: Zero
  href: api/Vim.Math3d.AngularMotion.html#Vim_Math3d_AngularMotion_Zero
  commentId: F:Vim.Math3d.AngularMotion.Zero
  fullName: Vim.Math3d.AngularMotion.Zero
  nameWithType: AngularMotion.Zero
- uid: Vim.Math3d.AxisAngle
  name: AxisAngle
  href: api/Vim.Math3d.AxisAngle.html
  commentId: T:Vim.Math3d.AxisAngle
  fullName: Vim.Math3d.AxisAngle
  nameWithType: AxisAngle
- uid: Vim.Math3d.AxisAngle.#ctor(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name: AxisAngle((DVector3 axis, Double angle))
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle__ctor_System_ValueTuple_Vim_Math3d_DVector3_System_Double__
  commentId: M:Vim.Math3d.AxisAngle.#ctor(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name.vb: AxisAngle((axis As DVector3, angle As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.AxisAngle.AxisAngle(System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.AxisAngle.AxisAngle(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: AxisAngle.AxisAngle((DVector3 axis, Double angle))
  nameWithType.vb: AxisAngle.AxisAngle((axis As DVector3, angle As Double)(Of DVector3, Double))
- uid: Vim.Math3d.AxisAngle.#ctor(Vim.Math3d.DVector3,System.Double)
  name: AxisAngle(DVector3, Double)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle__ctor_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.AxisAngle.#ctor(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.AxisAngle.AxisAngle(Vim.Math3d.DVector3, System.Double)
  nameWithType: AxisAngle.AxisAngle(DVector3, Double)
- uid: Vim.Math3d.AxisAngle.#ctor*
  name: AxisAngle
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle__ctor_
  commentId: Overload:Vim.Math3d.AxisAngle.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.AxisAngle
  nameWithType: AxisAngle.AxisAngle
- uid: Vim.Math3d.AxisAngle.AlmostEquals(Vim.Math3d.AxisAngle,System.Single)
  name: AlmostEquals(AxisAngle, Single)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_AlmostEquals_Vim_Math3d_AxisAngle_System_Single_
  commentId: M:Vim.Math3d.AxisAngle.AlmostEquals(Vim.Math3d.AxisAngle,System.Single)
  fullName: Vim.Math3d.AxisAngle.AlmostEquals(Vim.Math3d.AxisAngle, System.Single)
  nameWithType: AxisAngle.AlmostEquals(AxisAngle, Single)
- uid: Vim.Math3d.AxisAngle.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_AlmostEquals_
  commentId: Overload:Vim.Math3d.AxisAngle.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.AlmostEquals
  nameWithType: AxisAngle.AlmostEquals
- uid: Vim.Math3d.AxisAngle.Angle
  name: Angle
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Angle
  commentId: F:Vim.Math3d.AxisAngle.Angle
  fullName: Vim.Math3d.AxisAngle.Angle
  nameWithType: AxisAngle.Angle
- uid: Vim.Math3d.AxisAngle.Axis
  name: Axis
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Axis
  commentId: F:Vim.Math3d.AxisAngle.Axis
  fullName: Vim.Math3d.AxisAngle.Axis
  nameWithType: AxisAngle.Axis
- uid: Vim.Math3d.AxisAngle.Create(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name: Create((DVector3 axis, Double angle))
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Create_System_ValueTuple_Vim_Math3d_DVector3_System_Double__
  commentId: M:Vim.Math3d.AxisAngle.Create(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name.vb: Create((axis As DVector3, angle As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.AxisAngle.Create(System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.AxisAngle.Create(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: AxisAngle.Create((DVector3 axis, Double angle))
  nameWithType.vb: AxisAngle.Create((axis As DVector3, angle As Double)(Of DVector3, Double))
- uid: Vim.Math3d.AxisAngle.Create(Vim.Math3d.DVector3,System.Double)
  name: Create(DVector3, Double)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Create_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.AxisAngle.Create(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.AxisAngle.Create(Vim.Math3d.DVector3, System.Double)
  nameWithType: AxisAngle.Create(DVector3, Double)
- uid: Vim.Math3d.AxisAngle.Create*
  name: Create
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Create_
  commentId: Overload:Vim.Math3d.AxisAngle.Create
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.Create
  nameWithType: AxisAngle.Create
- uid: Vim.Math3d.AxisAngle.Deconstruct(Vim.Math3d.DVector3@,System.Double@)
  name: Deconstruct(out DVector3, out Double)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Deconstruct_Vim_Math3d_DVector3__System_Double__
  commentId: M:Vim.Math3d.AxisAngle.Deconstruct(Vim.Math3d.DVector3@,System.Double@)
  name.vb: Deconstruct(ByRef DVector3, ByRef Double)
  fullName: Vim.Math3d.AxisAngle.Deconstruct(out Vim.Math3d.DVector3, out System.Double)
  fullName.vb: Vim.Math3d.AxisAngle.Deconstruct(ByRef Vim.Math3d.DVector3, ByRef System.Double)
  nameWithType: AxisAngle.Deconstruct(out DVector3, out Double)
  nameWithType.vb: AxisAngle.Deconstruct(ByRef DVector3, ByRef Double)
- uid: Vim.Math3d.AxisAngle.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Deconstruct_
  commentId: Overload:Vim.Math3d.AxisAngle.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.Deconstruct
  nameWithType: AxisAngle.Deconstruct
- uid: Vim.Math3d.AxisAngle.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Equals_System_Object_
  commentId: M:Vim.Math3d.AxisAngle.Equals(System.Object)
  fullName: Vim.Math3d.AxisAngle.Equals(System.Object)
  nameWithType: AxisAngle.Equals(Object)
- uid: Vim.Math3d.AxisAngle.Equals(Vim.Math3d.AxisAngle)
  name: Equals(AxisAngle)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Equals_Vim_Math3d_AxisAngle_
  commentId: M:Vim.Math3d.AxisAngle.Equals(Vim.Math3d.AxisAngle)
  fullName: Vim.Math3d.AxisAngle.Equals(Vim.Math3d.AxisAngle)
  nameWithType: AxisAngle.Equals(AxisAngle)
- uid: Vim.Math3d.AxisAngle.Equals*
  name: Equals
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Equals_
  commentId: Overload:Vim.Math3d.AxisAngle.Equals
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.Equals
  nameWithType: AxisAngle.Equals
- uid: Vim.Math3d.AxisAngle.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_GetHashCode
  commentId: M:Vim.Math3d.AxisAngle.GetHashCode
  fullName: Vim.Math3d.AxisAngle.GetHashCode()
  nameWithType: AxisAngle.GetHashCode()
- uid: Vim.Math3d.AxisAngle.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_GetHashCode_
  commentId: Overload:Vim.Math3d.AxisAngle.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.GetHashCode
  nameWithType: AxisAngle.GetHashCode
- uid: Vim.Math3d.AxisAngle.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_MaxValue
  commentId: F:Vim.Math3d.AxisAngle.MaxValue
  fullName: Vim.Math3d.AxisAngle.MaxValue
  nameWithType: AxisAngle.MaxValue
- uid: Vim.Math3d.AxisAngle.MinValue
  name: MinValue
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_MinValue
  commentId: F:Vim.Math3d.AxisAngle.MinValue
  fullName: Vim.Math3d.AxisAngle.MinValue
  nameWithType: AxisAngle.MinValue
- uid: Vim.Math3d.AxisAngle.op_Equality(Vim.Math3d.AxisAngle,Vim.Math3d.AxisAngle)
  name: Equality(AxisAngle, AxisAngle)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_op_Equality_Vim_Math3d_AxisAngle_Vim_Math3d_AxisAngle_
  commentId: M:Vim.Math3d.AxisAngle.op_Equality(Vim.Math3d.AxisAngle,Vim.Math3d.AxisAngle)
  fullName: Vim.Math3d.AxisAngle.Equality(Vim.Math3d.AxisAngle, Vim.Math3d.AxisAngle)
  nameWithType: AxisAngle.Equality(AxisAngle, AxisAngle)
- uid: Vim.Math3d.AxisAngle.op_Equality*
  name: Equality
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_op_Equality_
  commentId: Overload:Vim.Math3d.AxisAngle.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.Equality
  nameWithType: AxisAngle.Equality
- uid: Vim.Math3d.AxisAngle.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,System.Double})~Vim.Math3d.AxisAngle
  name: Implicit((DVector3 axis, Double angle) to AxisAngle)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_op_Implicit_System_ValueTuple_Vim_Math3d_DVector3_System_Double___Vim_Math3d_AxisAngle
  commentId: M:Vim.Math3d.AxisAngle.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,System.Double})~Vim.Math3d.AxisAngle
  name.vb: Widening((axis As DVector3, angle As Double)(Of DVector3, Double) to AxisAngle)
  fullName: Vim.Math3d.AxisAngle.Implicit(System.ValueTuple<Vim.Math3d.DVector3, System.Double> to Vim.Math3d.AxisAngle)
  fullName.vb: Vim.Math3d.AxisAngle.Widening(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double) to Vim.Math3d.AxisAngle)
  nameWithType: AxisAngle.Implicit((DVector3 axis, Double angle) to AxisAngle)
  nameWithType.vb: AxisAngle.Widening((axis As DVector3, angle As Double)(Of DVector3, Double) to AxisAngle)
- uid: Vim.Math3d.AxisAngle.op_Implicit(Vim.Math3d.AxisAngle)~System.ValueTuple{Vim.Math3d.DVector3,System.Double}
  name: Implicit(AxisAngle to (DVector3 axis, Double angle))
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_op_Implicit_Vim_Math3d_AxisAngle__System_ValueTuple_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.AxisAngle.op_Implicit(Vim.Math3d.AxisAngle)~System.ValueTuple{Vim.Math3d.DVector3,System.Double}
  name.vb: Widening(AxisAngle to (axis As DVector3, angle As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.AxisAngle.Implicit(Vim.Math3d.AxisAngle to System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.AxisAngle.Widening(Vim.Math3d.AxisAngle to System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: AxisAngle.Implicit(AxisAngle to (DVector3 axis, Double angle))
  nameWithType.vb: AxisAngle.Widening(AxisAngle to (axis As DVector3, angle As Double)(Of DVector3, Double))
- uid: Vim.Math3d.AxisAngle.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_op_Implicit_
  commentId: Overload:Vim.Math3d.AxisAngle.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.AxisAngle.Implicit
  fullName.vb: Vim.Math3d.AxisAngle.Widening
  nameWithType: AxisAngle.Implicit
  nameWithType.vb: AxisAngle.Widening
- uid: Vim.Math3d.AxisAngle.op_Inequality(Vim.Math3d.AxisAngle,Vim.Math3d.AxisAngle)
  name: Inequality(AxisAngle, AxisAngle)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_op_Inequality_Vim_Math3d_AxisAngle_Vim_Math3d_AxisAngle_
  commentId: M:Vim.Math3d.AxisAngle.op_Inequality(Vim.Math3d.AxisAngle,Vim.Math3d.AxisAngle)
  fullName: Vim.Math3d.AxisAngle.Inequality(Vim.Math3d.AxisAngle, Vim.Math3d.AxisAngle)
  nameWithType: AxisAngle.Inequality(AxisAngle, AxisAngle)
- uid: Vim.Math3d.AxisAngle.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_op_Inequality_
  commentId: Overload:Vim.Math3d.AxisAngle.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.Inequality
  nameWithType: AxisAngle.Inequality
- uid: Vim.Math3d.AxisAngle.SetAngle(System.Double)
  name: SetAngle(Double)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_SetAngle_System_Double_
  commentId: M:Vim.Math3d.AxisAngle.SetAngle(System.Double)
  fullName: Vim.Math3d.AxisAngle.SetAngle(System.Double)
  nameWithType: AxisAngle.SetAngle(Double)
- uid: Vim.Math3d.AxisAngle.SetAngle*
  name: SetAngle
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_SetAngle_
  commentId: Overload:Vim.Math3d.AxisAngle.SetAngle
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.SetAngle
  nameWithType: AxisAngle.SetAngle
- uid: Vim.Math3d.AxisAngle.SetAxis(Vim.Math3d.DVector3)
  name: SetAxis(DVector3)
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_SetAxis_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.AxisAngle.SetAxis(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.AxisAngle.SetAxis(Vim.Math3d.DVector3)
  nameWithType: AxisAngle.SetAxis(DVector3)
- uid: Vim.Math3d.AxisAngle.SetAxis*
  name: SetAxis
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_SetAxis_
  commentId: Overload:Vim.Math3d.AxisAngle.SetAxis
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.SetAxis
  nameWithType: AxisAngle.SetAxis
- uid: Vim.Math3d.AxisAngle.ToString
  name: ToString()
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_ToString
  commentId: M:Vim.Math3d.AxisAngle.ToString
  fullName: Vim.Math3d.AxisAngle.ToString()
  nameWithType: AxisAngle.ToString()
- uid: Vim.Math3d.AxisAngle.ToString*
  name: ToString
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_ToString_
  commentId: Overload:Vim.Math3d.AxisAngle.ToString
  isSpec: "True"
  fullName: Vim.Math3d.AxisAngle.ToString
  nameWithType: AxisAngle.ToString
- uid: Vim.Math3d.AxisAngle.Zero
  name: Zero
  href: api/Vim.Math3d.AxisAngle.html#Vim_Math3d_AxisAngle_Zero
  commentId: F:Vim.Math3d.AxisAngle.Zero
  fullName: Vim.Math3d.AxisAngle.Zero
  nameWithType: AxisAngle.Zero
- uid: Vim.Math3d.Byte2
  name: Byte2
  href: api/Vim.Math3d.Byte2.html
  commentId: T:Vim.Math3d.Byte2
  fullName: Vim.Math3d.Byte2
  nameWithType: Byte2
- uid: Vim.Math3d.Byte2.#ctor(System.Byte,System.Byte)
  name: Byte2(Byte, Byte)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2__ctor_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte2.#ctor(System.Byte,System.Byte)
  fullName: Vim.Math3d.Byte2.Byte2(System.Byte, System.Byte)
  nameWithType: Byte2.Byte2(Byte, Byte)
- uid: Vim.Math3d.Byte2.#ctor(System.ValueTuple{System.Byte,System.Byte})
  name: Byte2((Byte x, Byte y))
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2__ctor_System_ValueTuple_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.Byte2.#ctor(System.ValueTuple{System.Byte,System.Byte})
  name.vb: Byte2((x As Byte, y As Byte)(Of Byte, Byte))
  fullName: Vim.Math3d.Byte2.Byte2(System.ValueTuple<System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte2.Byte2(System.ValueTuple(Of System.Byte, System.Byte))
  nameWithType: Byte2.Byte2((Byte x, Byte y))
  nameWithType.vb: Byte2.Byte2((x As Byte, y As Byte)(Of Byte, Byte))
- uid: Vim.Math3d.Byte2.#ctor*
  name: Byte2
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2__ctor_
  commentId: Overload:Vim.Math3d.Byte2.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.Byte2
  nameWithType: Byte2.Byte2
- uid: Vim.Math3d.Byte2.Create(System.Byte,System.Byte)
  name: Create(Byte, Byte)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Create_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte2.Create(System.Byte,System.Byte)
  fullName: Vim.Math3d.Byte2.Create(System.Byte, System.Byte)
  nameWithType: Byte2.Create(Byte, Byte)
- uid: Vim.Math3d.Byte2.Create(System.ValueTuple{System.Byte,System.Byte})
  name: Create((Byte x, Byte y))
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Create_System_ValueTuple_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.Byte2.Create(System.ValueTuple{System.Byte,System.Byte})
  name.vb: Create((x As Byte, y As Byte)(Of Byte, Byte))
  fullName: Vim.Math3d.Byte2.Create(System.ValueTuple<System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte2.Create(System.ValueTuple(Of System.Byte, System.Byte))
  nameWithType: Byte2.Create((Byte x, Byte y))
  nameWithType.vb: Byte2.Create((x As Byte, y As Byte)(Of Byte, Byte))
- uid: Vim.Math3d.Byte2.Create*
  name: Create
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Create_
  commentId: Overload:Vim.Math3d.Byte2.Create
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.Create
  nameWithType: Byte2.Create
- uid: Vim.Math3d.Byte2.Deconstruct(System.Byte@,System.Byte@)
  name: Deconstruct(out Byte, out Byte)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Deconstruct_System_Byte__System_Byte__
  commentId: M:Vim.Math3d.Byte2.Deconstruct(System.Byte@,System.Byte@)
  name.vb: Deconstruct(ByRef Byte, ByRef Byte)
  fullName: Vim.Math3d.Byte2.Deconstruct(out System.Byte, out System.Byte)
  fullName.vb: Vim.Math3d.Byte2.Deconstruct(ByRef System.Byte, ByRef System.Byte)
  nameWithType: Byte2.Deconstruct(out Byte, out Byte)
  nameWithType.vb: Byte2.Deconstruct(ByRef Byte, ByRef Byte)
- uid: Vim.Math3d.Byte2.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Deconstruct_
  commentId: Overload:Vim.Math3d.Byte2.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.Deconstruct
  nameWithType: Byte2.Deconstruct
- uid: Vim.Math3d.Byte2.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Equals_System_Object_
  commentId: M:Vim.Math3d.Byte2.Equals(System.Object)
  fullName: Vim.Math3d.Byte2.Equals(System.Object)
  nameWithType: Byte2.Equals(Object)
- uid: Vim.Math3d.Byte2.Equals(Vim.Math3d.Byte2)
  name: Equals(Byte2)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Equals_Vim_Math3d_Byte2_
  commentId: M:Vim.Math3d.Byte2.Equals(Vim.Math3d.Byte2)
  fullName: Vim.Math3d.Byte2.Equals(Vim.Math3d.Byte2)
  nameWithType: Byte2.Equals(Byte2)
- uid: Vim.Math3d.Byte2.Equals*
  name: Equals
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Equals_
  commentId: Overload:Vim.Math3d.Byte2.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.Equals
  nameWithType: Byte2.Equals
- uid: Vim.Math3d.Byte2.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_GetHashCode
  commentId: M:Vim.Math3d.Byte2.GetHashCode
  fullName: Vim.Math3d.Byte2.GetHashCode()
  nameWithType: Byte2.GetHashCode()
- uid: Vim.Math3d.Byte2.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_GetHashCode_
  commentId: Overload:Vim.Math3d.Byte2.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.GetHashCode
  nameWithType: Byte2.GetHashCode
- uid: Vim.Math3d.Byte2.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_MaxValue
  commentId: F:Vim.Math3d.Byte2.MaxValue
  fullName: Vim.Math3d.Byte2.MaxValue
  nameWithType: Byte2.MaxValue
- uid: Vim.Math3d.Byte2.MinValue
  name: MinValue
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_MinValue
  commentId: F:Vim.Math3d.Byte2.MinValue
  fullName: Vim.Math3d.Byte2.MinValue
  nameWithType: Byte2.MinValue
- uid: Vim.Math3d.Byte2.op_Equality(Vim.Math3d.Byte2,Vim.Math3d.Byte2)
  name: Equality(Byte2, Byte2)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_op_Equality_Vim_Math3d_Byte2_Vim_Math3d_Byte2_
  commentId: M:Vim.Math3d.Byte2.op_Equality(Vim.Math3d.Byte2,Vim.Math3d.Byte2)
  fullName: Vim.Math3d.Byte2.Equality(Vim.Math3d.Byte2, Vim.Math3d.Byte2)
  nameWithType: Byte2.Equality(Byte2, Byte2)
- uid: Vim.Math3d.Byte2.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_op_Equality_
  commentId: Overload:Vim.Math3d.Byte2.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.Equality
  nameWithType: Byte2.Equality
- uid: Vim.Math3d.Byte2.op_Implicit(System.ValueTuple{System.Byte,System.Byte})~Vim.Math3d.Byte2
  name: Implicit((Byte x, Byte y) to Byte2)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_op_Implicit_System_ValueTuple_System_Byte_System_Byte___Vim_Math3d_Byte2
  commentId: M:Vim.Math3d.Byte2.op_Implicit(System.ValueTuple{System.Byte,System.Byte})~Vim.Math3d.Byte2
  name.vb: Widening((x As Byte, y As Byte)(Of Byte, Byte) to Byte2)
  fullName: Vim.Math3d.Byte2.Implicit(System.ValueTuple<System.Byte, System.Byte> to Vim.Math3d.Byte2)
  fullName.vb: Vim.Math3d.Byte2.Widening(System.ValueTuple(Of System.Byte, System.Byte) to Vim.Math3d.Byte2)
  nameWithType: Byte2.Implicit((Byte x, Byte y) to Byte2)
  nameWithType.vb: Byte2.Widening((x As Byte, y As Byte)(Of Byte, Byte) to Byte2)
- uid: Vim.Math3d.Byte2.op_Implicit(Vim.Math3d.Byte2)~System.ValueTuple{System.Byte,System.Byte}
  name: Implicit(Byte2 to (Byte x, Byte y))
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_op_Implicit_Vim_Math3d_Byte2__System_ValueTuple_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte2.op_Implicit(Vim.Math3d.Byte2)~System.ValueTuple{System.Byte,System.Byte}
  name.vb: Widening(Byte2 to (x As Byte, y As Byte)(Of Byte, Byte))
  fullName: Vim.Math3d.Byte2.Implicit(Vim.Math3d.Byte2 to System.ValueTuple<System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte2.Widening(Vim.Math3d.Byte2 to System.ValueTuple(Of System.Byte, System.Byte))
  nameWithType: Byte2.Implicit(Byte2 to (Byte x, Byte y))
  nameWithType.vb: Byte2.Widening(Byte2 to (x As Byte, y As Byte)(Of Byte, Byte))
- uid: Vim.Math3d.Byte2.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_op_Implicit_
  commentId: Overload:Vim.Math3d.Byte2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Byte2.Implicit
  fullName.vb: Vim.Math3d.Byte2.Widening
  nameWithType: Byte2.Implicit
  nameWithType.vb: Byte2.Widening
- uid: Vim.Math3d.Byte2.op_Inequality(Vim.Math3d.Byte2,Vim.Math3d.Byte2)
  name: Inequality(Byte2, Byte2)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_op_Inequality_Vim_Math3d_Byte2_Vim_Math3d_Byte2_
  commentId: M:Vim.Math3d.Byte2.op_Inequality(Vim.Math3d.Byte2,Vim.Math3d.Byte2)
  fullName: Vim.Math3d.Byte2.Inequality(Vim.Math3d.Byte2, Vim.Math3d.Byte2)
  nameWithType: Byte2.Inequality(Byte2, Byte2)
- uid: Vim.Math3d.Byte2.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_op_Inequality_
  commentId: Overload:Vim.Math3d.Byte2.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.Inequality
  nameWithType: Byte2.Inequality
- uid: Vim.Math3d.Byte2.SetX(System.Byte)
  name: SetX(Byte)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_SetX_System_Byte_
  commentId: M:Vim.Math3d.Byte2.SetX(System.Byte)
  fullName: Vim.Math3d.Byte2.SetX(System.Byte)
  nameWithType: Byte2.SetX(Byte)
- uid: Vim.Math3d.Byte2.SetX*
  name: SetX
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_SetX_
  commentId: Overload:Vim.Math3d.Byte2.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.SetX
  nameWithType: Byte2.SetX
- uid: Vim.Math3d.Byte2.SetY(System.Byte)
  name: SetY(Byte)
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_SetY_System_Byte_
  commentId: M:Vim.Math3d.Byte2.SetY(System.Byte)
  fullName: Vim.Math3d.Byte2.SetY(System.Byte)
  nameWithType: Byte2.SetY(Byte)
- uid: Vim.Math3d.Byte2.SetY*
  name: SetY
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_SetY_
  commentId: Overload:Vim.Math3d.Byte2.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.SetY
  nameWithType: Byte2.SetY
- uid: Vim.Math3d.Byte2.ToString
  name: ToString()
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_ToString
  commentId: M:Vim.Math3d.Byte2.ToString
  fullName: Vim.Math3d.Byte2.ToString()
  nameWithType: Byte2.ToString()
- uid: Vim.Math3d.Byte2.ToString*
  name: ToString
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_ToString_
  commentId: Overload:Vim.Math3d.Byte2.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Byte2.ToString
  nameWithType: Byte2.ToString
- uid: Vim.Math3d.Byte2.X
  name: X
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_X
  commentId: F:Vim.Math3d.Byte2.X
  fullName: Vim.Math3d.Byte2.X
  nameWithType: Byte2.X
- uid: Vim.Math3d.Byte2.Y
  name: Y
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Y
  commentId: F:Vim.Math3d.Byte2.Y
  fullName: Vim.Math3d.Byte2.Y
  nameWithType: Byte2.Y
- uid: Vim.Math3d.Byte2.Zero
  name: Zero
  href: api/Vim.Math3d.Byte2.html#Vim_Math3d_Byte2_Zero
  commentId: F:Vim.Math3d.Byte2.Zero
  fullName: Vim.Math3d.Byte2.Zero
  nameWithType: Byte2.Zero
- uid: Vim.Math3d.Byte3
  name: Byte3
  href: api/Vim.Math3d.Byte3.html
  commentId: T:Vim.Math3d.Byte3
  fullName: Vim.Math3d.Byte3
  nameWithType: Byte3
- uid: Vim.Math3d.Byte3.#ctor(System.Byte,System.Byte,System.Byte)
  name: Byte3(Byte, Byte, Byte)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3__ctor_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte3.#ctor(System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.Byte3.Byte3(System.Byte, System.Byte, System.Byte)
  nameWithType: Byte3.Byte3(Byte, Byte, Byte)
- uid: Vim.Math3d.Byte3.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name: Byte3((Byte x, Byte y, Byte z))
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3__ctor_System_ValueTuple_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.Byte3.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name.vb: Byte3((x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte))
  fullName: Vim.Math3d.Byte3.Byte3(System.ValueTuple<System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte3.Byte3(System.ValueTuple(Of System.Byte, System.Byte, System.Byte))
  nameWithType: Byte3.Byte3((Byte x, Byte y, Byte z))
  nameWithType.vb: Byte3.Byte3((x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte))
- uid: Vim.Math3d.Byte3.#ctor*
  name: Byte3
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3__ctor_
  commentId: Overload:Vim.Math3d.Byte3.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.Byte3
  nameWithType: Byte3.Byte3
- uid: Vim.Math3d.Byte3.Create(System.Byte,System.Byte,System.Byte)
  name: Create(Byte, Byte, Byte)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Create_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte3.Create(System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.Byte3.Create(System.Byte, System.Byte, System.Byte)
  nameWithType: Byte3.Create(Byte, Byte, Byte)
- uid: Vim.Math3d.Byte3.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name: Create((Byte x, Byte y, Byte z))
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Create_System_ValueTuple_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.Byte3.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name.vb: Create((x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte))
  fullName: Vim.Math3d.Byte3.Create(System.ValueTuple<System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte3.Create(System.ValueTuple(Of System.Byte, System.Byte, System.Byte))
  nameWithType: Byte3.Create((Byte x, Byte y, Byte z))
  nameWithType.vb: Byte3.Create((x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte))
- uid: Vim.Math3d.Byte3.Create*
  name: Create
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Create_
  commentId: Overload:Vim.Math3d.Byte3.Create
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.Create
  nameWithType: Byte3.Create
- uid: Vim.Math3d.Byte3.Deconstruct(System.Byte@,System.Byte@,System.Byte@)
  name: Deconstruct(out Byte, out Byte, out Byte)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Deconstruct_System_Byte__System_Byte__System_Byte__
  commentId: M:Vim.Math3d.Byte3.Deconstruct(System.Byte@,System.Byte@,System.Byte@)
  name.vb: Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte)
  fullName: Vim.Math3d.Byte3.Deconstruct(out System.Byte, out System.Byte, out System.Byte)
  fullName.vb: Vim.Math3d.Byte3.Deconstruct(ByRef System.Byte, ByRef System.Byte, ByRef System.Byte)
  nameWithType: Byte3.Deconstruct(out Byte, out Byte, out Byte)
  nameWithType.vb: Byte3.Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte)
- uid: Vim.Math3d.Byte3.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Deconstruct_
  commentId: Overload:Vim.Math3d.Byte3.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.Deconstruct
  nameWithType: Byte3.Deconstruct
- uid: Vim.Math3d.Byte3.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Equals_System_Object_
  commentId: M:Vim.Math3d.Byte3.Equals(System.Object)
  fullName: Vim.Math3d.Byte3.Equals(System.Object)
  nameWithType: Byte3.Equals(Object)
- uid: Vim.Math3d.Byte3.Equals(Vim.Math3d.Byte3)
  name: Equals(Byte3)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Equals_Vim_Math3d_Byte3_
  commentId: M:Vim.Math3d.Byte3.Equals(Vim.Math3d.Byte3)
  fullName: Vim.Math3d.Byte3.Equals(Vim.Math3d.Byte3)
  nameWithType: Byte3.Equals(Byte3)
- uid: Vim.Math3d.Byte3.Equals*
  name: Equals
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Equals_
  commentId: Overload:Vim.Math3d.Byte3.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.Equals
  nameWithType: Byte3.Equals
- uid: Vim.Math3d.Byte3.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_GetHashCode
  commentId: M:Vim.Math3d.Byte3.GetHashCode
  fullName: Vim.Math3d.Byte3.GetHashCode()
  nameWithType: Byte3.GetHashCode()
- uid: Vim.Math3d.Byte3.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_GetHashCode_
  commentId: Overload:Vim.Math3d.Byte3.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.GetHashCode
  nameWithType: Byte3.GetHashCode
- uid: Vim.Math3d.Byte3.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_MaxValue
  commentId: F:Vim.Math3d.Byte3.MaxValue
  fullName: Vim.Math3d.Byte3.MaxValue
  nameWithType: Byte3.MaxValue
- uid: Vim.Math3d.Byte3.MinValue
  name: MinValue
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_MinValue
  commentId: F:Vim.Math3d.Byte3.MinValue
  fullName: Vim.Math3d.Byte3.MinValue
  nameWithType: Byte3.MinValue
- uid: Vim.Math3d.Byte3.op_Equality(Vim.Math3d.Byte3,Vim.Math3d.Byte3)
  name: Equality(Byte3, Byte3)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_op_Equality_Vim_Math3d_Byte3_Vim_Math3d_Byte3_
  commentId: M:Vim.Math3d.Byte3.op_Equality(Vim.Math3d.Byte3,Vim.Math3d.Byte3)
  fullName: Vim.Math3d.Byte3.Equality(Vim.Math3d.Byte3, Vim.Math3d.Byte3)
  nameWithType: Byte3.Equality(Byte3, Byte3)
- uid: Vim.Math3d.Byte3.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_op_Equality_
  commentId: Overload:Vim.Math3d.Byte3.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.Equality
  nameWithType: Byte3.Equality
- uid: Vim.Math3d.Byte3.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte})~Vim.Math3d.Byte3
  name: Implicit((Byte x, Byte y, Byte z) to Byte3)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_op_Implicit_System_ValueTuple_System_Byte_System_Byte_System_Byte___Vim_Math3d_Byte3
  commentId: M:Vim.Math3d.Byte3.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte})~Vim.Math3d.Byte3
  name.vb: Widening((x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte) to Byte3)
  fullName: Vim.Math3d.Byte3.Implicit(System.ValueTuple<System.Byte, System.Byte, System.Byte> to Vim.Math3d.Byte3)
  fullName.vb: Vim.Math3d.Byte3.Widening(System.ValueTuple(Of System.Byte, System.Byte, System.Byte) to Vim.Math3d.Byte3)
  nameWithType: Byte3.Implicit((Byte x, Byte y, Byte z) to Byte3)
  nameWithType.vb: Byte3.Widening((x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte) to Byte3)
- uid: Vim.Math3d.Byte3.op_Implicit(Vim.Math3d.Byte3)~System.ValueTuple{System.Byte,System.Byte,System.Byte}
  name: Implicit(Byte3 to (Byte x, Byte y, Byte z))
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_op_Implicit_Vim_Math3d_Byte3__System_ValueTuple_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte3.op_Implicit(Vim.Math3d.Byte3)~System.ValueTuple{System.Byte,System.Byte,System.Byte}
  name.vb: Widening(Byte3 to (x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte))
  fullName: Vim.Math3d.Byte3.Implicit(Vim.Math3d.Byte3 to System.ValueTuple<System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte3.Widening(Vim.Math3d.Byte3 to System.ValueTuple(Of System.Byte, System.Byte, System.Byte))
  nameWithType: Byte3.Implicit(Byte3 to (Byte x, Byte y, Byte z))
  nameWithType.vb: Byte3.Widening(Byte3 to (x As Byte, y As Byte, z As Byte)(Of Byte, Byte, Byte))
- uid: Vim.Math3d.Byte3.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_op_Implicit_
  commentId: Overload:Vim.Math3d.Byte3.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Byte3.Implicit
  fullName.vb: Vim.Math3d.Byte3.Widening
  nameWithType: Byte3.Implicit
  nameWithType.vb: Byte3.Widening
- uid: Vim.Math3d.Byte3.op_Inequality(Vim.Math3d.Byte3,Vim.Math3d.Byte3)
  name: Inequality(Byte3, Byte3)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_op_Inequality_Vim_Math3d_Byte3_Vim_Math3d_Byte3_
  commentId: M:Vim.Math3d.Byte3.op_Inequality(Vim.Math3d.Byte3,Vim.Math3d.Byte3)
  fullName: Vim.Math3d.Byte3.Inequality(Vim.Math3d.Byte3, Vim.Math3d.Byte3)
  nameWithType: Byte3.Inequality(Byte3, Byte3)
- uid: Vim.Math3d.Byte3.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_op_Inequality_
  commentId: Overload:Vim.Math3d.Byte3.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.Inequality
  nameWithType: Byte3.Inequality
- uid: Vim.Math3d.Byte3.SetX(System.Byte)
  name: SetX(Byte)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_SetX_System_Byte_
  commentId: M:Vim.Math3d.Byte3.SetX(System.Byte)
  fullName: Vim.Math3d.Byte3.SetX(System.Byte)
  nameWithType: Byte3.SetX(Byte)
- uid: Vim.Math3d.Byte3.SetX*
  name: SetX
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_SetX_
  commentId: Overload:Vim.Math3d.Byte3.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.SetX
  nameWithType: Byte3.SetX
- uid: Vim.Math3d.Byte3.SetY(System.Byte)
  name: SetY(Byte)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_SetY_System_Byte_
  commentId: M:Vim.Math3d.Byte3.SetY(System.Byte)
  fullName: Vim.Math3d.Byte3.SetY(System.Byte)
  nameWithType: Byte3.SetY(Byte)
- uid: Vim.Math3d.Byte3.SetY*
  name: SetY
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_SetY_
  commentId: Overload:Vim.Math3d.Byte3.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.SetY
  nameWithType: Byte3.SetY
- uid: Vim.Math3d.Byte3.SetZ(System.Byte)
  name: SetZ(Byte)
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_SetZ_System_Byte_
  commentId: M:Vim.Math3d.Byte3.SetZ(System.Byte)
  fullName: Vim.Math3d.Byte3.SetZ(System.Byte)
  nameWithType: Byte3.SetZ(Byte)
- uid: Vim.Math3d.Byte3.SetZ*
  name: SetZ
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_SetZ_
  commentId: Overload:Vim.Math3d.Byte3.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.SetZ
  nameWithType: Byte3.SetZ
- uid: Vim.Math3d.Byte3.ToString
  name: ToString()
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_ToString
  commentId: M:Vim.Math3d.Byte3.ToString
  fullName: Vim.Math3d.Byte3.ToString()
  nameWithType: Byte3.ToString()
- uid: Vim.Math3d.Byte3.ToString*
  name: ToString
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_ToString_
  commentId: Overload:Vim.Math3d.Byte3.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Byte3.ToString
  nameWithType: Byte3.ToString
- uid: Vim.Math3d.Byte3.X
  name: X
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_X
  commentId: F:Vim.Math3d.Byte3.X
  fullName: Vim.Math3d.Byte3.X
  nameWithType: Byte3.X
- uid: Vim.Math3d.Byte3.Y
  name: Y
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Y
  commentId: F:Vim.Math3d.Byte3.Y
  fullName: Vim.Math3d.Byte3.Y
  nameWithType: Byte3.Y
- uid: Vim.Math3d.Byte3.Z
  name: Z
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Z
  commentId: F:Vim.Math3d.Byte3.Z
  fullName: Vim.Math3d.Byte3.Z
  nameWithType: Byte3.Z
- uid: Vim.Math3d.Byte3.Zero
  name: Zero
  href: api/Vim.Math3d.Byte3.html#Vim_Math3d_Byte3_Zero
  commentId: F:Vim.Math3d.Byte3.Zero
  fullName: Vim.Math3d.Byte3.Zero
  nameWithType: Byte3.Zero
- uid: Vim.Math3d.Byte4
  name: Byte4
  href: api/Vim.Math3d.Byte4.html
  commentId: T:Vim.Math3d.Byte4
  fullName: Vim.Math3d.Byte4
  nameWithType: Byte4
- uid: Vim.Math3d.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  name: Byte4(Byte, Byte, Byte, Byte)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4__ctor_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.Byte4.Byte4(System.Byte, System.Byte, System.Byte, System.Byte)
  nameWithType: Byte4.Byte4(Byte, Byte, Byte, Byte)
- uid: Vim.Math3d.Byte4.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name: Byte4((Byte x, Byte y, Byte z, Byte w))
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4__ctor_System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.Byte4.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name.vb: Byte4((x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte))
  fullName: Vim.Math3d.Byte4.Byte4(System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte4.Byte4(System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte))
  nameWithType: Byte4.Byte4((Byte x, Byte y, Byte z, Byte w))
  nameWithType.vb: Byte4.Byte4((x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte))
- uid: Vim.Math3d.Byte4.#ctor*
  name: Byte4
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4__ctor_
  commentId: Overload:Vim.Math3d.Byte4.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.Byte4
  nameWithType: Byte4.Byte4
- uid: Vim.Math3d.Byte4.Create(System.Byte,System.Byte,System.Byte,System.Byte)
  name: Create(Byte, Byte, Byte, Byte)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Create_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte4.Create(System.Byte,System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.Byte4.Create(System.Byte, System.Byte, System.Byte, System.Byte)
  nameWithType: Byte4.Create(Byte, Byte, Byte, Byte)
- uid: Vim.Math3d.Byte4.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name: Create((Byte x, Byte y, Byte z, Byte w))
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Create_System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.Byte4.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name.vb: Create((x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte))
  fullName: Vim.Math3d.Byte4.Create(System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte4.Create(System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte))
  nameWithType: Byte4.Create((Byte x, Byte y, Byte z, Byte w))
  nameWithType.vb: Byte4.Create((x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte))
- uid: Vim.Math3d.Byte4.Create*
  name: Create
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Create_
  commentId: Overload:Vim.Math3d.Byte4.Create
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.Create
  nameWithType: Byte4.Create
- uid: Vim.Math3d.Byte4.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  name: Deconstruct(out Byte, out Byte, out Byte, out Byte)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Deconstruct_System_Byte__System_Byte__System_Byte__System_Byte__
  commentId: M:Vim.Math3d.Byte4.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  name.vb: Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte, ByRef Byte)
  fullName: Vim.Math3d.Byte4.Deconstruct(out System.Byte, out System.Byte, out System.Byte, out System.Byte)
  fullName.vb: Vim.Math3d.Byte4.Deconstruct(ByRef System.Byte, ByRef System.Byte, ByRef System.Byte, ByRef System.Byte)
  nameWithType: Byte4.Deconstruct(out Byte, out Byte, out Byte, out Byte)
  nameWithType.vb: Byte4.Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte, ByRef Byte)
- uid: Vim.Math3d.Byte4.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Deconstruct_
  commentId: Overload:Vim.Math3d.Byte4.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.Deconstruct
  nameWithType: Byte4.Deconstruct
- uid: Vim.Math3d.Byte4.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Equals_System_Object_
  commentId: M:Vim.Math3d.Byte4.Equals(System.Object)
  fullName: Vim.Math3d.Byte4.Equals(System.Object)
  nameWithType: Byte4.Equals(Object)
- uid: Vim.Math3d.Byte4.Equals(Vim.Math3d.Byte4)
  name: Equals(Byte4)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Equals_Vim_Math3d_Byte4_
  commentId: M:Vim.Math3d.Byte4.Equals(Vim.Math3d.Byte4)
  fullName: Vim.Math3d.Byte4.Equals(Vim.Math3d.Byte4)
  nameWithType: Byte4.Equals(Byte4)
- uid: Vim.Math3d.Byte4.Equals*
  name: Equals
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Equals_
  commentId: Overload:Vim.Math3d.Byte4.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.Equals
  nameWithType: Byte4.Equals
- uid: Vim.Math3d.Byte4.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_GetHashCode
  commentId: M:Vim.Math3d.Byte4.GetHashCode
  fullName: Vim.Math3d.Byte4.GetHashCode()
  nameWithType: Byte4.GetHashCode()
- uid: Vim.Math3d.Byte4.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_GetHashCode_
  commentId: Overload:Vim.Math3d.Byte4.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.GetHashCode
  nameWithType: Byte4.GetHashCode
- uid: Vim.Math3d.Byte4.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_MaxValue
  commentId: F:Vim.Math3d.Byte4.MaxValue
  fullName: Vim.Math3d.Byte4.MaxValue
  nameWithType: Byte4.MaxValue
- uid: Vim.Math3d.Byte4.MinValue
  name: MinValue
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_MinValue
  commentId: F:Vim.Math3d.Byte4.MinValue
  fullName: Vim.Math3d.Byte4.MinValue
  nameWithType: Byte4.MinValue
- uid: Vim.Math3d.Byte4.op_Equality(Vim.Math3d.Byte4,Vim.Math3d.Byte4)
  name: Equality(Byte4, Byte4)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_op_Equality_Vim_Math3d_Byte4_Vim_Math3d_Byte4_
  commentId: M:Vim.Math3d.Byte4.op_Equality(Vim.Math3d.Byte4,Vim.Math3d.Byte4)
  fullName: Vim.Math3d.Byte4.Equality(Vim.Math3d.Byte4, Vim.Math3d.Byte4)
  nameWithType: Byte4.Equality(Byte4, Byte4)
- uid: Vim.Math3d.Byte4.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_op_Equality_
  commentId: Overload:Vim.Math3d.Byte4.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.Equality
  nameWithType: Byte4.Equality
- uid: Vim.Math3d.Byte4.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~Vim.Math3d.Byte4
  name: Implicit((Byte x, Byte y, Byte z, Byte w) to Byte4)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_op_Implicit_System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte___Vim_Math3d_Byte4
  commentId: M:Vim.Math3d.Byte4.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~Vim.Math3d.Byte4
  name.vb: Widening((x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte) to Byte4)
  fullName: Vim.Math3d.Byte4.Implicit(System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte> to Vim.Math3d.Byte4)
  fullName.vb: Vim.Math3d.Byte4.Widening(System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte) to Vim.Math3d.Byte4)
  nameWithType: Byte4.Implicit((Byte x, Byte y, Byte z, Byte w) to Byte4)
  nameWithType.vb: Byte4.Widening((x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte) to Byte4)
- uid: Vim.Math3d.Byte4.op_Implicit(Vim.Math3d.Byte4)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  name: Implicit(Byte4 to (Byte x, Byte y, Byte z, Byte w))
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_op_Implicit_Vim_Math3d_Byte4__System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.Byte4.op_Implicit(Vim.Math3d.Byte4)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  name.vb: Widening(Byte4 to (x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte))
  fullName: Vim.Math3d.Byte4.Implicit(Vim.Math3d.Byte4 to System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.Byte4.Widening(Vim.Math3d.Byte4 to System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte))
  nameWithType: Byte4.Implicit(Byte4 to (Byte x, Byte y, Byte z, Byte w))
  nameWithType.vb: Byte4.Widening(Byte4 to (x As Byte, y As Byte, z As Byte, w As Byte)(Of Byte, Byte, Byte, Byte))
- uid: Vim.Math3d.Byte4.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_op_Implicit_
  commentId: Overload:Vim.Math3d.Byte4.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Byte4.Implicit
  fullName.vb: Vim.Math3d.Byte4.Widening
  nameWithType: Byte4.Implicit
  nameWithType.vb: Byte4.Widening
- uid: Vim.Math3d.Byte4.op_Inequality(Vim.Math3d.Byte4,Vim.Math3d.Byte4)
  name: Inequality(Byte4, Byte4)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_op_Inequality_Vim_Math3d_Byte4_Vim_Math3d_Byte4_
  commentId: M:Vim.Math3d.Byte4.op_Inequality(Vim.Math3d.Byte4,Vim.Math3d.Byte4)
  fullName: Vim.Math3d.Byte4.Inequality(Vim.Math3d.Byte4, Vim.Math3d.Byte4)
  nameWithType: Byte4.Inequality(Byte4, Byte4)
- uid: Vim.Math3d.Byte4.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_op_Inequality_
  commentId: Overload:Vim.Math3d.Byte4.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.Inequality
  nameWithType: Byte4.Inequality
- uid: Vim.Math3d.Byte4.SetW(System.Byte)
  name: SetW(Byte)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetW_System_Byte_
  commentId: M:Vim.Math3d.Byte4.SetW(System.Byte)
  fullName: Vim.Math3d.Byte4.SetW(System.Byte)
  nameWithType: Byte4.SetW(Byte)
- uid: Vim.Math3d.Byte4.SetW*
  name: SetW
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetW_
  commentId: Overload:Vim.Math3d.Byte4.SetW
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.SetW
  nameWithType: Byte4.SetW
- uid: Vim.Math3d.Byte4.SetX(System.Byte)
  name: SetX(Byte)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetX_System_Byte_
  commentId: M:Vim.Math3d.Byte4.SetX(System.Byte)
  fullName: Vim.Math3d.Byte4.SetX(System.Byte)
  nameWithType: Byte4.SetX(Byte)
- uid: Vim.Math3d.Byte4.SetX*
  name: SetX
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetX_
  commentId: Overload:Vim.Math3d.Byte4.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.SetX
  nameWithType: Byte4.SetX
- uid: Vim.Math3d.Byte4.SetY(System.Byte)
  name: SetY(Byte)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetY_System_Byte_
  commentId: M:Vim.Math3d.Byte4.SetY(System.Byte)
  fullName: Vim.Math3d.Byte4.SetY(System.Byte)
  nameWithType: Byte4.SetY(Byte)
- uid: Vim.Math3d.Byte4.SetY*
  name: SetY
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetY_
  commentId: Overload:Vim.Math3d.Byte4.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.SetY
  nameWithType: Byte4.SetY
- uid: Vim.Math3d.Byte4.SetZ(System.Byte)
  name: SetZ(Byte)
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetZ_System_Byte_
  commentId: M:Vim.Math3d.Byte4.SetZ(System.Byte)
  fullName: Vim.Math3d.Byte4.SetZ(System.Byte)
  nameWithType: Byte4.SetZ(Byte)
- uid: Vim.Math3d.Byte4.SetZ*
  name: SetZ
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_SetZ_
  commentId: Overload:Vim.Math3d.Byte4.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.SetZ
  nameWithType: Byte4.SetZ
- uid: Vim.Math3d.Byte4.ToString
  name: ToString()
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_ToString
  commentId: M:Vim.Math3d.Byte4.ToString
  fullName: Vim.Math3d.Byte4.ToString()
  nameWithType: Byte4.ToString()
- uid: Vim.Math3d.Byte4.ToString*
  name: ToString
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_ToString_
  commentId: Overload:Vim.Math3d.Byte4.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Byte4.ToString
  nameWithType: Byte4.ToString
- uid: Vim.Math3d.Byte4.W
  name: W
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_W
  commentId: F:Vim.Math3d.Byte4.W
  fullName: Vim.Math3d.Byte4.W
  nameWithType: Byte4.W
- uid: Vim.Math3d.Byte4.X
  name: X
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_X
  commentId: F:Vim.Math3d.Byte4.X
  fullName: Vim.Math3d.Byte4.X
  nameWithType: Byte4.X
- uid: Vim.Math3d.Byte4.Y
  name: Y
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Y
  commentId: F:Vim.Math3d.Byte4.Y
  fullName: Vim.Math3d.Byte4.Y
  nameWithType: Byte4.Y
- uid: Vim.Math3d.Byte4.Z
  name: Z
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Z
  commentId: F:Vim.Math3d.Byte4.Z
  fullName: Vim.Math3d.Byte4.Z
  nameWithType: Byte4.Z
- uid: Vim.Math3d.Byte4.Zero
  name: Zero
  href: api/Vim.Math3d.Byte4.html#Vim_Math3d_Byte4_Zero
  commentId: F:Vim.Math3d.Byte4.Zero
  fullName: Vim.Math3d.Byte4.Zero
  nameWithType: Byte4.Zero
- uid: Vim.Math3d.ColorHDR
  name: ColorHDR
  href: api/Vim.Math3d.ColorHDR.html
  commentId: T:Vim.Math3d.ColorHDR
  fullName: Vim.Math3d.ColorHDR
  nameWithType: ColorHDR
- uid: Vim.Math3d.ColorHDR.#ctor(System.Single,System.Single,System.Single,System.Single)
  name: ColorHDR(Single, Single, Single, Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR__ctor_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.#ctor(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.ColorHDR.ColorHDR(System.Single, System.Single, System.Single, System.Single)
  nameWithType: ColorHDR.ColorHDR(Single, Single, Single, Single)
- uid: Vim.Math3d.ColorHDR.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name: ColorHDR((Single r, Single g, Single b, Single a))
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR__ctor_System_ValueTuple_System_Single_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.ColorHDR.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name.vb: ColorHDR((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.ColorHDR.ColorHDR(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.ColorHDR.ColorHDR(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: ColorHDR.ColorHDR((Single r, Single g, Single b, Single a))
  nameWithType.vb: ColorHDR.ColorHDR((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.ColorHDR.#ctor*
  name: ColorHDR
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR__ctor_
  commentId: Overload:Vim.Math3d.ColorHDR.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.ColorHDR
  nameWithType: ColorHDR.ColorHDR
- uid: Vim.Math3d.ColorHDR.A
  name: A
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_A
  commentId: F:Vim.Math3d.ColorHDR.A
  fullName: Vim.Math3d.ColorHDR.A
  nameWithType: ColorHDR.A
- uid: Vim.Math3d.ColorHDR.AlmostEquals(Vim.Math3d.ColorHDR,System.Single)
  name: AlmostEquals(ColorHDR, Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_AlmostEquals_Vim_Math3d_ColorHDR_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.AlmostEquals(Vim.Math3d.ColorHDR,System.Single)
  fullName: Vim.Math3d.ColorHDR.AlmostEquals(Vim.Math3d.ColorHDR, System.Single)
  nameWithType: ColorHDR.AlmostEquals(ColorHDR, Single)
- uid: Vim.Math3d.ColorHDR.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_AlmostEquals_
  commentId: Overload:Vim.Math3d.ColorHDR.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.AlmostEquals
  nameWithType: ColorHDR.AlmostEquals
- uid: Vim.Math3d.ColorHDR.B
  name: B
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_B
  commentId: F:Vim.Math3d.ColorHDR.B
  fullName: Vim.Math3d.ColorHDR.B
  nameWithType: ColorHDR.B
- uid: Vim.Math3d.ColorHDR.Create(System.Single,System.Single,System.Single,System.Single)
  name: Create(Single, Single, Single, Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Create_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.Create(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.ColorHDR.Create(System.Single, System.Single, System.Single, System.Single)
  nameWithType: ColorHDR.Create(Single, Single, Single, Single)
- uid: Vim.Math3d.ColorHDR.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name: Create((Single r, Single g, Single b, Single a))
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Create_System_ValueTuple_System_Single_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.ColorHDR.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name.vb: Create((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.ColorHDR.Create(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.ColorHDR.Create(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: ColorHDR.Create((Single r, Single g, Single b, Single a))
  nameWithType.vb: ColorHDR.Create((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.ColorHDR.Create*
  name: Create
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Create_
  commentId: Overload:Vim.Math3d.ColorHDR.Create
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.Create
  nameWithType: ColorHDR.Create
- uid: Vim.Math3d.ColorHDR.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  name: Deconstruct(out Single, out Single, out Single, out Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Deconstruct_System_Single__System_Single__System_Single__System_Single__
  commentId: M:Vim.Math3d.ColorHDR.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  name.vb: Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  fullName: Vim.Math3d.ColorHDR.Deconstruct(out System.Single, out System.Single, out System.Single, out System.Single)
  fullName.vb: Vim.Math3d.ColorHDR.Deconstruct(ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  nameWithType: ColorHDR.Deconstruct(out Single, out Single, out Single, out Single)
  nameWithType.vb: ColorHDR.Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
- uid: Vim.Math3d.ColorHDR.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Deconstruct_
  commentId: Overload:Vim.Math3d.ColorHDR.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.Deconstruct
  nameWithType: ColorHDR.Deconstruct
- uid: Vim.Math3d.ColorHDR.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Equals_System_Object_
  commentId: M:Vim.Math3d.ColorHDR.Equals(System.Object)
  fullName: Vim.Math3d.ColorHDR.Equals(System.Object)
  nameWithType: ColorHDR.Equals(Object)
- uid: Vim.Math3d.ColorHDR.Equals(Vim.Math3d.ColorHDR)
  name: Equals(ColorHDR)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Equals_Vim_Math3d_ColorHDR_
  commentId: M:Vim.Math3d.ColorHDR.Equals(Vim.Math3d.ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Equals(Vim.Math3d.ColorHDR)
  nameWithType: ColorHDR.Equals(ColorHDR)
- uid: Vim.Math3d.ColorHDR.Equals*
  name: Equals
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Equals_
  commentId: Overload:Vim.Math3d.ColorHDR.Equals
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.Equals
  nameWithType: ColorHDR.Equals
- uid: Vim.Math3d.ColorHDR.G
  name: G
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_G
  commentId: F:Vim.Math3d.ColorHDR.G
  fullName: Vim.Math3d.ColorHDR.G
  nameWithType: ColorHDR.G
- uid: Vim.Math3d.ColorHDR.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_GetHashCode
  commentId: M:Vim.Math3d.ColorHDR.GetHashCode
  fullName: Vim.Math3d.ColorHDR.GetHashCode()
  nameWithType: ColorHDR.GetHashCode()
- uid: Vim.Math3d.ColorHDR.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_GetHashCode_
  commentId: Overload:Vim.Math3d.ColorHDR.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.GetHashCode
  nameWithType: ColorHDR.GetHashCode
- uid: Vim.Math3d.ColorHDR.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_MaxValue
  commentId: F:Vim.Math3d.ColorHDR.MaxValue
  fullName: Vim.Math3d.ColorHDR.MaxValue
  nameWithType: ColorHDR.MaxValue
- uid: Vim.Math3d.ColorHDR.MinValue
  name: MinValue
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_MinValue
  commentId: F:Vim.Math3d.ColorHDR.MinValue
  fullName: Vim.Math3d.ColorHDR.MinValue
  nameWithType: ColorHDR.MinValue
- uid: Vim.Math3d.ColorHDR.op_Equality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  name: Equality(ColorHDR, ColorHDR)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_op_Equality_Vim_Math3d_ColorHDR_Vim_Math3d_ColorHDR_
  commentId: M:Vim.Math3d.ColorHDR.op_Equality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Equality(Vim.Math3d.ColorHDR, Vim.Math3d.ColorHDR)
  nameWithType: ColorHDR.Equality(ColorHDR, ColorHDR)
- uid: Vim.Math3d.ColorHDR.op_Equality*
  name: Equality
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_op_Equality_
  commentId: Overload:Vim.Math3d.ColorHDR.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.Equality
  nameWithType: ColorHDR.Equality
- uid: Vim.Math3d.ColorHDR.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.ColorHDR
  name: Implicit((Single r, Single g, Single b, Single a) to ColorHDR)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_op_Implicit_System_ValueTuple_System_Single_System_Single_System_Single_System_Single___Vim_Math3d_ColorHDR
  commentId: M:Vim.Math3d.ColorHDR.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.ColorHDR
  name.vb: Widening((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single) to ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Implicit(System.ValueTuple<System.Single, System.Single, System.Single, System.Single> to Vim.Math3d.ColorHDR)
  fullName.vb: Vim.Math3d.ColorHDR.Widening(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single) to Vim.Math3d.ColorHDR)
  nameWithType: ColorHDR.Implicit((Single r, Single g, Single b, Single a) to ColorHDR)
  nameWithType.vb: ColorHDR.Widening((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single) to ColorHDR)
- uid: Vim.Math3d.ColorHDR.op_Implicit(Vim.Math3d.ColorHDR)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  name: Implicit(ColorHDR to (Single r, Single g, Single b, Single a))
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_op_Implicit_Vim_Math3d_ColorHDR__System_ValueTuple_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.op_Implicit(Vim.Math3d.ColorHDR)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  name.vb: Widening(ColorHDR to (r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.ColorHDR.Implicit(Vim.Math3d.ColorHDR to System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.ColorHDR.Widening(Vim.Math3d.ColorHDR to System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: ColorHDR.Implicit(ColorHDR to (Single r, Single g, Single b, Single a))
  nameWithType.vb: ColorHDR.Widening(ColorHDR to (r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.ColorHDR.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_op_Implicit_
  commentId: Overload:Vim.Math3d.ColorHDR.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.ColorHDR.Implicit
  fullName.vb: Vim.Math3d.ColorHDR.Widening
  nameWithType: ColorHDR.Implicit
  nameWithType.vb: ColorHDR.Widening
- uid: Vim.Math3d.ColorHDR.op_Inequality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  name: Inequality(ColorHDR, ColorHDR)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_op_Inequality_Vim_Math3d_ColorHDR_Vim_Math3d_ColorHDR_
  commentId: M:Vim.Math3d.ColorHDR.op_Inequality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Inequality(Vim.Math3d.ColorHDR, Vim.Math3d.ColorHDR)
  nameWithType: ColorHDR.Inequality(ColorHDR, ColorHDR)
- uid: Vim.Math3d.ColorHDR.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_op_Inequality_
  commentId: Overload:Vim.Math3d.ColorHDR.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.Inequality
  nameWithType: ColorHDR.Inequality
- uid: Vim.Math3d.ColorHDR.R
  name: R
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_R
  commentId: F:Vim.Math3d.ColorHDR.R
  fullName: Vim.Math3d.ColorHDR.R
  nameWithType: ColorHDR.R
- uid: Vim.Math3d.ColorHDR.SetA(System.Single)
  name: SetA(Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetA_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.SetA(System.Single)
  fullName: Vim.Math3d.ColorHDR.SetA(System.Single)
  nameWithType: ColorHDR.SetA(Single)
- uid: Vim.Math3d.ColorHDR.SetA*
  name: SetA
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetA_
  commentId: Overload:Vim.Math3d.ColorHDR.SetA
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.SetA
  nameWithType: ColorHDR.SetA
- uid: Vim.Math3d.ColorHDR.SetB(System.Single)
  name: SetB(Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetB_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.SetB(System.Single)
  fullName: Vim.Math3d.ColorHDR.SetB(System.Single)
  nameWithType: ColorHDR.SetB(Single)
- uid: Vim.Math3d.ColorHDR.SetB*
  name: SetB
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetB_
  commentId: Overload:Vim.Math3d.ColorHDR.SetB
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.SetB
  nameWithType: ColorHDR.SetB
- uid: Vim.Math3d.ColorHDR.SetG(System.Single)
  name: SetG(Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetG_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.SetG(System.Single)
  fullName: Vim.Math3d.ColorHDR.SetG(System.Single)
  nameWithType: ColorHDR.SetG(Single)
- uid: Vim.Math3d.ColorHDR.SetG*
  name: SetG
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetG_
  commentId: Overload:Vim.Math3d.ColorHDR.SetG
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.SetG
  nameWithType: ColorHDR.SetG
- uid: Vim.Math3d.ColorHDR.SetR(System.Single)
  name: SetR(Single)
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetR_System_Single_
  commentId: M:Vim.Math3d.ColorHDR.SetR(System.Single)
  fullName: Vim.Math3d.ColorHDR.SetR(System.Single)
  nameWithType: ColorHDR.SetR(Single)
- uid: Vim.Math3d.ColorHDR.SetR*
  name: SetR
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_SetR_
  commentId: Overload:Vim.Math3d.ColorHDR.SetR
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.SetR
  nameWithType: ColorHDR.SetR
- uid: Vim.Math3d.ColorHDR.ToString
  name: ToString()
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_ToString
  commentId: M:Vim.Math3d.ColorHDR.ToString
  fullName: Vim.Math3d.ColorHDR.ToString()
  nameWithType: ColorHDR.ToString()
- uid: Vim.Math3d.ColorHDR.ToString*
  name: ToString
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_ToString_
  commentId: Overload:Vim.Math3d.ColorHDR.ToString
  isSpec: "True"
  fullName: Vim.Math3d.ColorHDR.ToString
  nameWithType: ColorHDR.ToString
- uid: Vim.Math3d.ColorHDR.Zero
  name: Zero
  href: api/Vim.Math3d.ColorHDR.html#Vim_Math3d_ColorHDR_Zero
  commentId: F:Vim.Math3d.ColorHDR.Zero
  fullName: Vim.Math3d.ColorHDR.Zero
  nameWithType: ColorHDR.Zero
- uid: Vim.Math3d.ColorRGB
  name: ColorRGB
  href: api/Vim.Math3d.ColorRGB.html
  commentId: T:Vim.Math3d.ColorRGB
  fullName: Vim.Math3d.ColorRGB
  nameWithType: ColorRGB
- uid: Vim.Math3d.ColorRGB.#ctor(System.Byte,System.Byte,System.Byte)
  name: ColorRGB(Byte, Byte, Byte)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB__ctor_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.ColorRGB.#ctor(System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.ColorRGB.ColorRGB(System.Byte, System.Byte, System.Byte)
  nameWithType: ColorRGB.ColorRGB(Byte, Byte, Byte)
- uid: Vim.Math3d.ColorRGB.#ctor(System.Int64)
  name: ColorRGB(Int64)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB__ctor_System_Int64_
  commentId: M:Vim.Math3d.ColorRGB.#ctor(System.Int64)
  fullName: Vim.Math3d.ColorRGB.ColorRGB(System.Int64)
  nameWithType: ColorRGB.ColorRGB(Int64)
- uid: Vim.Math3d.ColorRGB.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name: ColorRGB((Byte r, Byte g, Byte b))
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB__ctor_System_ValueTuple_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.ColorRGB.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name.vb: ColorRGB((r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte))
  fullName: Vim.Math3d.ColorRGB.ColorRGB(System.ValueTuple<System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.ColorRGB.ColorRGB(System.ValueTuple(Of System.Byte, System.Byte, System.Byte))
  nameWithType: ColorRGB.ColorRGB((Byte r, Byte g, Byte b))
  nameWithType.vb: ColorRGB.ColorRGB((r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte))
- uid: Vim.Math3d.ColorRGB.#ctor*
  name: ColorRGB
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB__ctor_
  commentId: Overload:Vim.Math3d.ColorRGB.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.ColorRGB
  nameWithType: ColorRGB.ColorRGB
- uid: Vim.Math3d.ColorRGB.AliceBlue
  name: AliceBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_AliceBlue
  commentId: F:Vim.Math3d.ColorRGB.AliceBlue
  fullName: Vim.Math3d.ColorRGB.AliceBlue
  nameWithType: ColorRGB.AliceBlue
- uid: Vim.Math3d.ColorRGB.AntiqueWhite
  name: AntiqueWhite
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_AntiqueWhite
  commentId: F:Vim.Math3d.ColorRGB.AntiqueWhite
  fullName: Vim.Math3d.ColorRGB.AntiqueWhite
  nameWithType: ColorRGB.AntiqueWhite
- uid: Vim.Math3d.ColorRGB.Aqua
  name: Aqua
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Aqua
  commentId: F:Vim.Math3d.ColorRGB.Aqua
  fullName: Vim.Math3d.ColorRGB.Aqua
  nameWithType: ColorRGB.Aqua
- uid: Vim.Math3d.ColorRGB.Aquamarine
  name: Aquamarine
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Aquamarine
  commentId: F:Vim.Math3d.ColorRGB.Aquamarine
  fullName: Vim.Math3d.ColorRGB.Aquamarine
  nameWithType: ColorRGB.Aquamarine
- uid: Vim.Math3d.ColorRGB.Azure
  name: Azure
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Azure
  commentId: F:Vim.Math3d.ColorRGB.Azure
  fullName: Vim.Math3d.ColorRGB.Azure
  nameWithType: ColorRGB.Azure
- uid: Vim.Math3d.ColorRGB.B
  name: B
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_B
  commentId: F:Vim.Math3d.ColorRGB.B
  fullName: Vim.Math3d.ColorRGB.B
  nameWithType: ColorRGB.B
- uid: Vim.Math3d.ColorRGB.Beige
  name: Beige
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Beige
  commentId: F:Vim.Math3d.ColorRGB.Beige
  fullName: Vim.Math3d.ColorRGB.Beige
  nameWithType: ColorRGB.Beige
- uid: Vim.Math3d.ColorRGB.Bisque
  name: Bisque
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Bisque
  commentId: F:Vim.Math3d.ColorRGB.Bisque
  fullName: Vim.Math3d.ColorRGB.Bisque
  nameWithType: ColorRGB.Bisque
- uid: Vim.Math3d.ColorRGB.Black
  name: Black
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Black
  commentId: F:Vim.Math3d.ColorRGB.Black
  fullName: Vim.Math3d.ColorRGB.Black
  nameWithType: ColorRGB.Black
- uid: Vim.Math3d.ColorRGB.BlanchedAlmond
  name: BlanchedAlmond
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_BlanchedAlmond
  commentId: F:Vim.Math3d.ColorRGB.BlanchedAlmond
  fullName: Vim.Math3d.ColorRGB.BlanchedAlmond
  nameWithType: ColorRGB.BlanchedAlmond
- uid: Vim.Math3d.ColorRGB.Blue
  name: Blue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Blue
  commentId: F:Vim.Math3d.ColorRGB.Blue
  fullName: Vim.Math3d.ColorRGB.Blue
  nameWithType: ColorRGB.Blue
- uid: Vim.Math3d.ColorRGB.BlueViolet
  name: BlueViolet
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_BlueViolet
  commentId: F:Vim.Math3d.ColorRGB.BlueViolet
  fullName: Vim.Math3d.ColorRGB.BlueViolet
  nameWithType: ColorRGB.BlueViolet
- uid: Vim.Math3d.ColorRGB.Brown
  name: Brown
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Brown
  commentId: F:Vim.Math3d.ColorRGB.Brown
  fullName: Vim.Math3d.ColorRGB.Brown
  nameWithType: ColorRGB.Brown
- uid: Vim.Math3d.ColorRGB.BurlyWood
  name: BurlyWood
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_BurlyWood
  commentId: F:Vim.Math3d.ColorRGB.BurlyWood
  fullName: Vim.Math3d.ColorRGB.BurlyWood
  nameWithType: ColorRGB.BurlyWood
- uid: Vim.Math3d.ColorRGB.CadetBlue
  name: CadetBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_CadetBlue
  commentId: F:Vim.Math3d.ColorRGB.CadetBlue
  fullName: Vim.Math3d.ColorRGB.CadetBlue
  nameWithType: ColorRGB.CadetBlue
- uid: Vim.Math3d.ColorRGB.Chartreuse
  name: Chartreuse
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Chartreuse
  commentId: F:Vim.Math3d.ColorRGB.Chartreuse
  fullName: Vim.Math3d.ColorRGB.Chartreuse
  nameWithType: ColorRGB.Chartreuse
- uid: Vim.Math3d.ColorRGB.Chocolate
  name: Chocolate
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Chocolate
  commentId: F:Vim.Math3d.ColorRGB.Chocolate
  fullName: Vim.Math3d.ColorRGB.Chocolate
  nameWithType: ColorRGB.Chocolate
- uid: Vim.Math3d.ColorRGB.Coral
  name: Coral
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Coral
  commentId: F:Vim.Math3d.ColorRGB.Coral
  fullName: Vim.Math3d.ColorRGB.Coral
  nameWithType: ColorRGB.Coral
- uid: Vim.Math3d.ColorRGB.CornflowerBlue
  name: CornflowerBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_CornflowerBlue
  commentId: F:Vim.Math3d.ColorRGB.CornflowerBlue
  fullName: Vim.Math3d.ColorRGB.CornflowerBlue
  nameWithType: ColorRGB.CornflowerBlue
- uid: Vim.Math3d.ColorRGB.Cornsilk
  name: Cornsilk
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Cornsilk
  commentId: F:Vim.Math3d.ColorRGB.Cornsilk
  fullName: Vim.Math3d.ColorRGB.Cornsilk
  nameWithType: ColorRGB.Cornsilk
- uid: Vim.Math3d.ColorRGB.Create(System.Byte,System.Byte,System.Byte)
  name: Create(Byte, Byte, Byte)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Create_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.ColorRGB.Create(System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.ColorRGB.Create(System.Byte, System.Byte, System.Byte)
  nameWithType: ColorRGB.Create(Byte, Byte, Byte)
- uid: Vim.Math3d.ColorRGB.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name: Create((Byte r, Byte g, Byte b))
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Create_System_ValueTuple_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.ColorRGB.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte})
  name.vb: Create((r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte))
  fullName: Vim.Math3d.ColorRGB.Create(System.ValueTuple<System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.ColorRGB.Create(System.ValueTuple(Of System.Byte, System.Byte, System.Byte))
  nameWithType: ColorRGB.Create((Byte r, Byte g, Byte b))
  nameWithType.vb: ColorRGB.Create((r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte))
- uid: Vim.Math3d.ColorRGB.Create*
  name: Create
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Create_
  commentId: Overload:Vim.Math3d.ColorRGB.Create
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.Create
  nameWithType: ColorRGB.Create
- uid: Vim.Math3d.ColorRGB.Crimson
  name: Crimson
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Crimson
  commentId: F:Vim.Math3d.ColorRGB.Crimson
  fullName: Vim.Math3d.ColorRGB.Crimson
  nameWithType: ColorRGB.Crimson
- uid: Vim.Math3d.ColorRGB.Cyan
  name: Cyan
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Cyan
  commentId: F:Vim.Math3d.ColorRGB.Cyan
  fullName: Vim.Math3d.ColorRGB.Cyan
  nameWithType: ColorRGB.Cyan
- uid: Vim.Math3d.ColorRGB.DarkBlue
  name: DarkBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkBlue
  commentId: F:Vim.Math3d.ColorRGB.DarkBlue
  fullName: Vim.Math3d.ColorRGB.DarkBlue
  nameWithType: ColorRGB.DarkBlue
- uid: Vim.Math3d.ColorRGB.DarkCyan
  name: DarkCyan
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkCyan
  commentId: F:Vim.Math3d.ColorRGB.DarkCyan
  fullName: Vim.Math3d.ColorRGB.DarkCyan
  nameWithType: ColorRGB.DarkCyan
- uid: Vim.Math3d.ColorRGB.DarkGoldenrod
  name: DarkGoldenrod
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkGoldenrod
  commentId: F:Vim.Math3d.ColorRGB.DarkGoldenrod
  fullName: Vim.Math3d.ColorRGB.DarkGoldenrod
  nameWithType: ColorRGB.DarkGoldenrod
- uid: Vim.Math3d.ColorRGB.DarkGray
  name: DarkGray
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkGray
  commentId: F:Vim.Math3d.ColorRGB.DarkGray
  fullName: Vim.Math3d.ColorRGB.DarkGray
  nameWithType: ColorRGB.DarkGray
- uid: Vim.Math3d.ColorRGB.DarkGreen
  name: DarkGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkGreen
  commentId: F:Vim.Math3d.ColorRGB.DarkGreen
  fullName: Vim.Math3d.ColorRGB.DarkGreen
  nameWithType: ColorRGB.DarkGreen
- uid: Vim.Math3d.ColorRGB.DarkKhaki
  name: DarkKhaki
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkKhaki
  commentId: F:Vim.Math3d.ColorRGB.DarkKhaki
  fullName: Vim.Math3d.ColorRGB.DarkKhaki
  nameWithType: ColorRGB.DarkKhaki
- uid: Vim.Math3d.ColorRGB.DarkMagenta
  name: DarkMagenta
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkMagenta
  commentId: F:Vim.Math3d.ColorRGB.DarkMagenta
  fullName: Vim.Math3d.ColorRGB.DarkMagenta
  nameWithType: ColorRGB.DarkMagenta
- uid: Vim.Math3d.ColorRGB.DarkOliveGreen
  name: DarkOliveGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkOliveGreen
  commentId: F:Vim.Math3d.ColorRGB.DarkOliveGreen
  fullName: Vim.Math3d.ColorRGB.DarkOliveGreen
  nameWithType: ColorRGB.DarkOliveGreen
- uid: Vim.Math3d.ColorRGB.DarkOrange
  name: DarkOrange
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkOrange
  commentId: F:Vim.Math3d.ColorRGB.DarkOrange
  fullName: Vim.Math3d.ColorRGB.DarkOrange
  nameWithType: ColorRGB.DarkOrange
- uid: Vim.Math3d.ColorRGB.DarkOrchid
  name: DarkOrchid
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkOrchid
  commentId: F:Vim.Math3d.ColorRGB.DarkOrchid
  fullName: Vim.Math3d.ColorRGB.DarkOrchid
  nameWithType: ColorRGB.DarkOrchid
- uid: Vim.Math3d.ColorRGB.DarkRed
  name: DarkRed
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkRed
  commentId: F:Vim.Math3d.ColorRGB.DarkRed
  fullName: Vim.Math3d.ColorRGB.DarkRed
  nameWithType: ColorRGB.DarkRed
- uid: Vim.Math3d.ColorRGB.DarkSalmon
  name: DarkSalmon
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkSalmon
  commentId: F:Vim.Math3d.ColorRGB.DarkSalmon
  fullName: Vim.Math3d.ColorRGB.DarkSalmon
  nameWithType: ColorRGB.DarkSalmon
- uid: Vim.Math3d.ColorRGB.DarkSeaGreen
  name: DarkSeaGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkSeaGreen
  commentId: F:Vim.Math3d.ColorRGB.DarkSeaGreen
  fullName: Vim.Math3d.ColorRGB.DarkSeaGreen
  nameWithType: ColorRGB.DarkSeaGreen
- uid: Vim.Math3d.ColorRGB.DarkSlateBlue
  name: DarkSlateBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkSlateBlue
  commentId: F:Vim.Math3d.ColorRGB.DarkSlateBlue
  fullName: Vim.Math3d.ColorRGB.DarkSlateBlue
  nameWithType: ColorRGB.DarkSlateBlue
- uid: Vim.Math3d.ColorRGB.DarkSlateGray
  name: DarkSlateGray
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkSlateGray
  commentId: F:Vim.Math3d.ColorRGB.DarkSlateGray
  fullName: Vim.Math3d.ColorRGB.DarkSlateGray
  nameWithType: ColorRGB.DarkSlateGray
- uid: Vim.Math3d.ColorRGB.DarkTurquoise
  name: DarkTurquoise
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkTurquoise
  commentId: F:Vim.Math3d.ColorRGB.DarkTurquoise
  fullName: Vim.Math3d.ColorRGB.DarkTurquoise
  nameWithType: ColorRGB.DarkTurquoise
- uid: Vim.Math3d.ColorRGB.DarkViolet
  name: DarkViolet
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DarkViolet
  commentId: F:Vim.Math3d.ColorRGB.DarkViolet
  fullName: Vim.Math3d.ColorRGB.DarkViolet
  nameWithType: ColorRGB.DarkViolet
- uid: Vim.Math3d.ColorRGB.Deconstruct(System.Byte@,System.Byte@,System.Byte@)
  name: Deconstruct(out Byte, out Byte, out Byte)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Deconstruct_System_Byte__System_Byte__System_Byte__
  commentId: M:Vim.Math3d.ColorRGB.Deconstruct(System.Byte@,System.Byte@,System.Byte@)
  name.vb: Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte)
  fullName: Vim.Math3d.ColorRGB.Deconstruct(out System.Byte, out System.Byte, out System.Byte)
  fullName.vb: Vim.Math3d.ColorRGB.Deconstruct(ByRef System.Byte, ByRef System.Byte, ByRef System.Byte)
  nameWithType: ColorRGB.Deconstruct(out Byte, out Byte, out Byte)
  nameWithType.vb: ColorRGB.Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte)
- uid: Vim.Math3d.ColorRGB.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Deconstruct_
  commentId: Overload:Vim.Math3d.ColorRGB.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.Deconstruct
  nameWithType: ColorRGB.Deconstruct
- uid: Vim.Math3d.ColorRGB.DeepPink
  name: DeepPink
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DeepPink
  commentId: F:Vim.Math3d.ColorRGB.DeepPink
  fullName: Vim.Math3d.ColorRGB.DeepPink
  nameWithType: ColorRGB.DeepPink
- uid: Vim.Math3d.ColorRGB.DeepSkyBlue
  name: DeepSkyBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DeepSkyBlue
  commentId: F:Vim.Math3d.ColorRGB.DeepSkyBlue
  fullName: Vim.Math3d.ColorRGB.DeepSkyBlue
  nameWithType: ColorRGB.DeepSkyBlue
- uid: Vim.Math3d.ColorRGB.DimGray
  name: DimGray
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DimGray
  commentId: F:Vim.Math3d.ColorRGB.DimGray
  fullName: Vim.Math3d.ColorRGB.DimGray
  nameWithType: ColorRGB.DimGray
- uid: Vim.Math3d.ColorRGB.DodgerBlue
  name: DodgerBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_DodgerBlue
  commentId: F:Vim.Math3d.ColorRGB.DodgerBlue
  fullName: Vim.Math3d.ColorRGB.DodgerBlue
  nameWithType: ColorRGB.DodgerBlue
- uid: Vim.Math3d.ColorRGB.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Equals_System_Object_
  commentId: M:Vim.Math3d.ColorRGB.Equals(System.Object)
  fullName: Vim.Math3d.ColorRGB.Equals(System.Object)
  nameWithType: ColorRGB.Equals(Object)
- uid: Vim.Math3d.ColorRGB.Equals(Vim.Math3d.ColorRGB)
  name: Equals(ColorRGB)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Equals_Vim_Math3d_ColorRGB_
  commentId: M:Vim.Math3d.ColorRGB.Equals(Vim.Math3d.ColorRGB)
  fullName: Vim.Math3d.ColorRGB.Equals(Vim.Math3d.ColorRGB)
  nameWithType: ColorRGB.Equals(ColorRGB)
- uid: Vim.Math3d.ColorRGB.Equals*
  name: Equals
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Equals_
  commentId: Overload:Vim.Math3d.ColorRGB.Equals
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.Equals
  nameWithType: ColorRGB.Equals
- uid: Vim.Math3d.ColorRGB.Firebrick
  name: Firebrick
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Firebrick
  commentId: F:Vim.Math3d.ColorRGB.Firebrick
  fullName: Vim.Math3d.ColorRGB.Firebrick
  nameWithType: ColorRGB.Firebrick
- uid: Vim.Math3d.ColorRGB.FloralWhite
  name: FloralWhite
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_FloralWhite
  commentId: F:Vim.Math3d.ColorRGB.FloralWhite
  fullName: Vim.Math3d.ColorRGB.FloralWhite
  nameWithType: ColorRGB.FloralWhite
- uid: Vim.Math3d.ColorRGB.ForestGreen
  name: ForestGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_ForestGreen
  commentId: F:Vim.Math3d.ColorRGB.ForestGreen
  fullName: Vim.Math3d.ColorRGB.ForestGreen
  nameWithType: ColorRGB.ForestGreen
- uid: Vim.Math3d.ColorRGB.Fuchsia
  name: Fuchsia
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Fuchsia
  commentId: F:Vim.Math3d.ColorRGB.Fuchsia
  fullName: Vim.Math3d.ColorRGB.Fuchsia
  nameWithType: ColorRGB.Fuchsia
- uid: Vim.Math3d.ColorRGB.G
  name: G
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_G
  commentId: F:Vim.Math3d.ColorRGB.G
  fullName: Vim.Math3d.ColorRGB.G
  nameWithType: ColorRGB.G
- uid: Vim.Math3d.ColorRGB.Gainsboro
  name: Gainsboro
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Gainsboro
  commentId: F:Vim.Math3d.ColorRGB.Gainsboro
  fullName: Vim.Math3d.ColorRGB.Gainsboro
  nameWithType: ColorRGB.Gainsboro
- uid: Vim.Math3d.ColorRGB.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_GetHashCode
  commentId: M:Vim.Math3d.ColorRGB.GetHashCode
  fullName: Vim.Math3d.ColorRGB.GetHashCode()
  nameWithType: ColorRGB.GetHashCode()
- uid: Vim.Math3d.ColorRGB.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_GetHashCode_
  commentId: Overload:Vim.Math3d.ColorRGB.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.GetHashCode
  nameWithType: ColorRGB.GetHashCode
- uid: Vim.Math3d.ColorRGB.GhostWhite
  name: GhostWhite
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_GhostWhite
  commentId: F:Vim.Math3d.ColorRGB.GhostWhite
  fullName: Vim.Math3d.ColorRGB.GhostWhite
  nameWithType: ColorRGB.GhostWhite
- uid: Vim.Math3d.ColorRGB.Gold
  name: Gold
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Gold
  commentId: F:Vim.Math3d.ColorRGB.Gold
  fullName: Vim.Math3d.ColorRGB.Gold
  nameWithType: ColorRGB.Gold
- uid: Vim.Math3d.ColorRGB.Goldenrod
  name: Goldenrod
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Goldenrod
  commentId: F:Vim.Math3d.ColorRGB.Goldenrod
  fullName: Vim.Math3d.ColorRGB.Goldenrod
  nameWithType: ColorRGB.Goldenrod
- uid: Vim.Math3d.ColorRGB.Gray
  name: Gray
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Gray
  commentId: F:Vim.Math3d.ColorRGB.Gray
  fullName: Vim.Math3d.ColorRGB.Gray
  nameWithType: ColorRGB.Gray
- uid: Vim.Math3d.ColorRGB.Green
  name: Green
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Green
  commentId: F:Vim.Math3d.ColorRGB.Green
  fullName: Vim.Math3d.ColorRGB.Green
  nameWithType: ColorRGB.Green
- uid: Vim.Math3d.ColorRGB.GreenYellow
  name: GreenYellow
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_GreenYellow
  commentId: F:Vim.Math3d.ColorRGB.GreenYellow
  fullName: Vim.Math3d.ColorRGB.GreenYellow
  nameWithType: ColorRGB.GreenYellow
- uid: Vim.Math3d.ColorRGB.Honeydew
  name: Honeydew
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Honeydew
  commentId: F:Vim.Math3d.ColorRGB.Honeydew
  fullName: Vim.Math3d.ColorRGB.Honeydew
  nameWithType: ColorRGB.Honeydew
- uid: Vim.Math3d.ColorRGB.HotPink
  name: HotPink
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_HotPink
  commentId: F:Vim.Math3d.ColorRGB.HotPink
  fullName: Vim.Math3d.ColorRGB.HotPink
  nameWithType: ColorRGB.HotPink
- uid: Vim.Math3d.ColorRGB.IndianRed
  name: IndianRed
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_IndianRed
  commentId: F:Vim.Math3d.ColorRGB.IndianRed
  fullName: Vim.Math3d.ColorRGB.IndianRed
  nameWithType: ColorRGB.IndianRed
- uid: Vim.Math3d.ColorRGB.Indigo
  name: Indigo
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Indigo
  commentId: F:Vim.Math3d.ColorRGB.Indigo
  fullName: Vim.Math3d.ColorRGB.Indigo
  nameWithType: ColorRGB.Indigo
- uid: Vim.Math3d.ColorRGB.Ivory
  name: Ivory
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Ivory
  commentId: F:Vim.Math3d.ColorRGB.Ivory
  fullName: Vim.Math3d.ColorRGB.Ivory
  nameWithType: ColorRGB.Ivory
- uid: Vim.Math3d.ColorRGB.Khaki
  name: Khaki
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Khaki
  commentId: F:Vim.Math3d.ColorRGB.Khaki
  fullName: Vim.Math3d.ColorRGB.Khaki
  nameWithType: ColorRGB.Khaki
- uid: Vim.Math3d.ColorRGB.Lavender
  name: Lavender
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Lavender
  commentId: F:Vim.Math3d.ColorRGB.Lavender
  fullName: Vim.Math3d.ColorRGB.Lavender
  nameWithType: ColorRGB.Lavender
- uid: Vim.Math3d.ColorRGB.LavenderBlush
  name: LavenderBlush
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LavenderBlush
  commentId: F:Vim.Math3d.ColorRGB.LavenderBlush
  fullName: Vim.Math3d.ColorRGB.LavenderBlush
  nameWithType: ColorRGB.LavenderBlush
- uid: Vim.Math3d.ColorRGB.LawnGreen
  name: LawnGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LawnGreen
  commentId: F:Vim.Math3d.ColorRGB.LawnGreen
  fullName: Vim.Math3d.ColorRGB.LawnGreen
  nameWithType: ColorRGB.LawnGreen
- uid: Vim.Math3d.ColorRGB.LemonChiffon
  name: LemonChiffon
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LemonChiffon
  commentId: F:Vim.Math3d.ColorRGB.LemonChiffon
  fullName: Vim.Math3d.ColorRGB.LemonChiffon
  nameWithType: ColorRGB.LemonChiffon
- uid: Vim.Math3d.ColorRGB.LightBlue
  name: LightBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightBlue
  commentId: F:Vim.Math3d.ColorRGB.LightBlue
  fullName: Vim.Math3d.ColorRGB.LightBlue
  nameWithType: ColorRGB.LightBlue
- uid: Vim.Math3d.ColorRGB.LightCoral
  name: LightCoral
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightCoral
  commentId: F:Vim.Math3d.ColorRGB.LightCoral
  fullName: Vim.Math3d.ColorRGB.LightCoral
  nameWithType: ColorRGB.LightCoral
- uid: Vim.Math3d.ColorRGB.LightCyan
  name: LightCyan
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightCyan
  commentId: F:Vim.Math3d.ColorRGB.LightCyan
  fullName: Vim.Math3d.ColorRGB.LightCyan
  nameWithType: ColorRGB.LightCyan
- uid: Vim.Math3d.ColorRGB.LightGoldenrodYellow
  name: LightGoldenrodYellow
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightGoldenrodYellow
  commentId: F:Vim.Math3d.ColorRGB.LightGoldenrodYellow
  fullName: Vim.Math3d.ColorRGB.LightGoldenrodYellow
  nameWithType: ColorRGB.LightGoldenrodYellow
- uid: Vim.Math3d.ColorRGB.LightGray
  name: LightGray
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightGray
  commentId: F:Vim.Math3d.ColorRGB.LightGray
  fullName: Vim.Math3d.ColorRGB.LightGray
  nameWithType: ColorRGB.LightGray
- uid: Vim.Math3d.ColorRGB.LightGreen
  name: LightGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightGreen
  commentId: F:Vim.Math3d.ColorRGB.LightGreen
  fullName: Vim.Math3d.ColorRGB.LightGreen
  nameWithType: ColorRGB.LightGreen
- uid: Vim.Math3d.ColorRGB.LightPink
  name: LightPink
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightPink
  commentId: F:Vim.Math3d.ColorRGB.LightPink
  fullName: Vim.Math3d.ColorRGB.LightPink
  nameWithType: ColorRGB.LightPink
- uid: Vim.Math3d.ColorRGB.LightSalmon
  name: LightSalmon
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightSalmon
  commentId: F:Vim.Math3d.ColorRGB.LightSalmon
  fullName: Vim.Math3d.ColorRGB.LightSalmon
  nameWithType: ColorRGB.LightSalmon
- uid: Vim.Math3d.ColorRGB.LightSeaGreen
  name: LightSeaGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightSeaGreen
  commentId: F:Vim.Math3d.ColorRGB.LightSeaGreen
  fullName: Vim.Math3d.ColorRGB.LightSeaGreen
  nameWithType: ColorRGB.LightSeaGreen
- uid: Vim.Math3d.ColorRGB.LightSkyBlue
  name: LightSkyBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightSkyBlue
  commentId: F:Vim.Math3d.ColorRGB.LightSkyBlue
  fullName: Vim.Math3d.ColorRGB.LightSkyBlue
  nameWithType: ColorRGB.LightSkyBlue
- uid: Vim.Math3d.ColorRGB.LightSlateGray
  name: LightSlateGray
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightSlateGray
  commentId: F:Vim.Math3d.ColorRGB.LightSlateGray
  fullName: Vim.Math3d.ColorRGB.LightSlateGray
  nameWithType: ColorRGB.LightSlateGray
- uid: Vim.Math3d.ColorRGB.LightSteelBlue
  name: LightSteelBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightSteelBlue
  commentId: F:Vim.Math3d.ColorRGB.LightSteelBlue
  fullName: Vim.Math3d.ColorRGB.LightSteelBlue
  nameWithType: ColorRGB.LightSteelBlue
- uid: Vim.Math3d.ColorRGB.LightYellow
  name: LightYellow
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LightYellow
  commentId: F:Vim.Math3d.ColorRGB.LightYellow
  fullName: Vim.Math3d.ColorRGB.LightYellow
  nameWithType: ColorRGB.LightYellow
- uid: Vim.Math3d.ColorRGB.Lime
  name: Lime
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Lime
  commentId: F:Vim.Math3d.ColorRGB.Lime
  fullName: Vim.Math3d.ColorRGB.Lime
  nameWithType: ColorRGB.Lime
- uid: Vim.Math3d.ColorRGB.LimeGreen
  name: LimeGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_LimeGreen
  commentId: F:Vim.Math3d.ColorRGB.LimeGreen
  fullName: Vim.Math3d.ColorRGB.LimeGreen
  nameWithType: ColorRGB.LimeGreen
- uid: Vim.Math3d.ColorRGB.Linen
  name: Linen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Linen
  commentId: F:Vim.Math3d.ColorRGB.Linen
  fullName: Vim.Math3d.ColorRGB.Linen
  nameWithType: ColorRGB.Linen
- uid: Vim.Math3d.ColorRGB.Magenta
  name: Magenta
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Magenta
  commentId: F:Vim.Math3d.ColorRGB.Magenta
  fullName: Vim.Math3d.ColorRGB.Magenta
  nameWithType: ColorRGB.Magenta
- uid: Vim.Math3d.ColorRGB.Maroon
  name: Maroon
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Maroon
  commentId: F:Vim.Math3d.ColorRGB.Maroon
  fullName: Vim.Math3d.ColorRGB.Maroon
  nameWithType: ColorRGB.Maroon
- uid: Vim.Math3d.ColorRGB.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MaxValue
  commentId: F:Vim.Math3d.ColorRGB.MaxValue
  fullName: Vim.Math3d.ColorRGB.MaxValue
  nameWithType: ColorRGB.MaxValue
- uid: Vim.Math3d.ColorRGB.MediumAquamarine
  name: MediumAquamarine
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumAquamarine
  commentId: F:Vim.Math3d.ColorRGB.MediumAquamarine
  fullName: Vim.Math3d.ColorRGB.MediumAquamarine
  nameWithType: ColorRGB.MediumAquamarine
- uid: Vim.Math3d.ColorRGB.MediumBlue
  name: MediumBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumBlue
  commentId: F:Vim.Math3d.ColorRGB.MediumBlue
  fullName: Vim.Math3d.ColorRGB.MediumBlue
  nameWithType: ColorRGB.MediumBlue
- uid: Vim.Math3d.ColorRGB.MediumOrchid
  name: MediumOrchid
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumOrchid
  commentId: F:Vim.Math3d.ColorRGB.MediumOrchid
  fullName: Vim.Math3d.ColorRGB.MediumOrchid
  nameWithType: ColorRGB.MediumOrchid
- uid: Vim.Math3d.ColorRGB.MediumPurple
  name: MediumPurple
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumPurple
  commentId: F:Vim.Math3d.ColorRGB.MediumPurple
  fullName: Vim.Math3d.ColorRGB.MediumPurple
  nameWithType: ColorRGB.MediumPurple
- uid: Vim.Math3d.ColorRGB.MediumSeaGreen
  name: MediumSeaGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumSeaGreen
  commentId: F:Vim.Math3d.ColorRGB.MediumSeaGreen
  fullName: Vim.Math3d.ColorRGB.MediumSeaGreen
  nameWithType: ColorRGB.MediumSeaGreen
- uid: Vim.Math3d.ColorRGB.MediumSlateBlue
  name: MediumSlateBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumSlateBlue
  commentId: F:Vim.Math3d.ColorRGB.MediumSlateBlue
  fullName: Vim.Math3d.ColorRGB.MediumSlateBlue
  nameWithType: ColorRGB.MediumSlateBlue
- uid: Vim.Math3d.ColorRGB.MediumSpringGreen
  name: MediumSpringGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumSpringGreen
  commentId: F:Vim.Math3d.ColorRGB.MediumSpringGreen
  fullName: Vim.Math3d.ColorRGB.MediumSpringGreen
  nameWithType: ColorRGB.MediumSpringGreen
- uid: Vim.Math3d.ColorRGB.MediumTurquoise
  name: MediumTurquoise
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumTurquoise
  commentId: F:Vim.Math3d.ColorRGB.MediumTurquoise
  fullName: Vim.Math3d.ColorRGB.MediumTurquoise
  nameWithType: ColorRGB.MediumTurquoise
- uid: Vim.Math3d.ColorRGB.MediumVioletRed
  name: MediumVioletRed
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MediumVioletRed
  commentId: F:Vim.Math3d.ColorRGB.MediumVioletRed
  fullName: Vim.Math3d.ColorRGB.MediumVioletRed
  nameWithType: ColorRGB.MediumVioletRed
- uid: Vim.Math3d.ColorRGB.MidnightBlue
  name: MidnightBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MidnightBlue
  commentId: F:Vim.Math3d.ColorRGB.MidnightBlue
  fullName: Vim.Math3d.ColorRGB.MidnightBlue
  nameWithType: ColorRGB.MidnightBlue
- uid: Vim.Math3d.ColorRGB.MintCream
  name: MintCream
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MintCream
  commentId: F:Vim.Math3d.ColorRGB.MintCream
  fullName: Vim.Math3d.ColorRGB.MintCream
  nameWithType: ColorRGB.MintCream
- uid: Vim.Math3d.ColorRGB.MinValue
  name: MinValue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MinValue
  commentId: F:Vim.Math3d.ColorRGB.MinValue
  fullName: Vim.Math3d.ColorRGB.MinValue
  nameWithType: ColorRGB.MinValue
- uid: Vim.Math3d.ColorRGB.MistyRose
  name: MistyRose
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_MistyRose
  commentId: F:Vim.Math3d.ColorRGB.MistyRose
  fullName: Vim.Math3d.ColorRGB.MistyRose
  nameWithType: ColorRGB.MistyRose
- uid: Vim.Math3d.ColorRGB.Moccasin
  name: Moccasin
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Moccasin
  commentId: F:Vim.Math3d.ColorRGB.Moccasin
  fullName: Vim.Math3d.ColorRGB.Moccasin
  nameWithType: ColorRGB.Moccasin
- uid: Vim.Math3d.ColorRGB.NavajoWhite
  name: NavajoWhite
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_NavajoWhite
  commentId: F:Vim.Math3d.ColorRGB.NavajoWhite
  fullName: Vim.Math3d.ColorRGB.NavajoWhite
  nameWithType: ColorRGB.NavajoWhite
- uid: Vim.Math3d.ColorRGB.Navy
  name: Navy
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Navy
  commentId: F:Vim.Math3d.ColorRGB.Navy
  fullName: Vim.Math3d.ColorRGB.Navy
  nameWithType: ColorRGB.Navy
- uid: Vim.Math3d.ColorRGB.OldLace
  name: OldLace
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_OldLace
  commentId: F:Vim.Math3d.ColorRGB.OldLace
  fullName: Vim.Math3d.ColorRGB.OldLace
  nameWithType: ColorRGB.OldLace
- uid: Vim.Math3d.ColorRGB.Olive
  name: Olive
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Olive
  commentId: F:Vim.Math3d.ColorRGB.Olive
  fullName: Vim.Math3d.ColorRGB.Olive
  nameWithType: ColorRGB.Olive
- uid: Vim.Math3d.ColorRGB.OliveDrab
  name: OliveDrab
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_OliveDrab
  commentId: F:Vim.Math3d.ColorRGB.OliveDrab
  fullName: Vim.Math3d.ColorRGB.OliveDrab
  nameWithType: ColorRGB.OliveDrab
- uid: Vim.Math3d.ColorRGB.op_Equality(Vim.Math3d.ColorRGB,Vim.Math3d.ColorRGB)
  name: Equality(ColorRGB, ColorRGB)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_op_Equality_Vim_Math3d_ColorRGB_Vim_Math3d_ColorRGB_
  commentId: M:Vim.Math3d.ColorRGB.op_Equality(Vim.Math3d.ColorRGB,Vim.Math3d.ColorRGB)
  fullName: Vim.Math3d.ColorRGB.Equality(Vim.Math3d.ColorRGB, Vim.Math3d.ColorRGB)
  nameWithType: ColorRGB.Equality(ColorRGB, ColorRGB)
- uid: Vim.Math3d.ColorRGB.op_Equality*
  name: Equality
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_op_Equality_
  commentId: Overload:Vim.Math3d.ColorRGB.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.Equality
  nameWithType: ColorRGB.Equality
- uid: Vim.Math3d.ColorRGB.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte})~Vim.Math3d.ColorRGB
  name: Implicit((Byte r, Byte g, Byte b) to ColorRGB)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_op_Implicit_System_ValueTuple_System_Byte_System_Byte_System_Byte___Vim_Math3d_ColorRGB
  commentId: M:Vim.Math3d.ColorRGB.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte})~Vim.Math3d.ColorRGB
  name.vb: Widening((r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte) to ColorRGB)
  fullName: Vim.Math3d.ColorRGB.Implicit(System.ValueTuple<System.Byte, System.Byte, System.Byte> to Vim.Math3d.ColorRGB)
  fullName.vb: Vim.Math3d.ColorRGB.Widening(System.ValueTuple(Of System.Byte, System.Byte, System.Byte) to Vim.Math3d.ColorRGB)
  nameWithType: ColorRGB.Implicit((Byte r, Byte g, Byte b) to ColorRGB)
  nameWithType.vb: ColorRGB.Widening((r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte) to ColorRGB)
- uid: Vim.Math3d.ColorRGB.op_Implicit(Vim.Math3d.ColorRGB)~System.ValueTuple{System.Byte,System.Byte,System.Byte}
  name: Implicit(ColorRGB to (Byte r, Byte g, Byte b))
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_op_Implicit_Vim_Math3d_ColorRGB__System_ValueTuple_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.ColorRGB.op_Implicit(Vim.Math3d.ColorRGB)~System.ValueTuple{System.Byte,System.Byte,System.Byte}
  name.vb: Widening(ColorRGB to (r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte))
  fullName: Vim.Math3d.ColorRGB.Implicit(Vim.Math3d.ColorRGB to System.ValueTuple<System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.ColorRGB.Widening(Vim.Math3d.ColorRGB to System.ValueTuple(Of System.Byte, System.Byte, System.Byte))
  nameWithType: ColorRGB.Implicit(ColorRGB to (Byte r, Byte g, Byte b))
  nameWithType.vb: ColorRGB.Widening(ColorRGB to (r As Byte, g As Byte, b As Byte)(Of Byte, Byte, Byte))
- uid: Vim.Math3d.ColorRGB.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_op_Implicit_
  commentId: Overload:Vim.Math3d.ColorRGB.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.ColorRGB.Implicit
  fullName.vb: Vim.Math3d.ColorRGB.Widening
  nameWithType: ColorRGB.Implicit
  nameWithType.vb: ColorRGB.Widening
- uid: Vim.Math3d.ColorRGB.op_Inequality(Vim.Math3d.ColorRGB,Vim.Math3d.ColorRGB)
  name: Inequality(ColorRGB, ColorRGB)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_op_Inequality_Vim_Math3d_ColorRGB_Vim_Math3d_ColorRGB_
  commentId: M:Vim.Math3d.ColorRGB.op_Inequality(Vim.Math3d.ColorRGB,Vim.Math3d.ColorRGB)
  fullName: Vim.Math3d.ColorRGB.Inequality(Vim.Math3d.ColorRGB, Vim.Math3d.ColorRGB)
  nameWithType: ColorRGB.Inequality(ColorRGB, ColorRGB)
- uid: Vim.Math3d.ColorRGB.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_op_Inequality_
  commentId: Overload:Vim.Math3d.ColorRGB.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.Inequality
  nameWithType: ColorRGB.Inequality
- uid: Vim.Math3d.ColorRGB.Orange
  name: Orange
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Orange
  commentId: F:Vim.Math3d.ColorRGB.Orange
  fullName: Vim.Math3d.ColorRGB.Orange
  nameWithType: ColorRGB.Orange
- uid: Vim.Math3d.ColorRGB.OrangeRed
  name: OrangeRed
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_OrangeRed
  commentId: F:Vim.Math3d.ColorRGB.OrangeRed
  fullName: Vim.Math3d.ColorRGB.OrangeRed
  nameWithType: ColorRGB.OrangeRed
- uid: Vim.Math3d.ColorRGB.Orchid
  name: Orchid
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Orchid
  commentId: F:Vim.Math3d.ColorRGB.Orchid
  fullName: Vim.Math3d.ColorRGB.Orchid
  nameWithType: ColorRGB.Orchid
- uid: Vim.Math3d.ColorRGB.PaleGoldenrod
  name: PaleGoldenrod
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_PaleGoldenrod
  commentId: F:Vim.Math3d.ColorRGB.PaleGoldenrod
  fullName: Vim.Math3d.ColorRGB.PaleGoldenrod
  nameWithType: ColorRGB.PaleGoldenrod
- uid: Vim.Math3d.ColorRGB.PaleGreen
  name: PaleGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_PaleGreen
  commentId: F:Vim.Math3d.ColorRGB.PaleGreen
  fullName: Vim.Math3d.ColorRGB.PaleGreen
  nameWithType: ColorRGB.PaleGreen
- uid: Vim.Math3d.ColorRGB.PaleTurquoise
  name: PaleTurquoise
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_PaleTurquoise
  commentId: F:Vim.Math3d.ColorRGB.PaleTurquoise
  fullName: Vim.Math3d.ColorRGB.PaleTurquoise
  nameWithType: ColorRGB.PaleTurquoise
- uid: Vim.Math3d.ColorRGB.PaleVioletRed
  name: PaleVioletRed
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_PaleVioletRed
  commentId: F:Vim.Math3d.ColorRGB.PaleVioletRed
  fullName: Vim.Math3d.ColorRGB.PaleVioletRed
  nameWithType: ColorRGB.PaleVioletRed
- uid: Vim.Math3d.ColorRGB.PapayaWhip
  name: PapayaWhip
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_PapayaWhip
  commentId: F:Vim.Math3d.ColorRGB.PapayaWhip
  fullName: Vim.Math3d.ColorRGB.PapayaWhip
  nameWithType: ColorRGB.PapayaWhip
- uid: Vim.Math3d.ColorRGB.PeachPuff
  name: PeachPuff
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_PeachPuff
  commentId: F:Vim.Math3d.ColorRGB.PeachPuff
  fullName: Vim.Math3d.ColorRGB.PeachPuff
  nameWithType: ColorRGB.PeachPuff
- uid: Vim.Math3d.ColorRGB.Peru
  name: Peru
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Peru
  commentId: F:Vim.Math3d.ColorRGB.Peru
  fullName: Vim.Math3d.ColorRGB.Peru
  nameWithType: ColorRGB.Peru
- uid: Vim.Math3d.ColorRGB.Pink
  name: Pink
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Pink
  commentId: F:Vim.Math3d.ColorRGB.Pink
  fullName: Vim.Math3d.ColorRGB.Pink
  nameWithType: ColorRGB.Pink
- uid: Vim.Math3d.ColorRGB.Plum
  name: Plum
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Plum
  commentId: F:Vim.Math3d.ColorRGB.Plum
  fullName: Vim.Math3d.ColorRGB.Plum
  nameWithType: ColorRGB.Plum
- uid: Vim.Math3d.ColorRGB.PowderBlue
  name: PowderBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_PowderBlue
  commentId: F:Vim.Math3d.ColorRGB.PowderBlue
  fullName: Vim.Math3d.ColorRGB.PowderBlue
  nameWithType: ColorRGB.PowderBlue
- uid: Vim.Math3d.ColorRGB.Purple
  name: Purple
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Purple
  commentId: F:Vim.Math3d.ColorRGB.Purple
  fullName: Vim.Math3d.ColorRGB.Purple
  nameWithType: ColorRGB.Purple
- uid: Vim.Math3d.ColorRGB.R
  name: R
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_R
  commentId: F:Vim.Math3d.ColorRGB.R
  fullName: Vim.Math3d.ColorRGB.R
  nameWithType: ColorRGB.R
- uid: Vim.Math3d.ColorRGB.Red
  name: Red
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Red
  commentId: F:Vim.Math3d.ColorRGB.Red
  fullName: Vim.Math3d.ColorRGB.Red
  nameWithType: ColorRGB.Red
- uid: Vim.Math3d.ColorRGB.RosyBrown
  name: RosyBrown
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_RosyBrown
  commentId: F:Vim.Math3d.ColorRGB.RosyBrown
  fullName: Vim.Math3d.ColorRGB.RosyBrown
  nameWithType: ColorRGB.RosyBrown
- uid: Vim.Math3d.ColorRGB.RoyalBlue
  name: RoyalBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_RoyalBlue
  commentId: F:Vim.Math3d.ColorRGB.RoyalBlue
  fullName: Vim.Math3d.ColorRGB.RoyalBlue
  nameWithType: ColorRGB.RoyalBlue
- uid: Vim.Math3d.ColorRGB.SaddleBrown
  name: SaddleBrown
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SaddleBrown
  commentId: F:Vim.Math3d.ColorRGB.SaddleBrown
  fullName: Vim.Math3d.ColorRGB.SaddleBrown
  nameWithType: ColorRGB.SaddleBrown
- uid: Vim.Math3d.ColorRGB.Salmon
  name: Salmon
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Salmon
  commentId: F:Vim.Math3d.ColorRGB.Salmon
  fullName: Vim.Math3d.ColorRGB.Salmon
  nameWithType: ColorRGB.Salmon
- uid: Vim.Math3d.ColorRGB.SandyBrown
  name: SandyBrown
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SandyBrown
  commentId: F:Vim.Math3d.ColorRGB.SandyBrown
  fullName: Vim.Math3d.ColorRGB.SandyBrown
  nameWithType: ColorRGB.SandyBrown
- uid: Vim.Math3d.ColorRGB.SeaGreen
  name: SeaGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SeaGreen
  commentId: F:Vim.Math3d.ColorRGB.SeaGreen
  fullName: Vim.Math3d.ColorRGB.SeaGreen
  nameWithType: ColorRGB.SeaGreen
- uid: Vim.Math3d.ColorRGB.SeaShell
  name: SeaShell
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SeaShell
  commentId: F:Vim.Math3d.ColorRGB.SeaShell
  fullName: Vim.Math3d.ColorRGB.SeaShell
  nameWithType: ColorRGB.SeaShell
- uid: Vim.Math3d.ColorRGB.SetB(System.Byte)
  name: SetB(Byte)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SetB_System_Byte_
  commentId: M:Vim.Math3d.ColorRGB.SetB(System.Byte)
  fullName: Vim.Math3d.ColorRGB.SetB(System.Byte)
  nameWithType: ColorRGB.SetB(Byte)
- uid: Vim.Math3d.ColorRGB.SetB*
  name: SetB
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SetB_
  commentId: Overload:Vim.Math3d.ColorRGB.SetB
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.SetB
  nameWithType: ColorRGB.SetB
- uid: Vim.Math3d.ColorRGB.SetG(System.Byte)
  name: SetG(Byte)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SetG_System_Byte_
  commentId: M:Vim.Math3d.ColorRGB.SetG(System.Byte)
  fullName: Vim.Math3d.ColorRGB.SetG(System.Byte)
  nameWithType: ColorRGB.SetG(Byte)
- uid: Vim.Math3d.ColorRGB.SetG*
  name: SetG
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SetG_
  commentId: Overload:Vim.Math3d.ColorRGB.SetG
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.SetG
  nameWithType: ColorRGB.SetG
- uid: Vim.Math3d.ColorRGB.SetR(System.Byte)
  name: SetR(Byte)
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SetR_System_Byte_
  commentId: M:Vim.Math3d.ColorRGB.SetR(System.Byte)
  fullName: Vim.Math3d.ColorRGB.SetR(System.Byte)
  nameWithType: ColorRGB.SetR(Byte)
- uid: Vim.Math3d.ColorRGB.SetR*
  name: SetR
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SetR_
  commentId: Overload:Vim.Math3d.ColorRGB.SetR
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.SetR
  nameWithType: ColorRGB.SetR
- uid: Vim.Math3d.ColorRGB.Sienna
  name: Sienna
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Sienna
  commentId: F:Vim.Math3d.ColorRGB.Sienna
  fullName: Vim.Math3d.ColorRGB.Sienna
  nameWithType: ColorRGB.Sienna
- uid: Vim.Math3d.ColorRGB.Silver
  name: Silver
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Silver
  commentId: F:Vim.Math3d.ColorRGB.Silver
  fullName: Vim.Math3d.ColorRGB.Silver
  nameWithType: ColorRGB.Silver
- uid: Vim.Math3d.ColorRGB.SkyBlue
  name: SkyBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SkyBlue
  commentId: F:Vim.Math3d.ColorRGB.SkyBlue
  fullName: Vim.Math3d.ColorRGB.SkyBlue
  nameWithType: ColorRGB.SkyBlue
- uid: Vim.Math3d.ColorRGB.SlateBlue
  name: SlateBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SlateBlue
  commentId: F:Vim.Math3d.ColorRGB.SlateBlue
  fullName: Vim.Math3d.ColorRGB.SlateBlue
  nameWithType: ColorRGB.SlateBlue
- uid: Vim.Math3d.ColorRGB.SlateGray
  name: SlateGray
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SlateGray
  commentId: F:Vim.Math3d.ColorRGB.SlateGray
  fullName: Vim.Math3d.ColorRGB.SlateGray
  nameWithType: ColorRGB.SlateGray
- uid: Vim.Math3d.ColorRGB.Snow
  name: Snow
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Snow
  commentId: F:Vim.Math3d.ColorRGB.Snow
  fullName: Vim.Math3d.ColorRGB.Snow
  nameWithType: ColorRGB.Snow
- uid: Vim.Math3d.ColorRGB.SpringGreen
  name: SpringGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SpringGreen
  commentId: F:Vim.Math3d.ColorRGB.SpringGreen
  fullName: Vim.Math3d.ColorRGB.SpringGreen
  nameWithType: ColorRGB.SpringGreen
- uid: Vim.Math3d.ColorRGB.SteelBlue
  name: SteelBlue
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_SteelBlue
  commentId: F:Vim.Math3d.ColorRGB.SteelBlue
  fullName: Vim.Math3d.ColorRGB.SteelBlue
  nameWithType: ColorRGB.SteelBlue
- uid: Vim.Math3d.ColorRGB.Tan
  name: Tan
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Tan
  commentId: F:Vim.Math3d.ColorRGB.Tan
  fullName: Vim.Math3d.ColorRGB.Tan
  nameWithType: ColorRGB.Tan
- uid: Vim.Math3d.ColorRGB.Teal
  name: Teal
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Teal
  commentId: F:Vim.Math3d.ColorRGB.Teal
  fullName: Vim.Math3d.ColorRGB.Teal
  nameWithType: ColorRGB.Teal
- uid: Vim.Math3d.ColorRGB.Thistle
  name: Thistle
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Thistle
  commentId: F:Vim.Math3d.ColorRGB.Thistle
  fullName: Vim.Math3d.ColorRGB.Thistle
  nameWithType: ColorRGB.Thistle
- uid: Vim.Math3d.ColorRGB.Tomato
  name: Tomato
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Tomato
  commentId: F:Vim.Math3d.ColorRGB.Tomato
  fullName: Vim.Math3d.ColorRGB.Tomato
  nameWithType: ColorRGB.Tomato
- uid: Vim.Math3d.ColorRGB.ToString
  name: ToString()
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_ToString
  commentId: M:Vim.Math3d.ColorRGB.ToString
  fullName: Vim.Math3d.ColorRGB.ToString()
  nameWithType: ColorRGB.ToString()
- uid: Vim.Math3d.ColorRGB.ToString*
  name: ToString
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_ToString_
  commentId: Overload:Vim.Math3d.ColorRGB.ToString
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGB.ToString
  nameWithType: ColorRGB.ToString
- uid: Vim.Math3d.ColorRGB.Turquoise
  name: Turquoise
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Turquoise
  commentId: F:Vim.Math3d.ColorRGB.Turquoise
  fullName: Vim.Math3d.ColorRGB.Turquoise
  nameWithType: ColorRGB.Turquoise
- uid: Vim.Math3d.ColorRGB.Violet
  name: Violet
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Violet
  commentId: F:Vim.Math3d.ColorRGB.Violet
  fullName: Vim.Math3d.ColorRGB.Violet
  nameWithType: ColorRGB.Violet
- uid: Vim.Math3d.ColorRGB.Wheat
  name: Wheat
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Wheat
  commentId: F:Vim.Math3d.ColorRGB.Wheat
  fullName: Vim.Math3d.ColorRGB.Wheat
  nameWithType: ColorRGB.Wheat
- uid: Vim.Math3d.ColorRGB.White
  name: White
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_White
  commentId: F:Vim.Math3d.ColorRGB.White
  fullName: Vim.Math3d.ColorRGB.White
  nameWithType: ColorRGB.White
- uid: Vim.Math3d.ColorRGB.WhiteSmoke
  name: WhiteSmoke
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_WhiteSmoke
  commentId: F:Vim.Math3d.ColorRGB.WhiteSmoke
  fullName: Vim.Math3d.ColorRGB.WhiteSmoke
  nameWithType: ColorRGB.WhiteSmoke
- uid: Vim.Math3d.ColorRGB.Yellow
  name: Yellow
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Yellow
  commentId: F:Vim.Math3d.ColorRGB.Yellow
  fullName: Vim.Math3d.ColorRGB.Yellow
  nameWithType: ColorRGB.Yellow
- uid: Vim.Math3d.ColorRGB.YellowGreen
  name: YellowGreen
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_YellowGreen
  commentId: F:Vim.Math3d.ColorRGB.YellowGreen
  fullName: Vim.Math3d.ColorRGB.YellowGreen
  nameWithType: ColorRGB.YellowGreen
- uid: Vim.Math3d.ColorRGB.Zero
  name: Zero
  href: api/Vim.Math3d.ColorRGB.html#Vim_Math3d_ColorRGB_Zero
  commentId: F:Vim.Math3d.ColorRGB.Zero
  fullName: Vim.Math3d.ColorRGB.Zero
  nameWithType: ColorRGB.Zero
- uid: Vim.Math3d.ColorRGBA
  name: ColorRGBA
  href: api/Vim.Math3d.ColorRGBA.html
  commentId: T:Vim.Math3d.ColorRGBA
  fullName: Vim.Math3d.ColorRGBA
  nameWithType: ColorRGBA
- uid: Vim.Math3d.ColorRGBA.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  name: ColorRGBA(Byte, Byte, Byte, Byte)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA__ctor_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.ColorRGBA.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.ColorRGBA.ColorRGBA(System.Byte, System.Byte, System.Byte, System.Byte)
  nameWithType: ColorRGBA.ColorRGBA(Byte, Byte, Byte, Byte)
- uid: Vim.Math3d.ColorRGBA.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name: ColorRGBA((Byte r, Byte g, Byte b, Byte a))
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA__ctor_System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.ColorRGBA.#ctor(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name.vb: ColorRGBA((r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte))
  fullName: Vim.Math3d.ColorRGBA.ColorRGBA(System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.ColorRGBA.ColorRGBA(System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte))
  nameWithType: ColorRGBA.ColorRGBA((Byte r, Byte g, Byte b, Byte a))
  nameWithType.vb: ColorRGBA.ColorRGBA((r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte))
- uid: Vim.Math3d.ColorRGBA.#ctor*
  name: ColorRGBA
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA__ctor_
  commentId: Overload:Vim.Math3d.ColorRGBA.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.ColorRGBA
  nameWithType: ColorRGBA.ColorRGBA
- uid: Vim.Math3d.ColorRGBA.A
  name: A
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_A
  commentId: F:Vim.Math3d.ColorRGBA.A
  fullName: Vim.Math3d.ColorRGBA.A
  nameWithType: ColorRGBA.A
- uid: Vim.Math3d.ColorRGBA.B
  name: B
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_B
  commentId: F:Vim.Math3d.ColorRGBA.B
  fullName: Vim.Math3d.ColorRGBA.B
  nameWithType: ColorRGBA.B
- uid: Vim.Math3d.ColorRGBA.Black
  name: Black
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Black
  commentId: F:Vim.Math3d.ColorRGBA.Black
  fullName: Vim.Math3d.ColorRGBA.Black
  nameWithType: ColorRGBA.Black
- uid: Vim.Math3d.ColorRGBA.Create(System.Byte,System.Byte,System.Byte,System.Byte)
  name: Create(Byte, Byte, Byte, Byte)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Create_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.ColorRGBA.Create(System.Byte,System.Byte,System.Byte,System.Byte)
  fullName: Vim.Math3d.ColorRGBA.Create(System.Byte, System.Byte, System.Byte, System.Byte)
  nameWithType: ColorRGBA.Create(Byte, Byte, Byte, Byte)
- uid: Vim.Math3d.ColorRGBA.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name: Create((Byte r, Byte g, Byte b, Byte a))
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Create_System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte__
  commentId: M:Vim.Math3d.ColorRGBA.Create(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})
  name.vb: Create((r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte))
  fullName: Vim.Math3d.ColorRGBA.Create(System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.ColorRGBA.Create(System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte))
  nameWithType: ColorRGBA.Create((Byte r, Byte g, Byte b, Byte a))
  nameWithType.vb: ColorRGBA.Create((r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte))
- uid: Vim.Math3d.ColorRGBA.Create*
  name: Create
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Create_
  commentId: Overload:Vim.Math3d.ColorRGBA.Create
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.Create
  nameWithType: ColorRGBA.Create
- uid: Vim.Math3d.ColorRGBA.DarkBlue
  name: DarkBlue
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_DarkBlue
  commentId: F:Vim.Math3d.ColorRGBA.DarkBlue
  fullName: Vim.Math3d.ColorRGBA.DarkBlue
  nameWithType: ColorRGBA.DarkBlue
- uid: Vim.Math3d.ColorRGBA.DarkGreen
  name: DarkGreen
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_DarkGreen
  commentId: F:Vim.Math3d.ColorRGBA.DarkGreen
  fullName: Vim.Math3d.ColorRGBA.DarkGreen
  nameWithType: ColorRGBA.DarkGreen
- uid: Vim.Math3d.ColorRGBA.DarkRed
  name: DarkRed
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_DarkRed
  commentId: F:Vim.Math3d.ColorRGBA.DarkRed
  fullName: Vim.Math3d.ColorRGBA.DarkRed
  nameWithType: ColorRGBA.DarkRed
- uid: Vim.Math3d.ColorRGBA.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  name: Deconstruct(out Byte, out Byte, out Byte, out Byte)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Deconstruct_System_Byte__System_Byte__System_Byte__System_Byte__
  commentId: M:Vim.Math3d.ColorRGBA.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  name.vb: Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte, ByRef Byte)
  fullName: Vim.Math3d.ColorRGBA.Deconstruct(out System.Byte, out System.Byte, out System.Byte, out System.Byte)
  fullName.vb: Vim.Math3d.ColorRGBA.Deconstruct(ByRef System.Byte, ByRef System.Byte, ByRef System.Byte, ByRef System.Byte)
  nameWithType: ColorRGBA.Deconstruct(out Byte, out Byte, out Byte, out Byte)
  nameWithType.vb: ColorRGBA.Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte, ByRef Byte)
- uid: Vim.Math3d.ColorRGBA.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Deconstruct_
  commentId: Overload:Vim.Math3d.ColorRGBA.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.Deconstruct
  nameWithType: ColorRGBA.Deconstruct
- uid: Vim.Math3d.ColorRGBA.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Equals_System_Object_
  commentId: M:Vim.Math3d.ColorRGBA.Equals(System.Object)
  fullName: Vim.Math3d.ColorRGBA.Equals(System.Object)
  nameWithType: ColorRGBA.Equals(Object)
- uid: Vim.Math3d.ColorRGBA.Equals(Vim.Math3d.ColorRGBA)
  name: Equals(ColorRGBA)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Equals_Vim_Math3d_ColorRGBA_
  commentId: M:Vim.Math3d.ColorRGBA.Equals(Vim.Math3d.ColorRGBA)
  fullName: Vim.Math3d.ColorRGBA.Equals(Vim.Math3d.ColorRGBA)
  nameWithType: ColorRGBA.Equals(ColorRGBA)
- uid: Vim.Math3d.ColorRGBA.Equals*
  name: Equals
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Equals_
  commentId: Overload:Vim.Math3d.ColorRGBA.Equals
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.Equals
  nameWithType: ColorRGBA.Equals
- uid: Vim.Math3d.ColorRGBA.G
  name: G
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_G
  commentId: F:Vim.Math3d.ColorRGBA.G
  fullName: Vim.Math3d.ColorRGBA.G
  nameWithType: ColorRGBA.G
- uid: Vim.Math3d.ColorRGBA.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_GetHashCode
  commentId: M:Vim.Math3d.ColorRGBA.GetHashCode
  fullName: Vim.Math3d.ColorRGBA.GetHashCode()
  nameWithType: ColorRGBA.GetHashCode()
- uid: Vim.Math3d.ColorRGBA.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_GetHashCode_
  commentId: Overload:Vim.Math3d.ColorRGBA.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.GetHashCode
  nameWithType: ColorRGBA.GetHashCode
- uid: Vim.Math3d.ColorRGBA.LightBlue
  name: LightBlue
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_LightBlue
  commentId: F:Vim.Math3d.ColorRGBA.LightBlue
  fullName: Vim.Math3d.ColorRGBA.LightBlue
  nameWithType: ColorRGBA.LightBlue
- uid: Vim.Math3d.ColorRGBA.LightGreen
  name: LightGreen
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_LightGreen
  commentId: F:Vim.Math3d.ColorRGBA.LightGreen
  fullName: Vim.Math3d.ColorRGBA.LightGreen
  nameWithType: ColorRGBA.LightGreen
- uid: Vim.Math3d.ColorRGBA.LightRed
  name: LightRed
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_LightRed
  commentId: F:Vim.Math3d.ColorRGBA.LightRed
  fullName: Vim.Math3d.ColorRGBA.LightRed
  nameWithType: ColorRGBA.LightRed
- uid: Vim.Math3d.ColorRGBA.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_MaxValue
  commentId: F:Vim.Math3d.ColorRGBA.MaxValue
  fullName: Vim.Math3d.ColorRGBA.MaxValue
  nameWithType: ColorRGBA.MaxValue
- uid: Vim.Math3d.ColorRGBA.MinValue
  name: MinValue
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_MinValue
  commentId: F:Vim.Math3d.ColorRGBA.MinValue
  fullName: Vim.Math3d.ColorRGBA.MinValue
  nameWithType: ColorRGBA.MinValue
- uid: Vim.Math3d.ColorRGBA.op_Equality(Vim.Math3d.ColorRGBA,Vim.Math3d.ColorRGBA)
  name: Equality(ColorRGBA, ColorRGBA)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_op_Equality_Vim_Math3d_ColorRGBA_Vim_Math3d_ColorRGBA_
  commentId: M:Vim.Math3d.ColorRGBA.op_Equality(Vim.Math3d.ColorRGBA,Vim.Math3d.ColorRGBA)
  fullName: Vim.Math3d.ColorRGBA.Equality(Vim.Math3d.ColorRGBA, Vim.Math3d.ColorRGBA)
  nameWithType: ColorRGBA.Equality(ColorRGBA, ColorRGBA)
- uid: Vim.Math3d.ColorRGBA.op_Equality*
  name: Equality
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_op_Equality_
  commentId: Overload:Vim.Math3d.ColorRGBA.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.Equality
  nameWithType: ColorRGBA.Equality
- uid: Vim.Math3d.ColorRGBA.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~Vim.Math3d.ColorRGBA
  name: Implicit((Byte r, Byte g, Byte b, Byte a) to ColorRGBA)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_op_Implicit_System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte___Vim_Math3d_ColorRGBA
  commentId: M:Vim.Math3d.ColorRGBA.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~Vim.Math3d.ColorRGBA
  name.vb: Widening((r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte) to ColorRGBA)
  fullName: Vim.Math3d.ColorRGBA.Implicit(System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte> to Vim.Math3d.ColorRGBA)
  fullName.vb: Vim.Math3d.ColorRGBA.Widening(System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte) to Vim.Math3d.ColorRGBA)
  nameWithType: ColorRGBA.Implicit((Byte r, Byte g, Byte b, Byte a) to ColorRGBA)
  nameWithType.vb: ColorRGBA.Widening((r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte) to ColorRGBA)
- uid: Vim.Math3d.ColorRGBA.op_Implicit(Vim.Math3d.ColorRGBA)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  name: Implicit(ColorRGBA to (Byte r, Byte g, Byte b, Byte a))
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_op_Implicit_Vim_Math3d_ColorRGBA__System_ValueTuple_System_Byte_System_Byte_System_Byte_System_Byte_
  commentId: M:Vim.Math3d.ColorRGBA.op_Implicit(Vim.Math3d.ColorRGBA)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  name.vb: Widening(ColorRGBA to (r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte))
  fullName: Vim.Math3d.ColorRGBA.Implicit(Vim.Math3d.ColorRGBA to System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>)
  fullName.vb: Vim.Math3d.ColorRGBA.Widening(Vim.Math3d.ColorRGBA to System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte))
  nameWithType: ColorRGBA.Implicit(ColorRGBA to (Byte r, Byte g, Byte b, Byte a))
  nameWithType.vb: ColorRGBA.Widening(ColorRGBA to (r As Byte, g As Byte, b As Byte, a As Byte)(Of Byte, Byte, Byte, Byte))
- uid: Vim.Math3d.ColorRGBA.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_op_Implicit_
  commentId: Overload:Vim.Math3d.ColorRGBA.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.ColorRGBA.Implicit
  fullName.vb: Vim.Math3d.ColorRGBA.Widening
  nameWithType: ColorRGBA.Implicit
  nameWithType.vb: ColorRGBA.Widening
- uid: Vim.Math3d.ColorRGBA.op_Inequality(Vim.Math3d.ColorRGBA,Vim.Math3d.ColorRGBA)
  name: Inequality(ColorRGBA, ColorRGBA)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_op_Inequality_Vim_Math3d_ColorRGBA_Vim_Math3d_ColorRGBA_
  commentId: M:Vim.Math3d.ColorRGBA.op_Inequality(Vim.Math3d.ColorRGBA,Vim.Math3d.ColorRGBA)
  fullName: Vim.Math3d.ColorRGBA.Inequality(Vim.Math3d.ColorRGBA, Vim.Math3d.ColorRGBA)
  nameWithType: ColorRGBA.Inequality(ColorRGBA, ColorRGBA)
- uid: Vim.Math3d.ColorRGBA.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_op_Inequality_
  commentId: Overload:Vim.Math3d.ColorRGBA.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.Inequality
  nameWithType: ColorRGBA.Inequality
- uid: Vim.Math3d.ColorRGBA.R
  name: R
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_R
  commentId: F:Vim.Math3d.ColorRGBA.R
  fullName: Vim.Math3d.ColorRGBA.R
  nameWithType: ColorRGBA.R
- uid: Vim.Math3d.ColorRGBA.SetA(System.Byte)
  name: SetA(Byte)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetA_System_Byte_
  commentId: M:Vim.Math3d.ColorRGBA.SetA(System.Byte)
  fullName: Vim.Math3d.ColorRGBA.SetA(System.Byte)
  nameWithType: ColorRGBA.SetA(Byte)
- uid: Vim.Math3d.ColorRGBA.SetA*
  name: SetA
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetA_
  commentId: Overload:Vim.Math3d.ColorRGBA.SetA
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.SetA
  nameWithType: ColorRGBA.SetA
- uid: Vim.Math3d.ColorRGBA.SetB(System.Byte)
  name: SetB(Byte)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetB_System_Byte_
  commentId: M:Vim.Math3d.ColorRGBA.SetB(System.Byte)
  fullName: Vim.Math3d.ColorRGBA.SetB(System.Byte)
  nameWithType: ColorRGBA.SetB(Byte)
- uid: Vim.Math3d.ColorRGBA.SetB*
  name: SetB
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetB_
  commentId: Overload:Vim.Math3d.ColorRGBA.SetB
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.SetB
  nameWithType: ColorRGBA.SetB
- uid: Vim.Math3d.ColorRGBA.SetG(System.Byte)
  name: SetG(Byte)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetG_System_Byte_
  commentId: M:Vim.Math3d.ColorRGBA.SetG(System.Byte)
  fullName: Vim.Math3d.ColorRGBA.SetG(System.Byte)
  nameWithType: ColorRGBA.SetG(Byte)
- uid: Vim.Math3d.ColorRGBA.SetG*
  name: SetG
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetG_
  commentId: Overload:Vim.Math3d.ColorRGBA.SetG
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.SetG
  nameWithType: ColorRGBA.SetG
- uid: Vim.Math3d.ColorRGBA.SetR(System.Byte)
  name: SetR(Byte)
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetR_System_Byte_
  commentId: M:Vim.Math3d.ColorRGBA.SetR(System.Byte)
  fullName: Vim.Math3d.ColorRGBA.SetR(System.Byte)
  nameWithType: ColorRGBA.SetR(Byte)
- uid: Vim.Math3d.ColorRGBA.SetR*
  name: SetR
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_SetR_
  commentId: Overload:Vim.Math3d.ColorRGBA.SetR
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.SetR
  nameWithType: ColorRGBA.SetR
- uid: Vim.Math3d.ColorRGBA.ToString
  name: ToString()
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_ToString
  commentId: M:Vim.Math3d.ColorRGBA.ToString
  fullName: Vim.Math3d.ColorRGBA.ToString()
  nameWithType: ColorRGBA.ToString()
- uid: Vim.Math3d.ColorRGBA.ToString*
  name: ToString
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_ToString_
  commentId: Overload:Vim.Math3d.ColorRGBA.ToString
  isSpec: "True"
  fullName: Vim.Math3d.ColorRGBA.ToString
  nameWithType: ColorRGBA.ToString
- uid: Vim.Math3d.ColorRGBA.Transparent
  name: Transparent
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Transparent
  commentId: F:Vim.Math3d.ColorRGBA.Transparent
  fullName: Vim.Math3d.ColorRGBA.Transparent
  nameWithType: ColorRGBA.Transparent
- uid: Vim.Math3d.ColorRGBA.White
  name: White
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_White
  commentId: F:Vim.Math3d.ColorRGBA.White
  fullName: Vim.Math3d.ColorRGBA.White
  nameWithType: ColorRGBA.White
- uid: Vim.Math3d.ColorRGBA.Zero
  name: Zero
  href: api/Vim.Math3d.ColorRGBA.html#Vim_Math3d_ColorRGBA_Zero
  commentId: F:Vim.Math3d.ColorRGBA.Zero
  fullName: Vim.Math3d.ColorRGBA.Zero
  nameWithType: ColorRGBA.Zero
- uid: Vim.Math3d.Complex
  name: Complex
  href: api/Vim.Math3d.Complex.html
  commentId: T:Vim.Math3d.Complex
  fullName: Vim.Math3d.Complex
  nameWithType: Complex
- uid: Vim.Math3d.Complex.#ctor(System.Double)
  name: Complex(Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex__ctor_System_Double_
  commentId: M:Vim.Math3d.Complex.#ctor(System.Double)
  fullName: Vim.Math3d.Complex.Complex(System.Double)
  nameWithType: Complex.Complex(Double)
- uid: Vim.Math3d.Complex.#ctor(System.Double,System.Double)
  name: Complex(Double, Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex__ctor_System_Double_System_Double_
  commentId: M:Vim.Math3d.Complex.#ctor(System.Double,System.Double)
  fullName: Vim.Math3d.Complex.Complex(System.Double, System.Double)
  nameWithType: Complex.Complex(Double, Double)
- uid: Vim.Math3d.Complex.#ctor(System.ValueTuple{System.Double,System.Double})
  name: Complex((Double real, Double imaginary))
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex__ctor_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.Complex.#ctor(System.ValueTuple{System.Double,System.Double})
  name.vb: Complex((real As Double, imaginary As Double)(Of Double, Double))
  fullName: Vim.Math3d.Complex.Complex(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.Complex.Complex(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: Complex.Complex((Double real, Double imaginary))
  nameWithType.vb: Complex.Complex((real As Double, imaginary As Double)(Of Double, Double))
- uid: Vim.Math3d.Complex.#ctor*
  name: Complex
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex__ctor_
  commentId: Overload:Vim.Math3d.Complex.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Complex
  nameWithType: Complex.Complex
- uid: Vim.Math3d.Complex.AlmostEquals(Vim.Math3d.Complex,System.Single)
  name: AlmostEquals(Complex, Single)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_AlmostEquals_Vim_Math3d_Complex_System_Single_
  commentId: M:Vim.Math3d.Complex.AlmostEquals(Vim.Math3d.Complex,System.Single)
  fullName: Vim.Math3d.Complex.AlmostEquals(Vim.Math3d.Complex, System.Single)
  nameWithType: Complex.AlmostEquals(Complex, Single)
- uid: Vim.Math3d.Complex.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_AlmostEquals_
  commentId: Overload:Vim.Math3d.Complex.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Complex.AlmostEquals
  nameWithType: Complex.AlmostEquals
- uid: Vim.Math3d.Complex.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Complex.AlmostZero(System.Single)
  fullName: Vim.Math3d.Complex.AlmostZero(System.Single)
  nameWithType: Complex.AlmostZero(Single)
- uid: Vim.Math3d.Complex.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_AlmostZero_
  commentId: Overload:Vim.Math3d.Complex.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Complex.AlmostZero
  nameWithType: Complex.AlmostZero
- uid: Vim.Math3d.Complex.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_AnyComponentNegative
  commentId: M:Vim.Math3d.Complex.AnyComponentNegative
  fullName: Vim.Math3d.Complex.AnyComponentNegative()
  nameWithType: Complex.AnyComponentNegative()
- uid: Vim.Math3d.Complex.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Complex.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Complex.AnyComponentNegative
  nameWithType: Complex.AnyComponentNegative
- uid: Vim.Math3d.Complex.CompareTo(Vim.Math3d.Complex)
  name: CompareTo(Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_CompareTo_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.CompareTo(Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.CompareTo(Vim.Math3d.Complex)
  nameWithType: Complex.CompareTo(Complex)
- uid: Vim.Math3d.Complex.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_CompareTo_
  commentId: Overload:Vim.Math3d.Complex.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Complex.CompareTo
  nameWithType: Complex.CompareTo
- uid: Vim.Math3d.Complex.Create(System.Double,System.Double)
  name: Create(Double, Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Create_System_Double_System_Double_
  commentId: M:Vim.Math3d.Complex.Create(System.Double,System.Double)
  fullName: Vim.Math3d.Complex.Create(System.Double, System.Double)
  nameWithType: Complex.Create(Double, Double)
- uid: Vim.Math3d.Complex.Create(System.ValueTuple{System.Double,System.Double})
  name: Create((Double real, Double imaginary))
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Create_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.Complex.Create(System.ValueTuple{System.Double,System.Double})
  name.vb: Create((real As Double, imaginary As Double)(Of Double, Double))
  fullName: Vim.Math3d.Complex.Create(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.Complex.Create(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: Complex.Create((Double real, Double imaginary))
  nameWithType.vb: Complex.Create((real As Double, imaginary As Double)(Of Double, Double))
- uid: Vim.Math3d.Complex.Create*
  name: Create
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Create_
  commentId: Overload:Vim.Math3d.Complex.Create
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Create
  nameWithType: Complex.Create
- uid: Vim.Math3d.Complex.Deconstruct(System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Deconstruct_System_Double__System_Double__
  commentId: M:Vim.Math3d.Complex.Deconstruct(System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
  fullName: Vim.Math3d.Complex.Deconstruct(out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.Complex.Deconstruct(ByRef System.Double, ByRef System.Double)
  nameWithType: Complex.Deconstruct(out Double, out Double)
  nameWithType.vb: Complex.Deconstruct(ByRef Double, ByRef Double)
- uid: Vim.Math3d.Complex.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Deconstruct_
  commentId: Overload:Vim.Math3d.Complex.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Deconstruct
  nameWithType: Complex.Deconstruct
- uid: Vim.Math3d.Complex.Dot(Vim.Math3d.Complex)
  name: Dot(Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Dot_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.Dot(Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Dot(Vim.Math3d.Complex)
  nameWithType: Complex.Dot(Complex)
- uid: Vim.Math3d.Complex.Dot(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: Dot(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Dot_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.Dot(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Dot(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.Dot(Complex, Complex)
- uid: Vim.Math3d.Complex.Dot*
  name: Dot
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Dot_
  commentId: Overload:Vim.Math3d.Complex.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Dot
  nameWithType: Complex.Dot
- uid: Vim.Math3d.Complex.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Equals_System_Object_
  commentId: M:Vim.Math3d.Complex.Equals(System.Object)
  fullName: Vim.Math3d.Complex.Equals(System.Object)
  nameWithType: Complex.Equals(Object)
- uid: Vim.Math3d.Complex.Equals(Vim.Math3d.Complex)
  name: Equals(Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Equals_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.Equals(Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Equals(Vim.Math3d.Complex)
  nameWithType: Complex.Equals(Complex)
- uid: Vim.Math3d.Complex.Equals*
  name: Equals
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Equals_
  commentId: Overload:Vim.Math3d.Complex.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Equals
  nameWithType: Complex.Equals
- uid: Vim.Math3d.Complex.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Complex.GetComponent(System.Int32)
  fullName: Vim.Math3d.Complex.GetComponent(System.Int32)
  nameWithType: Complex.GetComponent(Int32)
- uid: Vim.Math3d.Complex.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_GetComponent_
  commentId: Overload:Vim.Math3d.Complex.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Complex.GetComponent
  nameWithType: Complex.GetComponent
- uid: Vim.Math3d.Complex.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_GetHashCode
  commentId: M:Vim.Math3d.Complex.GetHashCode
  fullName: Vim.Math3d.Complex.GetHashCode()
  nameWithType: Complex.GetHashCode()
- uid: Vim.Math3d.Complex.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_GetHashCode_
  commentId: Overload:Vim.Math3d.Complex.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Complex.GetHashCode
  nameWithType: Complex.GetHashCode
- uid: Vim.Math3d.Complex.Imaginary
  name: Imaginary
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Imaginary
  commentId: F:Vim.Math3d.Complex.Imaginary
  fullName: Vim.Math3d.Complex.Imaginary
  nameWithType: Complex.Imaginary
- uid: Vim.Math3d.Complex.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_IsInfinity
  commentId: M:Vim.Math3d.Complex.IsInfinity
  fullName: Vim.Math3d.Complex.IsInfinity()
  nameWithType: Complex.IsInfinity()
- uid: Vim.Math3d.Complex.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_IsInfinity_
  commentId: Overload:Vim.Math3d.Complex.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Complex.IsInfinity
  nameWithType: Complex.IsInfinity
- uid: Vim.Math3d.Complex.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_IsNaN
  commentId: M:Vim.Math3d.Complex.IsNaN
  fullName: Vim.Math3d.Complex.IsNaN()
  nameWithType: Complex.IsNaN()
- uid: Vim.Math3d.Complex.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_IsNaN_
  commentId: Overload:Vim.Math3d.Complex.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Complex.IsNaN
  nameWithType: Complex.IsNaN
- uid: Vim.Math3d.Complex.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Magnitude
  commentId: M:Vim.Math3d.Complex.Magnitude
  fullName: Vim.Math3d.Complex.Magnitude()
  nameWithType: Complex.Magnitude()
- uid: Vim.Math3d.Complex.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Magnitude_
  commentId: Overload:Vim.Math3d.Complex.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Magnitude
  nameWithType: Complex.Magnitude
- uid: Vim.Math3d.Complex.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MagnitudeSquared
  commentId: M:Vim.Math3d.Complex.MagnitudeSquared
  fullName: Vim.Math3d.Complex.MagnitudeSquared()
  nameWithType: Complex.MagnitudeSquared()
- uid: Vim.Math3d.Complex.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Complex.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Complex.MagnitudeSquared
  nameWithType: Complex.MagnitudeSquared
- uid: Vim.Math3d.Complex.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MaxComponent
  commentId: M:Vim.Math3d.Complex.MaxComponent
  fullName: Vim.Math3d.Complex.MaxComponent()
  nameWithType: Complex.MaxComponent()
- uid: Vim.Math3d.Complex.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MaxComponent_
  commentId: Overload:Vim.Math3d.Complex.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Complex.MaxComponent
  nameWithType: Complex.MaxComponent
- uid: Vim.Math3d.Complex.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MaxValue
  commentId: F:Vim.Math3d.Complex.MaxValue
  fullName: Vim.Math3d.Complex.MaxValue
  nameWithType: Complex.MaxValue
- uid: Vim.Math3d.Complex.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MinComponent
  commentId: M:Vim.Math3d.Complex.MinComponent
  fullName: Vim.Math3d.Complex.MinComponent()
  nameWithType: Complex.MinComponent()
- uid: Vim.Math3d.Complex.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MinComponent_
  commentId: Overload:Vim.Math3d.Complex.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Complex.MinComponent
  nameWithType: Complex.MinComponent
- uid: Vim.Math3d.Complex.MinValue
  name: MinValue
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_MinValue
  commentId: F:Vim.Math3d.Complex.MinValue
  fullName: Vim.Math3d.Complex.MinValue
  nameWithType: Complex.MinValue
- uid: Vim.Math3d.Complex.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_NumComponents
  commentId: F:Vim.Math3d.Complex.NumComponents
  fullName: Vim.Math3d.Complex.NumComponents
  nameWithType: Complex.NumComponents
- uid: Vim.Math3d.Complex.One
  name: One
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_One
  commentId: F:Vim.Math3d.Complex.One
  fullName: Vim.Math3d.Complex.One
  nameWithType: Complex.One
- uid: Vim.Math3d.Complex.op_Addition(System.Double,Vim.Math3d.Complex)
  name: Addition(Double, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Addition_System_Double_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Addition(System.Double,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Addition(System.Double, Vim.Math3d.Complex)
  nameWithType: Complex.Addition(Double, Complex)
- uid: Vim.Math3d.Complex.op_Addition(Vim.Math3d.Complex,System.Double)
  name: Addition(Complex, Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Addition_Vim_Math3d_Complex_System_Double_
  commentId: M:Vim.Math3d.Complex.op_Addition(Vim.Math3d.Complex,System.Double)
  fullName: Vim.Math3d.Complex.Addition(Vim.Math3d.Complex, System.Double)
  nameWithType: Complex.Addition(Complex, Double)
- uid: Vim.Math3d.Complex.op_Addition(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: Addition(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Addition_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Addition(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Addition(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.Addition(Complex, Complex)
- uid: Vim.Math3d.Complex.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Addition_
  commentId: Overload:Vim.Math3d.Complex.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Addition
  nameWithType: Complex.Addition
- uid: Vim.Math3d.Complex.op_Division(System.Double,Vim.Math3d.Complex)
  name: Division(Double, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Division_System_Double_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Division(System.Double,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Division(System.Double, Vim.Math3d.Complex)
  nameWithType: Complex.Division(Double, Complex)
- uid: Vim.Math3d.Complex.op_Division(Vim.Math3d.Complex,System.Double)
  name: Division(Complex, Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Division_Vim_Math3d_Complex_System_Double_
  commentId: M:Vim.Math3d.Complex.op_Division(Vim.Math3d.Complex,System.Double)
  fullName: Vim.Math3d.Complex.Division(Vim.Math3d.Complex, System.Double)
  nameWithType: Complex.Division(Complex, Double)
- uid: Vim.Math3d.Complex.op_Division(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: Division(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Division_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Division(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Division(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.Division(Complex, Complex)
- uid: Vim.Math3d.Complex.op_Division*
  name: Division
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Division_
  commentId: Overload:Vim.Math3d.Complex.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Division
  nameWithType: Complex.Division
- uid: Vim.Math3d.Complex.op_Equality(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: Equality(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Equality_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Equality(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Equality(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.Equality(Complex, Complex)
- uid: Vim.Math3d.Complex.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Equality_
  commentId: Overload:Vim.Math3d.Complex.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Equality
  nameWithType: Complex.Equality
- uid: Vim.Math3d.Complex.op_GreaterThan(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: GreaterThan(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_GreaterThan_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_GreaterThan(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.GreaterThan(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.GreaterThan(Complex, Complex)
- uid: Vim.Math3d.Complex.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Complex.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Complex.GreaterThan
  nameWithType: Complex.GreaterThan
- uid: Vim.Math3d.Complex.op_GreaterThanOrEqual(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: GreaterThanOrEqual(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_GreaterThanOrEqual_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_GreaterThanOrEqual(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.GreaterThanOrEqual(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.GreaterThanOrEqual(Complex, Complex)
- uid: Vim.Math3d.Complex.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Complex.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Complex.GreaterThanOrEqual
  nameWithType: Complex.GreaterThanOrEqual
- uid: Vim.Math3d.Complex.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.Complex
  name: Implicit((Double real, Double imaginary) to Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Implicit_System_ValueTuple_System_Double_System_Double___Vim_Math3d_Complex
  commentId: M:Vim.Math3d.Complex.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.Complex
  name.vb: Widening((real As Double, imaginary As Double)(Of Double, Double) to Complex)
  fullName: Vim.Math3d.Complex.Implicit(System.ValueTuple<System.Double, System.Double> to Vim.Math3d.Complex)
  fullName.vb: Vim.Math3d.Complex.Widening(System.ValueTuple(Of System.Double, System.Double) to Vim.Math3d.Complex)
  nameWithType: Complex.Implicit((Double real, Double imaginary) to Complex)
  nameWithType.vb: Complex.Widening((real As Double, imaginary As Double)(Of Double, Double) to Complex)
- uid: Vim.Math3d.Complex.op_Implicit(Vim.Math3d.Complex)~System.ValueTuple{System.Double,System.Double}
  name: Implicit(Complex to (Double real, Double imaginary))
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Implicit_Vim_Math3d_Complex__System_ValueTuple_System_Double_System_Double_
  commentId: M:Vim.Math3d.Complex.op_Implicit(Vim.Math3d.Complex)~System.ValueTuple{System.Double,System.Double}
  name.vb: Widening(Complex to (real As Double, imaginary As Double)(Of Double, Double))
  fullName: Vim.Math3d.Complex.Implicit(Vim.Math3d.Complex to System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.Complex.Widening(Vim.Math3d.Complex to System.ValueTuple(Of System.Double, System.Double))
  nameWithType: Complex.Implicit(Complex to (Double real, Double imaginary))
  nameWithType.vb: Complex.Widening(Complex to (real As Double, imaginary As Double)(Of Double, Double))
- uid: Vim.Math3d.Complex.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Implicit_
  commentId: Overload:Vim.Math3d.Complex.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Complex.Implicit
  fullName.vb: Vim.Math3d.Complex.Widening
  nameWithType: Complex.Implicit
  nameWithType.vb: Complex.Widening
- uid: Vim.Math3d.Complex.op_Inequality(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: Inequality(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Inequality_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Inequality(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Inequality(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.Inequality(Complex, Complex)
- uid: Vim.Math3d.Complex.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Inequality_
  commentId: Overload:Vim.Math3d.Complex.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Inequality
  nameWithType: Complex.Inequality
- uid: Vim.Math3d.Complex.op_LessThan(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: LessThan(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_LessThan_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_LessThan(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.LessThan(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.LessThan(Complex, Complex)
- uid: Vim.Math3d.Complex.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_LessThan_
  commentId: Overload:Vim.Math3d.Complex.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Complex.LessThan
  nameWithType: Complex.LessThan
- uid: Vim.Math3d.Complex.op_LessThanOrEqual(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: LessThanOrEqual(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_LessThanOrEqual_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_LessThanOrEqual(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.LessThanOrEqual(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.LessThanOrEqual(Complex, Complex)
- uid: Vim.Math3d.Complex.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Complex.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Complex.LessThanOrEqual
  nameWithType: Complex.LessThanOrEqual
- uid: Vim.Math3d.Complex.op_Multiply(System.Double,Vim.Math3d.Complex)
  name: Multiply(Double, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Multiply_System_Double_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Multiply(System.Double,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Multiply(System.Double, Vim.Math3d.Complex)
  nameWithType: Complex.Multiply(Double, Complex)
- uid: Vim.Math3d.Complex.op_Multiply(Vim.Math3d.Complex,System.Double)
  name: Multiply(Complex, Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Multiply_Vim_Math3d_Complex_System_Double_
  commentId: M:Vim.Math3d.Complex.op_Multiply(Vim.Math3d.Complex,System.Double)
  fullName: Vim.Math3d.Complex.Multiply(Vim.Math3d.Complex, System.Double)
  nameWithType: Complex.Multiply(Complex, Double)
- uid: Vim.Math3d.Complex.op_Multiply(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: Multiply(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Multiply_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Multiply(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Multiply(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.Multiply(Complex, Complex)
- uid: Vim.Math3d.Complex.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Multiply_
  commentId: Overload:Vim.Math3d.Complex.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Multiply
  nameWithType: Complex.Multiply
- uid: Vim.Math3d.Complex.op_Subtraction(System.Double,Vim.Math3d.Complex)
  name: Subtraction(Double, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Subtraction_System_Double_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Subtraction(System.Double,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Subtraction(System.Double, Vim.Math3d.Complex)
  nameWithType: Complex.Subtraction(Double, Complex)
- uid: Vim.Math3d.Complex.op_Subtraction(Vim.Math3d.Complex,System.Double)
  name: Subtraction(Complex, Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Subtraction_Vim_Math3d_Complex_System_Double_
  commentId: M:Vim.Math3d.Complex.op_Subtraction(Vim.Math3d.Complex,System.Double)
  fullName: Vim.Math3d.Complex.Subtraction(Vim.Math3d.Complex, System.Double)
  nameWithType: Complex.Subtraction(Complex, Double)
- uid: Vim.Math3d.Complex.op_Subtraction(Vim.Math3d.Complex,Vim.Math3d.Complex)
  name: Subtraction(Complex, Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Subtraction_Vim_Math3d_Complex_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_Subtraction(Vim.Math3d.Complex,Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.Subtraction(Vim.Math3d.Complex, Vim.Math3d.Complex)
  nameWithType: Complex.Subtraction(Complex, Complex)
- uid: Vim.Math3d.Complex.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_Subtraction_
  commentId: Overload:Vim.Math3d.Complex.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Complex.Subtraction
  nameWithType: Complex.Subtraction
- uid: Vim.Math3d.Complex.op_UnaryNegation(Vim.Math3d.Complex)
  name: UnaryNegation(Complex)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_UnaryNegation_Vim_Math3d_Complex_
  commentId: M:Vim.Math3d.Complex.op_UnaryNegation(Vim.Math3d.Complex)
  fullName: Vim.Math3d.Complex.UnaryNegation(Vim.Math3d.Complex)
  nameWithType: Complex.UnaryNegation(Complex)
- uid: Vim.Math3d.Complex.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Complex.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Complex.UnaryNegation
  nameWithType: Complex.UnaryNegation
- uid: Vim.Math3d.Complex.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_ProductComponents
  commentId: M:Vim.Math3d.Complex.ProductComponents
  fullName: Vim.Math3d.Complex.ProductComponents()
  nameWithType: Complex.ProductComponents()
- uid: Vim.Math3d.Complex.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_ProductComponents_
  commentId: Overload:Vim.Math3d.Complex.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Complex.ProductComponents
  nameWithType: Complex.ProductComponents
- uid: Vim.Math3d.Complex.Real
  name: Real
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Real
  commentId: F:Vim.Math3d.Complex.Real
  fullName: Vim.Math3d.Complex.Real
  nameWithType: Complex.Real
- uid: Vim.Math3d.Complex.SetImaginary(System.Double)
  name: SetImaginary(Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SetImaginary_System_Double_
  commentId: M:Vim.Math3d.Complex.SetImaginary(System.Double)
  fullName: Vim.Math3d.Complex.SetImaginary(System.Double)
  nameWithType: Complex.SetImaginary(Double)
- uid: Vim.Math3d.Complex.SetImaginary*
  name: SetImaginary
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SetImaginary_
  commentId: Overload:Vim.Math3d.Complex.SetImaginary
  isSpec: "True"
  fullName: Vim.Math3d.Complex.SetImaginary
  nameWithType: Complex.SetImaginary
- uid: Vim.Math3d.Complex.SetReal(System.Double)
  name: SetReal(Double)
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SetReal_System_Double_
  commentId: M:Vim.Math3d.Complex.SetReal(System.Double)
  fullName: Vim.Math3d.Complex.SetReal(System.Double)
  nameWithType: Complex.SetReal(Double)
- uid: Vim.Math3d.Complex.SetReal*
  name: SetReal
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SetReal_
  commentId: Overload:Vim.Math3d.Complex.SetReal
  isSpec: "True"
  fullName: Vim.Math3d.Complex.SetReal
  nameWithType: Complex.SetReal
- uid: Vim.Math3d.Complex.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SumComponents
  commentId: M:Vim.Math3d.Complex.SumComponents
  fullName: Vim.Math3d.Complex.SumComponents()
  nameWithType: Complex.SumComponents()
- uid: Vim.Math3d.Complex.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SumComponents_
  commentId: Overload:Vim.Math3d.Complex.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Complex.SumComponents
  nameWithType: Complex.SumComponents
- uid: Vim.Math3d.Complex.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SumSqrComponents
  commentId: M:Vim.Math3d.Complex.SumSqrComponents
  fullName: Vim.Math3d.Complex.SumSqrComponents()
  nameWithType: Complex.SumSqrComponents()
- uid: Vim.Math3d.Complex.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Complex.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Complex.SumSqrComponents
  nameWithType: Complex.SumSqrComponents
- uid: Vim.Math3d.Complex.ToString
  name: ToString()
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_ToString
  commentId: M:Vim.Math3d.Complex.ToString
  fullName: Vim.Math3d.Complex.ToString()
  nameWithType: Complex.ToString()
- uid: Vim.Math3d.Complex.ToString*
  name: ToString
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_ToString_
  commentId: Overload:Vim.Math3d.Complex.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Complex.ToString
  nameWithType: Complex.ToString
- uid: Vim.Math3d.Complex.UnitImaginary
  name: UnitImaginary
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_UnitImaginary
  commentId: F:Vim.Math3d.Complex.UnitImaginary
  fullName: Vim.Math3d.Complex.UnitImaginary
  nameWithType: Complex.UnitImaginary
- uid: Vim.Math3d.Complex.UnitReal
  name: UnitReal
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_UnitReal
  commentId: F:Vim.Math3d.Complex.UnitReal
  fullName: Vim.Math3d.Complex.UnitReal
  nameWithType: Complex.UnitReal
- uid: Vim.Math3d.Complex.Zero
  name: Zero
  href: api/Vim.Math3d.Complex.html#Vim_Math3d_Complex_Zero
  commentId: F:Vim.Math3d.Complex.Zero
  fullName: Vim.Math3d.Complex.Zero
  nameWithType: Complex.Zero
- uid: Vim.Math3d.Constants
  name: Constants
  href: api/Vim.Math3d.Constants.html
  commentId: T:Vim.Math3d.Constants
  fullName: Vim.Math3d.Constants
  nameWithType: Constants
- uid: Vim.Math3d.Constants.DegreesToRadians
  name: DegreesToRadians
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_DegreesToRadians
  commentId: F:Vim.Math3d.Constants.DegreesToRadians
  fullName: Vim.Math3d.Constants.DegreesToRadians
  nameWithType: Constants.DegreesToRadians
- uid: Vim.Math3d.Constants.E
  name: E
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_E
  commentId: F:Vim.Math3d.Constants.E
  fullName: Vim.Math3d.Constants.E
  nameWithType: Constants.E
- uid: Vim.Math3d.Constants.FeetToMm
  name: FeetToMm
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_FeetToMm
  commentId: F:Vim.Math3d.Constants.FeetToMm
  fullName: Vim.Math3d.Constants.FeetToMm
  nameWithType: Constants.FeetToMm
- uid: Vim.Math3d.Constants.HalfPi
  name: HalfPi
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_HalfPi
  commentId: F:Vim.Math3d.Constants.HalfPi
  fullName: Vim.Math3d.Constants.HalfPi
  nameWithType: Constants.HalfPi
- uid: Vim.Math3d.Constants.Log10E
  name: Log10E
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_Log10E
  commentId: F:Vim.Math3d.Constants.Log10E
  fullName: Vim.Math3d.Constants.Log10E
  nameWithType: Constants.Log10E
- uid: Vim.Math3d.Constants.Log2E
  name: Log2E
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_Log2E
  commentId: F:Vim.Math3d.Constants.Log2E
  fullName: Vim.Math3d.Constants.Log2E
  nameWithType: Constants.Log2E
- uid: Vim.Math3d.Constants.MmToFeet
  name: MmToFeet
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_MmToFeet
  commentId: F:Vim.Math3d.Constants.MmToFeet
  fullName: Vim.Math3d.Constants.MmToFeet
  nameWithType: Constants.MmToFeet
- uid: Vim.Math3d.Constants.OneTenthOfADegree
  name: OneTenthOfADegree
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_OneTenthOfADegree
  commentId: F:Vim.Math3d.Constants.OneTenthOfADegree
  fullName: Vim.Math3d.Constants.OneTenthOfADegree
  nameWithType: Constants.OneTenthOfADegree
- uid: Vim.Math3d.Constants.Pi
  name: Pi
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_Pi
  commentId: F:Vim.Math3d.Constants.Pi
  fullName: Vim.Math3d.Constants.Pi
  nameWithType: Constants.Pi
- uid: Vim.Math3d.Constants.RadiansToDegrees
  name: RadiansToDegrees
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_RadiansToDegrees
  commentId: F:Vim.Math3d.Constants.RadiansToDegrees
  fullName: Vim.Math3d.Constants.RadiansToDegrees
  nameWithType: Constants.RadiansToDegrees
- uid: Vim.Math3d.Constants.Tolerance
  name: Tolerance
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_Tolerance
  commentId: F:Vim.Math3d.Constants.Tolerance
  fullName: Vim.Math3d.Constants.Tolerance
  nameWithType: Constants.Tolerance
- uid: Vim.Math3d.Constants.TwoPi
  name: TwoPi
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_TwoPi
  commentId: F:Vim.Math3d.Constants.TwoPi
  fullName: Vim.Math3d.Constants.TwoPi
  nameWithType: Constants.TwoPi
- uid: Vim.Math3d.Constants.XYPlane
  name: XYPlane
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_XYPlane
  commentId: F:Vim.Math3d.Constants.XYPlane
  fullName: Vim.Math3d.Constants.XYPlane
  nameWithType: Constants.XYPlane
- uid: Vim.Math3d.Constants.XZPlane
  name: XZPlane
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_XZPlane
  commentId: F:Vim.Math3d.Constants.XZPlane
  fullName: Vim.Math3d.Constants.XZPlane
  nameWithType: Constants.XZPlane
- uid: Vim.Math3d.Constants.YZPlane
  name: YZPlane
  href: api/Vim.Math3d.Constants.html#Vim_Math3d_Constants_YZPlane
  commentId: F:Vim.Math3d.Constants.YZPlane
  fullName: Vim.Math3d.Constants.YZPlane
  nameWithType: Constants.YZPlane
- uid: Vim.Math3d.ContainmentType
  name: ContainmentType
  href: api/Vim.Math3d.ContainmentType.html
  commentId: T:Vim.Math3d.ContainmentType
  fullName: Vim.Math3d.ContainmentType
  nameWithType: ContainmentType
- uid: Vim.Math3d.ContainmentType.Contains
  name: Contains
  href: api/Vim.Math3d.ContainmentType.html#Vim_Math3d_ContainmentType_Contains
  commentId: F:Vim.Math3d.ContainmentType.Contains
  fullName: Vim.Math3d.ContainmentType.Contains
  nameWithType: ContainmentType.Contains
- uid: Vim.Math3d.ContainmentType.Disjoint
  name: Disjoint
  href: api/Vim.Math3d.ContainmentType.html#Vim_Math3d_ContainmentType_Disjoint
  commentId: F:Vim.Math3d.ContainmentType.Disjoint
  fullName: Vim.Math3d.ContainmentType.Disjoint
  nameWithType: ContainmentType.Disjoint
- uid: Vim.Math3d.ContainmentType.Intersects
  name: Intersects
  href: api/Vim.Math3d.ContainmentType.html#Vim_Math3d_ContainmentType_Intersects
  commentId: F:Vim.Math3d.ContainmentType.Intersects
  fullName: Vim.Math3d.ContainmentType.Intersects
  nameWithType: ContainmentType.Intersects
- uid: Vim.Math3d.CylindricalCoordinate
  name: CylindricalCoordinate
  href: api/Vim.Math3d.CylindricalCoordinate.html
  commentId: T:Vim.Math3d.CylindricalCoordinate
  fullName: Vim.Math3d.CylindricalCoordinate
  nameWithType: CylindricalCoordinate
- uid: Vim.Math3d.CylindricalCoordinate.#ctor(System.Double,System.Double,System.Double)
  name: CylindricalCoordinate(Double, Double, Double)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate__ctor_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.CylindricalCoordinate.#ctor(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.CylindricalCoordinate.CylindricalCoordinate(System.Double, System.Double, System.Double)
  nameWithType: CylindricalCoordinate.CylindricalCoordinate(Double, Double, Double)
- uid: Vim.Math3d.CylindricalCoordinate.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name: CylindricalCoordinate((Double radius, Double azimuth, Double height))
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate__ctor_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.CylindricalCoordinate.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: CylindricalCoordinate((radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.CylindricalCoordinate.CylindricalCoordinate(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.CylindricalCoordinate.CylindricalCoordinate(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: CylindricalCoordinate.CylindricalCoordinate((Double radius, Double azimuth, Double height))
  nameWithType.vb: CylindricalCoordinate.CylindricalCoordinate((radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.CylindricalCoordinate.#ctor*
  name: CylindricalCoordinate
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate__ctor_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.CylindricalCoordinate
  nameWithType: CylindricalCoordinate.CylindricalCoordinate
- uid: Vim.Math3d.CylindricalCoordinate.AlmostEquals(Vim.Math3d.CylindricalCoordinate,System.Single)
  name: AlmostEquals(CylindricalCoordinate, Single)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_AlmostEquals_Vim_Math3d_CylindricalCoordinate_System_Single_
  commentId: M:Vim.Math3d.CylindricalCoordinate.AlmostEquals(Vim.Math3d.CylindricalCoordinate,System.Single)
  fullName: Vim.Math3d.CylindricalCoordinate.AlmostEquals(Vim.Math3d.CylindricalCoordinate, System.Single)
  nameWithType: CylindricalCoordinate.AlmostEquals(CylindricalCoordinate, Single)
- uid: Vim.Math3d.CylindricalCoordinate.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_AlmostEquals_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.AlmostEquals
  nameWithType: CylindricalCoordinate.AlmostEquals
- uid: Vim.Math3d.CylindricalCoordinate.Azimuth
  name: Azimuth
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Azimuth
  commentId: F:Vim.Math3d.CylindricalCoordinate.Azimuth
  fullName: Vim.Math3d.CylindricalCoordinate.Azimuth
  nameWithType: CylindricalCoordinate.Azimuth
- uid: Vim.Math3d.CylindricalCoordinate.Create(System.Double,System.Double,System.Double)
  name: Create(Double, Double, Double)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Create_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.CylindricalCoordinate.Create(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.CylindricalCoordinate.Create(System.Double, System.Double, System.Double)
  nameWithType: CylindricalCoordinate.Create(Double, Double, Double)
- uid: Vim.Math3d.CylindricalCoordinate.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name: Create((Double radius, Double azimuth, Double height))
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Create_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.CylindricalCoordinate.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: Create((radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.CylindricalCoordinate.Create(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.CylindricalCoordinate.Create(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: CylindricalCoordinate.Create((Double radius, Double azimuth, Double height))
  nameWithType.vb: CylindricalCoordinate.Create((radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.CylindricalCoordinate.Create*
  name: Create
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Create_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.Create
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.Create
  nameWithType: CylindricalCoordinate.Create
- uid: Vim.Math3d.CylindricalCoordinate.Deconstruct(System.Double@,System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double, out Double)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Deconstruct_System_Double__System_Double__System_Double__
  commentId: M:Vim.Math3d.CylindricalCoordinate.Deconstruct(System.Double@,System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double, ByRef Double)
  fullName: Vim.Math3d.CylindricalCoordinate.Deconstruct(out System.Double, out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.CylindricalCoordinate.Deconstruct(ByRef System.Double, ByRef System.Double, ByRef System.Double)
  nameWithType: CylindricalCoordinate.Deconstruct(out Double, out Double, out Double)
  nameWithType.vb: CylindricalCoordinate.Deconstruct(ByRef Double, ByRef Double, ByRef Double)
- uid: Vim.Math3d.CylindricalCoordinate.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Deconstruct_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.Deconstruct
  nameWithType: CylindricalCoordinate.Deconstruct
- uid: Vim.Math3d.CylindricalCoordinate.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Equals_System_Object_
  commentId: M:Vim.Math3d.CylindricalCoordinate.Equals(System.Object)
  fullName: Vim.Math3d.CylindricalCoordinate.Equals(System.Object)
  nameWithType: CylindricalCoordinate.Equals(Object)
- uid: Vim.Math3d.CylindricalCoordinate.Equals(Vim.Math3d.CylindricalCoordinate)
  name: Equals(CylindricalCoordinate)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Equals_Vim_Math3d_CylindricalCoordinate_
  commentId: M:Vim.Math3d.CylindricalCoordinate.Equals(Vim.Math3d.CylindricalCoordinate)
  fullName: Vim.Math3d.CylindricalCoordinate.Equals(Vim.Math3d.CylindricalCoordinate)
  nameWithType: CylindricalCoordinate.Equals(CylindricalCoordinate)
- uid: Vim.Math3d.CylindricalCoordinate.Equals*
  name: Equals
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Equals_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.Equals
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.Equals
  nameWithType: CylindricalCoordinate.Equals
- uid: Vim.Math3d.CylindricalCoordinate.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_GetHashCode
  commentId: M:Vim.Math3d.CylindricalCoordinate.GetHashCode
  fullName: Vim.Math3d.CylindricalCoordinate.GetHashCode()
  nameWithType: CylindricalCoordinate.GetHashCode()
- uid: Vim.Math3d.CylindricalCoordinate.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_GetHashCode_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.GetHashCode
  nameWithType: CylindricalCoordinate.GetHashCode
- uid: Vim.Math3d.CylindricalCoordinate.Height
  name: Height
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Height
  commentId: F:Vim.Math3d.CylindricalCoordinate.Height
  fullName: Vim.Math3d.CylindricalCoordinate.Height
  nameWithType: CylindricalCoordinate.Height
- uid: Vim.Math3d.CylindricalCoordinate.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_MaxValue
  commentId: F:Vim.Math3d.CylindricalCoordinate.MaxValue
  fullName: Vim.Math3d.CylindricalCoordinate.MaxValue
  nameWithType: CylindricalCoordinate.MaxValue
- uid: Vim.Math3d.CylindricalCoordinate.MinValue
  name: MinValue
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_MinValue
  commentId: F:Vim.Math3d.CylindricalCoordinate.MinValue
  fullName: Vim.Math3d.CylindricalCoordinate.MinValue
  nameWithType: CylindricalCoordinate.MinValue
- uid: Vim.Math3d.CylindricalCoordinate.op_Equality(Vim.Math3d.CylindricalCoordinate,Vim.Math3d.CylindricalCoordinate)
  name: Equality(CylindricalCoordinate, CylindricalCoordinate)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_op_Equality_Vim_Math3d_CylindricalCoordinate_Vim_Math3d_CylindricalCoordinate_
  commentId: M:Vim.Math3d.CylindricalCoordinate.op_Equality(Vim.Math3d.CylindricalCoordinate,Vim.Math3d.CylindricalCoordinate)
  fullName: Vim.Math3d.CylindricalCoordinate.Equality(Vim.Math3d.CylindricalCoordinate, Vim.Math3d.CylindricalCoordinate)
  nameWithType: CylindricalCoordinate.Equality(CylindricalCoordinate, CylindricalCoordinate)
- uid: Vim.Math3d.CylindricalCoordinate.op_Equality*
  name: Equality
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_op_Equality_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.Equality
  nameWithType: CylindricalCoordinate.Equality
- uid: Vim.Math3d.CylindricalCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.CylindricalCoordinate
  name: Implicit((Double radius, Double azimuth, Double height) to CylindricalCoordinate)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_op_Implicit_System_ValueTuple_System_Double_System_Double_System_Double___Vim_Math3d_CylindricalCoordinate
  commentId: M:Vim.Math3d.CylindricalCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.CylindricalCoordinate
  name.vb: Widening((radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double) to CylindricalCoordinate)
  fullName: Vim.Math3d.CylindricalCoordinate.Implicit(System.ValueTuple<System.Double, System.Double, System.Double> to Vim.Math3d.CylindricalCoordinate)
  fullName.vb: Vim.Math3d.CylindricalCoordinate.Widening(System.ValueTuple(Of System.Double, System.Double, System.Double) to Vim.Math3d.CylindricalCoordinate)
  nameWithType: CylindricalCoordinate.Implicit((Double radius, Double azimuth, Double height) to CylindricalCoordinate)
  nameWithType.vb: CylindricalCoordinate.Widening((radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double) to CylindricalCoordinate)
- uid: Vim.Math3d.CylindricalCoordinate.op_Implicit(Vim.Math3d.CylindricalCoordinate)~System.ValueTuple{System.Double,System.Double,System.Double}
  name: Implicit(CylindricalCoordinate to (Double radius, Double azimuth, Double height))
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_op_Implicit_Vim_Math3d_CylindricalCoordinate__System_ValueTuple_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.CylindricalCoordinate.op_Implicit(Vim.Math3d.CylindricalCoordinate)~System.ValueTuple{System.Double,System.Double,System.Double}
  name.vb: Widening(CylindricalCoordinate to (radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.CylindricalCoordinate.Implicit(Vim.Math3d.CylindricalCoordinate to System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.CylindricalCoordinate.Widening(Vim.Math3d.CylindricalCoordinate to System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: CylindricalCoordinate.Implicit(CylindricalCoordinate to (Double radius, Double azimuth, Double height))
  nameWithType.vb: CylindricalCoordinate.Widening(CylindricalCoordinate to (radius As Double, azimuth As Double, height As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.CylindricalCoordinate.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_op_Implicit_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.CylindricalCoordinate.Implicit
  fullName.vb: Vim.Math3d.CylindricalCoordinate.Widening
  nameWithType: CylindricalCoordinate.Implicit
  nameWithType.vb: CylindricalCoordinate.Widening
- uid: Vim.Math3d.CylindricalCoordinate.op_Inequality(Vim.Math3d.CylindricalCoordinate,Vim.Math3d.CylindricalCoordinate)
  name: Inequality(CylindricalCoordinate, CylindricalCoordinate)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_op_Inequality_Vim_Math3d_CylindricalCoordinate_Vim_Math3d_CylindricalCoordinate_
  commentId: M:Vim.Math3d.CylindricalCoordinate.op_Inequality(Vim.Math3d.CylindricalCoordinate,Vim.Math3d.CylindricalCoordinate)
  fullName: Vim.Math3d.CylindricalCoordinate.Inequality(Vim.Math3d.CylindricalCoordinate, Vim.Math3d.CylindricalCoordinate)
  nameWithType: CylindricalCoordinate.Inequality(CylindricalCoordinate, CylindricalCoordinate)
- uid: Vim.Math3d.CylindricalCoordinate.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_op_Inequality_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.Inequality
  nameWithType: CylindricalCoordinate.Inequality
- uid: Vim.Math3d.CylindricalCoordinate.Radius
  name: Radius
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Radius
  commentId: F:Vim.Math3d.CylindricalCoordinate.Radius
  fullName: Vim.Math3d.CylindricalCoordinate.Radius
  nameWithType: CylindricalCoordinate.Radius
- uid: Vim.Math3d.CylindricalCoordinate.SetAzimuth(System.Double)
  name: SetAzimuth(Double)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_SetAzimuth_System_Double_
  commentId: M:Vim.Math3d.CylindricalCoordinate.SetAzimuth(System.Double)
  fullName: Vim.Math3d.CylindricalCoordinate.SetAzimuth(System.Double)
  nameWithType: CylindricalCoordinate.SetAzimuth(Double)
- uid: Vim.Math3d.CylindricalCoordinate.SetAzimuth*
  name: SetAzimuth
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_SetAzimuth_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.SetAzimuth
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.SetAzimuth
  nameWithType: CylindricalCoordinate.SetAzimuth
- uid: Vim.Math3d.CylindricalCoordinate.SetHeight(System.Double)
  name: SetHeight(Double)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_SetHeight_System_Double_
  commentId: M:Vim.Math3d.CylindricalCoordinate.SetHeight(System.Double)
  fullName: Vim.Math3d.CylindricalCoordinate.SetHeight(System.Double)
  nameWithType: CylindricalCoordinate.SetHeight(Double)
- uid: Vim.Math3d.CylindricalCoordinate.SetHeight*
  name: SetHeight
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_SetHeight_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.SetHeight
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.SetHeight
  nameWithType: CylindricalCoordinate.SetHeight
- uid: Vim.Math3d.CylindricalCoordinate.SetRadius(System.Double)
  name: SetRadius(Double)
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_SetRadius_System_Double_
  commentId: M:Vim.Math3d.CylindricalCoordinate.SetRadius(System.Double)
  fullName: Vim.Math3d.CylindricalCoordinate.SetRadius(System.Double)
  nameWithType: CylindricalCoordinate.SetRadius(Double)
- uid: Vim.Math3d.CylindricalCoordinate.SetRadius*
  name: SetRadius
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_SetRadius_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.SetRadius
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.SetRadius
  nameWithType: CylindricalCoordinate.SetRadius
- uid: Vim.Math3d.CylindricalCoordinate.ToString
  name: ToString()
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_ToString
  commentId: M:Vim.Math3d.CylindricalCoordinate.ToString
  fullName: Vim.Math3d.CylindricalCoordinate.ToString()
  nameWithType: CylindricalCoordinate.ToString()
- uid: Vim.Math3d.CylindricalCoordinate.ToString*
  name: ToString
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_ToString_
  commentId: Overload:Vim.Math3d.CylindricalCoordinate.ToString
  isSpec: "True"
  fullName: Vim.Math3d.CylindricalCoordinate.ToString
  nameWithType: CylindricalCoordinate.ToString
- uid: Vim.Math3d.CylindricalCoordinate.Zero
  name: Zero
  href: api/Vim.Math3d.CylindricalCoordinate.html#Vim_Math3d_CylindricalCoordinate_Zero
  commentId: F:Vim.Math3d.CylindricalCoordinate.Zero
  fullName: Vim.Math3d.CylindricalCoordinate.Zero
  nameWithType: CylindricalCoordinate.Zero
- uid: Vim.Math3d.DAABox
  name: DAABox
  href: api/Vim.Math3d.DAABox.html
  commentId: T:Vim.Math3d.DAABox
  fullName: Vim.Math3d.DAABox
  nameWithType: DAABox
- uid: Vim.Math3d.DAABox.#ctor(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name: DAABox((DVector3 min, DVector3 max))
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox__ctor_System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.DAABox.#ctor(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name.vb: DAABox((min As DVector3, max As DVector3)(Of DVector3, DVector3))
  fullName: Vim.Math3d.DAABox.DAABox(System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.DAABox.DAABox(System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3))
  nameWithType: DAABox.DAABox((DVector3 min, DVector3 max))
  nameWithType.vb: DAABox.DAABox((min As DVector3, max As DVector3)(Of DVector3, DVector3))
- uid: Vim.Math3d.DAABox.#ctor(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: DAABox(DVector3, DVector3)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox__ctor_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DAABox.#ctor(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DAABox.DAABox(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DAABox.DAABox(DVector3, DVector3)
- uid: Vim.Math3d.DAABox.#ctor*
  name: DAABox
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox__ctor_
  commentId: Overload:Vim.Math3d.DAABox.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.DAABox
  nameWithType: DAABox.DAABox
- uid: Vim.Math3d.DAABox.AABox
  name: AABox
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_AABox
  commentId: P:Vim.Math3d.DAABox.AABox
  fullName: Vim.Math3d.DAABox.AABox
  nameWithType: DAABox.AABox
- uid: Vim.Math3d.DAABox.AABox*
  name: AABox
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_AABox_
  commentId: Overload:Vim.Math3d.DAABox.AABox
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.AABox
  nameWithType: DAABox.AABox
- uid: Vim.Math3d.DAABox.AlmostEquals(Vim.Math3d.DAABox,System.Single)
  name: AlmostEquals(DAABox, Single)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_AlmostEquals_Vim_Math3d_DAABox_System_Single_
  commentId: M:Vim.Math3d.DAABox.AlmostEquals(Vim.Math3d.DAABox,System.Single)
  fullName: Vim.Math3d.DAABox.AlmostEquals(Vim.Math3d.DAABox, System.Single)
  nameWithType: DAABox.AlmostEquals(DAABox, Single)
- uid: Vim.Math3d.DAABox.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_AlmostEquals_
  commentId: Overload:Vim.Math3d.DAABox.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.AlmostEquals
  nameWithType: DAABox.AlmostEquals
- uid: Vim.Math3d.DAABox.Center
  name: Center
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Center
  commentId: P:Vim.Math3d.DAABox.Center
  fullName: Vim.Math3d.DAABox.Center
  nameWithType: DAABox.Center
- uid: Vim.Math3d.DAABox.Center*
  name: Center
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Center_
  commentId: Overload:Vim.Math3d.DAABox.Center
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Center
  nameWithType: DAABox.Center
- uid: Vim.Math3d.DAABox.CompareTo(Vim.Math3d.DAABox)
  name: CompareTo(DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_CompareTo_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.CompareTo(Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.CompareTo(Vim.Math3d.DAABox)
  nameWithType: DAABox.CompareTo(DAABox)
- uid: Vim.Math3d.DAABox.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_CompareTo_
  commentId: Overload:Vim.Math3d.DAABox.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.CompareTo
  nameWithType: DAABox.CompareTo
- uid: Vim.Math3d.DAABox.Create(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name: Create((DVector3 min, DVector3 max))
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Create_System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.DAABox.Create(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name.vb: Create((min As DVector3, max As DVector3)(Of DVector3, DVector3))
  fullName: Vim.Math3d.DAABox.Create(System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.DAABox.Create(System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3))
  nameWithType: DAABox.Create((DVector3 min, DVector3 max))
  nameWithType.vb: DAABox.Create((min As DVector3, max As DVector3)(Of DVector3, DVector3))
- uid: Vim.Math3d.DAABox.Create(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Create(DVector3, DVector3)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Create_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DAABox.Create(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DAABox.Create(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DAABox.Create(DVector3, DVector3)
- uid: Vim.Math3d.DAABox.Create*
  name: Create
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Create_
  commentId: Overload:Vim.Math3d.DAABox.Create
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Create
  nameWithType: DAABox.Create
- uid: Vim.Math3d.DAABox.Deconstruct(Vim.Math3d.DVector3@,Vim.Math3d.DVector3@)
  name: Deconstruct(out DVector3, out DVector3)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Deconstruct_Vim_Math3d_DVector3__Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.DAABox.Deconstruct(Vim.Math3d.DVector3@,Vim.Math3d.DVector3@)
  name.vb: Deconstruct(ByRef DVector3, ByRef DVector3)
  fullName: Vim.Math3d.DAABox.Deconstruct(out Vim.Math3d.DVector3, out Vim.Math3d.DVector3)
  fullName.vb: Vim.Math3d.DAABox.Deconstruct(ByRef Vim.Math3d.DVector3, ByRef Vim.Math3d.DVector3)
  nameWithType: DAABox.Deconstruct(out DVector3, out DVector3)
  nameWithType.vb: DAABox.Deconstruct(ByRef DVector3, ByRef DVector3)
- uid: Vim.Math3d.DAABox.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Deconstruct_
  commentId: Overload:Vim.Math3d.DAABox.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Deconstruct
  nameWithType: DAABox.Deconstruct
- uid: Vim.Math3d.DAABox.Empty
  name: Empty
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Empty
  commentId: F:Vim.Math3d.DAABox.Empty
  fullName: Vim.Math3d.DAABox.Empty
  nameWithType: DAABox.Empty
- uid: Vim.Math3d.DAABox.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Equals_System_Object_
  commentId: M:Vim.Math3d.DAABox.Equals(System.Object)
  fullName: Vim.Math3d.DAABox.Equals(System.Object)
  nameWithType: DAABox.Equals(Object)
- uid: Vim.Math3d.DAABox.Equals(Vim.Math3d.DAABox)
  name: Equals(DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Equals_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.Equals(Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.Equals(Vim.Math3d.DAABox)
  nameWithType: DAABox.Equals(DAABox)
- uid: Vim.Math3d.DAABox.Equals*
  name: Equals
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Equals_
  commentId: Overload:Vim.Math3d.DAABox.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Equals
  nameWithType: DAABox.Equals
- uid: Vim.Math3d.DAABox.Extent
  name: Extent
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Extent
  commentId: P:Vim.Math3d.DAABox.Extent
  fullName: Vim.Math3d.DAABox.Extent
  nameWithType: DAABox.Extent
- uid: Vim.Math3d.DAABox.Extent*
  name: Extent
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Extent_
  commentId: Overload:Vim.Math3d.DAABox.Extent
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Extent
  nameWithType: DAABox.Extent
- uid: Vim.Math3d.DAABox.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_GetHashCode
  commentId: M:Vim.Math3d.DAABox.GetHashCode
  fullName: Vim.Math3d.DAABox.GetHashCode()
  nameWithType: DAABox.GetHashCode()
- uid: Vim.Math3d.DAABox.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_GetHashCode_
  commentId: Overload:Vim.Math3d.DAABox.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.GetHashCode
  nameWithType: DAABox.GetHashCode
- uid: Vim.Math3d.DAABox.Intersection(Vim.Math3d.DAABox)
  name: Intersection(DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Intersection_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.Intersection(Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.Intersection(Vim.Math3d.DAABox)
  nameWithType: DAABox.Intersection(DAABox)
- uid: Vim.Math3d.DAABox.Intersection*
  name: Intersection
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Intersection_
  commentId: Overload:Vim.Math3d.DAABox.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Intersection
  nameWithType: DAABox.Intersection
- uid: Vim.Math3d.DAABox.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_IsInfinity
  commentId: M:Vim.Math3d.DAABox.IsInfinity
  fullName: Vim.Math3d.DAABox.IsInfinity()
  nameWithType: DAABox.IsInfinity()
- uid: Vim.Math3d.DAABox.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_IsInfinity_
  commentId: Overload:Vim.Math3d.DAABox.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.IsInfinity
  nameWithType: DAABox.IsInfinity
- uid: Vim.Math3d.DAABox.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_IsNaN
  commentId: M:Vim.Math3d.DAABox.IsNaN
  fullName: Vim.Math3d.DAABox.IsNaN()
  nameWithType: DAABox.IsNaN()
- uid: Vim.Math3d.DAABox.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_IsNaN_
  commentId: Overload:Vim.Math3d.DAABox.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.IsNaN
  nameWithType: DAABox.IsNaN
- uid: Vim.Math3d.DAABox.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Magnitude
  commentId: M:Vim.Math3d.DAABox.Magnitude
  fullName: Vim.Math3d.DAABox.Magnitude()
  nameWithType: DAABox.Magnitude()
- uid: Vim.Math3d.DAABox.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Magnitude_
  commentId: Overload:Vim.Math3d.DAABox.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Magnitude
  nameWithType: DAABox.Magnitude
- uid: Vim.Math3d.DAABox.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_MagnitudeSquared
  commentId: M:Vim.Math3d.DAABox.MagnitudeSquared
  fullName: Vim.Math3d.DAABox.MagnitudeSquared()
  nameWithType: DAABox.MagnitudeSquared()
- uid: Vim.Math3d.DAABox.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.DAABox.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.MagnitudeSquared
  nameWithType: DAABox.MagnitudeSquared
- uid: Vim.Math3d.DAABox.Max
  name: Max
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Max
  commentId: F:Vim.Math3d.DAABox.Max
  fullName: Vim.Math3d.DAABox.Max
  nameWithType: DAABox.Max
- uid: Vim.Math3d.DAABox.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_MaxValue
  commentId: F:Vim.Math3d.DAABox.MaxValue
  fullName: Vim.Math3d.DAABox.MaxValue
  nameWithType: DAABox.MaxValue
- uid: Vim.Math3d.DAABox.Merge(Vim.Math3d.DAABox)
  name: Merge(DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Merge_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.Merge(Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.Merge(Vim.Math3d.DAABox)
  nameWithType: DAABox.Merge(DAABox)
- uid: Vim.Math3d.DAABox.Merge(Vim.Math3d.DVector3)
  name: Merge(DVector3)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Merge_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DAABox.Merge(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DAABox.Merge(Vim.Math3d.DVector3)
  nameWithType: DAABox.Merge(DVector3)
- uid: Vim.Math3d.DAABox.Merge*
  name: Merge
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Merge_
  commentId: Overload:Vim.Math3d.DAABox.Merge
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Merge
  nameWithType: DAABox.Merge
- uid: Vim.Math3d.DAABox.Min
  name: Min
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Min
  commentId: F:Vim.Math3d.DAABox.Min
  fullName: Vim.Math3d.DAABox.Min
  nameWithType: DAABox.Min
- uid: Vim.Math3d.DAABox.MinValue
  name: MinValue
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_MinValue
  commentId: F:Vim.Math3d.DAABox.MinValue
  fullName: Vim.Math3d.DAABox.MinValue
  nameWithType: DAABox.MinValue
- uid: Vim.Math3d.DAABox.op_Addition(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: Addition(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Addition_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_Addition(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.Addition(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.Addition(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_Addition(Vim.Math3d.DAABox,Vim.Math3d.DVector3)
  name: Addition(DAABox, DVector3)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Addition_Vim_Math3d_DAABox_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DAABox.op_Addition(Vim.Math3d.DAABox,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DAABox.Addition(Vim.Math3d.DAABox, Vim.Math3d.DVector3)
  nameWithType: DAABox.Addition(DAABox, DVector3)
- uid: Vim.Math3d.DAABox.op_Addition*
  name: Addition
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Addition_
  commentId: Overload:Vim.Math3d.DAABox.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Addition
  nameWithType: DAABox.Addition
- uid: Vim.Math3d.DAABox.op_Equality(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: Equality(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Equality_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_Equality(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.Equality(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.Equality(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Equality_
  commentId: Overload:Vim.Math3d.DAABox.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Equality
  nameWithType: DAABox.Equality
- uid: Vim.Math3d.DAABox.op_GreaterThan(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: GreaterThan(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_GreaterThan_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_GreaterThan(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.GreaterThan(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.GreaterThan(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_GreaterThan_
  commentId: Overload:Vim.Math3d.DAABox.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.GreaterThan
  nameWithType: DAABox.GreaterThan
- uid: Vim.Math3d.DAABox.op_GreaterThanOrEqual(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: GreaterThanOrEqual(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_GreaterThanOrEqual_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_GreaterThanOrEqual(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.GreaterThanOrEqual(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.GreaterThanOrEqual(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.DAABox.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.GreaterThanOrEqual
  nameWithType: DAABox.GreaterThanOrEqual
- uid: Vim.Math3d.DAABox.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})~Vim.Math3d.DAABox
  name: Implicit((DVector3 min, DVector3 max) to DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Implicit_System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3___Vim_Math3d_DAABox
  commentId: M:Vim.Math3d.DAABox.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})~Vim.Math3d.DAABox
  name.vb: Widening((min As DVector3, max As DVector3)(Of DVector3, DVector3) to DAABox)
  fullName: Vim.Math3d.DAABox.Implicit(System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3> to Vim.Math3d.DAABox)
  fullName.vb: Vim.Math3d.DAABox.Widening(System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3) to Vim.Math3d.DAABox)
  nameWithType: DAABox.Implicit((DVector3 min, DVector3 max) to DAABox)
  nameWithType.vb: DAABox.Widening((min As DVector3, max As DVector3)(Of DVector3, DVector3) to DAABox)
- uid: Vim.Math3d.DAABox.op_Implicit(Vim.Math3d.DAABox)~System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3}
  name: Implicit(DAABox to (DVector3 min, DVector3 max))
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Implicit_Vim_Math3d_DAABox__System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DAABox.op_Implicit(Vim.Math3d.DAABox)~System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3}
  name.vb: Widening(DAABox to (min As DVector3, max As DVector3)(Of DVector3, DVector3))
  fullName: Vim.Math3d.DAABox.Implicit(Vim.Math3d.DAABox to System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.DAABox.Widening(Vim.Math3d.DAABox to System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3))
  nameWithType: DAABox.Implicit(DAABox to (DVector3 min, DVector3 max))
  nameWithType.vb: DAABox.Widening(DAABox to (min As DVector3, max As DVector3)(Of DVector3, DVector3))
- uid: Vim.Math3d.DAABox.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Implicit_
  commentId: Overload:Vim.Math3d.DAABox.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DAABox.Implicit
  fullName.vb: Vim.Math3d.DAABox.Widening
  nameWithType: DAABox.Implicit
  nameWithType.vb: DAABox.Widening
- uid: Vim.Math3d.DAABox.op_Inequality(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: Inequality(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Inequality_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_Inequality(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.Inequality(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.Inequality(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Inequality_
  commentId: Overload:Vim.Math3d.DAABox.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Inequality
  nameWithType: DAABox.Inequality
- uid: Vim.Math3d.DAABox.op_LessThan(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: LessThan(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_LessThan_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_LessThan(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.LessThan(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.LessThan(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_LessThan_
  commentId: Overload:Vim.Math3d.DAABox.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.LessThan
  nameWithType: DAABox.LessThan
- uid: Vim.Math3d.DAABox.op_LessThanOrEqual(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: LessThanOrEqual(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_LessThanOrEqual_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_LessThanOrEqual(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.LessThanOrEqual(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.LessThanOrEqual(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.DAABox.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.LessThanOrEqual
  nameWithType: DAABox.LessThanOrEqual
- uid: Vim.Math3d.DAABox.op_Subtraction(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  name: Subtraction(DAABox, DAABox)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Subtraction_Vim_Math3d_DAABox_Vim_Math3d_DAABox_
  commentId: M:Vim.Math3d.DAABox.op_Subtraction(Vim.Math3d.DAABox,Vim.Math3d.DAABox)
  fullName: Vim.Math3d.DAABox.Subtraction(Vim.Math3d.DAABox, Vim.Math3d.DAABox)
  nameWithType: DAABox.Subtraction(DAABox, DAABox)
- uid: Vim.Math3d.DAABox.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_op_Subtraction_
  commentId: Overload:Vim.Math3d.DAABox.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.Subtraction
  nameWithType: DAABox.Subtraction
- uid: Vim.Math3d.DAABox.SetMax(Vim.Math3d.DVector3)
  name: SetMax(DVector3)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_SetMax_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DAABox.SetMax(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DAABox.SetMax(Vim.Math3d.DVector3)
  nameWithType: DAABox.SetMax(DVector3)
- uid: Vim.Math3d.DAABox.SetMax*
  name: SetMax
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_SetMax_
  commentId: Overload:Vim.Math3d.DAABox.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.SetMax
  nameWithType: DAABox.SetMax
- uid: Vim.Math3d.DAABox.SetMin(Vim.Math3d.DVector3)
  name: SetMin(DVector3)
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_SetMin_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DAABox.SetMin(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DAABox.SetMin(Vim.Math3d.DVector3)
  nameWithType: DAABox.SetMin(DVector3)
- uid: Vim.Math3d.DAABox.SetMin*
  name: SetMin
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_SetMin_
  commentId: Overload:Vim.Math3d.DAABox.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.SetMin
  nameWithType: DAABox.SetMin
- uid: Vim.Math3d.DAABox.ToString
  name: ToString()
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_ToString
  commentId: M:Vim.Math3d.DAABox.ToString
  fullName: Vim.Math3d.DAABox.ToString()
  nameWithType: DAABox.ToString()
- uid: Vim.Math3d.DAABox.ToString*
  name: ToString
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_ToString_
  commentId: Overload:Vim.Math3d.DAABox.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DAABox.ToString
  nameWithType: DAABox.ToString
- uid: Vim.Math3d.DAABox.Zero
  name: Zero
  href: api/Vim.Math3d.DAABox.html#Vim_Math3d_DAABox_Zero
  commentId: F:Vim.Math3d.DAABox.Zero
  fullName: Vim.Math3d.DAABox.Zero
  nameWithType: DAABox.Zero
- uid: Vim.Math3d.DAABox2D
  name: DAABox2D
  href: api/Vim.Math3d.DAABox2D.html
  commentId: T:Vim.Math3d.DAABox2D
  fullName: Vim.Math3d.DAABox2D
  nameWithType: DAABox2D
- uid: Vim.Math3d.DAABox2D.#ctor(System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2})
  name: DAABox2D((DVector2 min, DVector2 max))
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D__ctor_System_ValueTuple_Vim_Math3d_DVector2_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.DAABox2D.#ctor(System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2})
  name.vb: DAABox2D((min As DVector2, max As DVector2)(Of DVector2, DVector2))
  fullName: Vim.Math3d.DAABox2D.DAABox2D(System.ValueTuple<Vim.Math3d.DVector2, Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.DAABox2D.DAABox2D(System.ValueTuple(Of Vim.Math3d.DVector2, Vim.Math3d.DVector2))
  nameWithType: DAABox2D.DAABox2D((DVector2 min, DVector2 max))
  nameWithType.vb: DAABox2D.DAABox2D((min As DVector2, max As DVector2)(Of DVector2, DVector2))
- uid: Vim.Math3d.DAABox2D.#ctor(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: DAABox2D(DVector2, DVector2)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D__ctor_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DAABox2D.#ctor(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DAABox2D.DAABox2D(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DAABox2D.DAABox2D(DVector2, DVector2)
- uid: Vim.Math3d.DAABox2D.#ctor*
  name: DAABox2D
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D__ctor_
  commentId: Overload:Vim.Math3d.DAABox2D.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.DAABox2D
  nameWithType: DAABox2D.DAABox2D
- uid: Vim.Math3d.DAABox2D.AlmostEquals(Vim.Math3d.DAABox2D,System.Single)
  name: AlmostEquals(DAABox2D, Single)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_AlmostEquals_Vim_Math3d_DAABox2D_System_Single_
  commentId: M:Vim.Math3d.DAABox2D.AlmostEquals(Vim.Math3d.DAABox2D,System.Single)
  fullName: Vim.Math3d.DAABox2D.AlmostEquals(Vim.Math3d.DAABox2D, System.Single)
  nameWithType: DAABox2D.AlmostEquals(DAABox2D, Single)
- uid: Vim.Math3d.DAABox2D.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_AlmostEquals_
  commentId: Overload:Vim.Math3d.DAABox2D.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.AlmostEquals
  nameWithType: DAABox2D.AlmostEquals
- uid: Vim.Math3d.DAABox2D.Center
  name: Center
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Center
  commentId: P:Vim.Math3d.DAABox2D.Center
  fullName: Vim.Math3d.DAABox2D.Center
  nameWithType: DAABox2D.Center
- uid: Vim.Math3d.DAABox2D.Center*
  name: Center
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Center_
  commentId: Overload:Vim.Math3d.DAABox2D.Center
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Center
  nameWithType: DAABox2D.Center
- uid: Vim.Math3d.DAABox2D.CompareTo(Vim.Math3d.DAABox2D)
  name: CompareTo(DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_CompareTo_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.CompareTo(Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.CompareTo(Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.CompareTo(DAABox2D)
- uid: Vim.Math3d.DAABox2D.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_CompareTo_
  commentId: Overload:Vim.Math3d.DAABox2D.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.CompareTo
  nameWithType: DAABox2D.CompareTo
- uid: Vim.Math3d.DAABox2D.Create(System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2})
  name: Create((DVector2 min, DVector2 max))
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Create_System_ValueTuple_Vim_Math3d_DVector2_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.DAABox2D.Create(System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2})
  name.vb: Create((min As DVector2, max As DVector2)(Of DVector2, DVector2))
  fullName: Vim.Math3d.DAABox2D.Create(System.ValueTuple<Vim.Math3d.DVector2, Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.DAABox2D.Create(System.ValueTuple(Of Vim.Math3d.DVector2, Vim.Math3d.DVector2))
  nameWithType: DAABox2D.Create((DVector2 min, DVector2 max))
  nameWithType.vb: DAABox2D.Create((min As DVector2, max As DVector2)(Of DVector2, DVector2))
- uid: Vim.Math3d.DAABox2D.Create(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Create(DVector2, DVector2)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Create_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DAABox2D.Create(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DAABox2D.Create(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DAABox2D.Create(DVector2, DVector2)
- uid: Vim.Math3d.DAABox2D.Create*
  name: Create
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Create_
  commentId: Overload:Vim.Math3d.DAABox2D.Create
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Create
  nameWithType: DAABox2D.Create
- uid: Vim.Math3d.DAABox2D.Deconstruct(Vim.Math3d.DVector2@,Vim.Math3d.DVector2@)
  name: Deconstruct(out DVector2, out DVector2)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Deconstruct_Vim_Math3d_DVector2__Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.DAABox2D.Deconstruct(Vim.Math3d.DVector2@,Vim.Math3d.DVector2@)
  name.vb: Deconstruct(ByRef DVector2, ByRef DVector2)
  fullName: Vim.Math3d.DAABox2D.Deconstruct(out Vim.Math3d.DVector2, out Vim.Math3d.DVector2)
  fullName.vb: Vim.Math3d.DAABox2D.Deconstruct(ByRef Vim.Math3d.DVector2, ByRef Vim.Math3d.DVector2)
  nameWithType: DAABox2D.Deconstruct(out DVector2, out DVector2)
  nameWithType.vb: DAABox2D.Deconstruct(ByRef DVector2, ByRef DVector2)
- uid: Vim.Math3d.DAABox2D.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Deconstruct_
  commentId: Overload:Vim.Math3d.DAABox2D.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Deconstruct
  nameWithType: DAABox2D.Deconstruct
- uid: Vim.Math3d.DAABox2D.Empty
  name: Empty
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Empty
  commentId: F:Vim.Math3d.DAABox2D.Empty
  fullName: Vim.Math3d.DAABox2D.Empty
  nameWithType: DAABox2D.Empty
- uid: Vim.Math3d.DAABox2D.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Equals_System_Object_
  commentId: M:Vim.Math3d.DAABox2D.Equals(System.Object)
  fullName: Vim.Math3d.DAABox2D.Equals(System.Object)
  nameWithType: DAABox2D.Equals(Object)
- uid: Vim.Math3d.DAABox2D.Equals(Vim.Math3d.DAABox2D)
  name: Equals(DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Equals_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.Equals(Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Equals(Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Equals(DAABox2D)
- uid: Vim.Math3d.DAABox2D.Equals*
  name: Equals
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Equals_
  commentId: Overload:Vim.Math3d.DAABox2D.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Equals
  nameWithType: DAABox2D.Equals
- uid: Vim.Math3d.DAABox2D.Extent
  name: Extent
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Extent
  commentId: P:Vim.Math3d.DAABox2D.Extent
  fullName: Vim.Math3d.DAABox2D.Extent
  nameWithType: DAABox2D.Extent
- uid: Vim.Math3d.DAABox2D.Extent*
  name: Extent
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Extent_
  commentId: Overload:Vim.Math3d.DAABox2D.Extent
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Extent
  nameWithType: DAABox2D.Extent
- uid: Vim.Math3d.DAABox2D.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_GetHashCode
  commentId: M:Vim.Math3d.DAABox2D.GetHashCode
  fullName: Vim.Math3d.DAABox2D.GetHashCode()
  nameWithType: DAABox2D.GetHashCode()
- uid: Vim.Math3d.DAABox2D.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_GetHashCode_
  commentId: Overload:Vim.Math3d.DAABox2D.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.GetHashCode
  nameWithType: DAABox2D.GetHashCode
- uid: Vim.Math3d.DAABox2D.Intersection(Vim.Math3d.DAABox2D)
  name: Intersection(DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Intersection_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.Intersection(Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Intersection(Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Intersection(DAABox2D)
- uid: Vim.Math3d.DAABox2D.Intersection*
  name: Intersection
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Intersection_
  commentId: Overload:Vim.Math3d.DAABox2D.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Intersection
  nameWithType: DAABox2D.Intersection
- uid: Vim.Math3d.DAABox2D.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_IsInfinity
  commentId: M:Vim.Math3d.DAABox2D.IsInfinity
  fullName: Vim.Math3d.DAABox2D.IsInfinity()
  nameWithType: DAABox2D.IsInfinity()
- uid: Vim.Math3d.DAABox2D.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_IsInfinity_
  commentId: Overload:Vim.Math3d.DAABox2D.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.IsInfinity
  nameWithType: DAABox2D.IsInfinity
- uid: Vim.Math3d.DAABox2D.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_IsNaN
  commentId: M:Vim.Math3d.DAABox2D.IsNaN
  fullName: Vim.Math3d.DAABox2D.IsNaN()
  nameWithType: DAABox2D.IsNaN()
- uid: Vim.Math3d.DAABox2D.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_IsNaN_
  commentId: Overload:Vim.Math3d.DAABox2D.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.IsNaN
  nameWithType: DAABox2D.IsNaN
- uid: Vim.Math3d.DAABox2D.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Magnitude
  commentId: M:Vim.Math3d.DAABox2D.Magnitude
  fullName: Vim.Math3d.DAABox2D.Magnitude()
  nameWithType: DAABox2D.Magnitude()
- uid: Vim.Math3d.DAABox2D.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Magnitude_
  commentId: Overload:Vim.Math3d.DAABox2D.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Magnitude
  nameWithType: DAABox2D.Magnitude
- uid: Vim.Math3d.DAABox2D.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_MagnitudeSquared
  commentId: M:Vim.Math3d.DAABox2D.MagnitudeSquared
  fullName: Vim.Math3d.DAABox2D.MagnitudeSquared()
  nameWithType: DAABox2D.MagnitudeSquared()
- uid: Vim.Math3d.DAABox2D.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.DAABox2D.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.MagnitudeSquared
  nameWithType: DAABox2D.MagnitudeSquared
- uid: Vim.Math3d.DAABox2D.Max
  name: Max
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Max
  commentId: F:Vim.Math3d.DAABox2D.Max
  fullName: Vim.Math3d.DAABox2D.Max
  nameWithType: DAABox2D.Max
- uid: Vim.Math3d.DAABox2D.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_MaxValue
  commentId: F:Vim.Math3d.DAABox2D.MaxValue
  fullName: Vim.Math3d.DAABox2D.MaxValue
  nameWithType: DAABox2D.MaxValue
- uid: Vim.Math3d.DAABox2D.Merge(Vim.Math3d.DAABox2D)
  name: Merge(DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Merge_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.Merge(Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Merge(Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Merge(DAABox2D)
- uid: Vim.Math3d.DAABox2D.Merge(Vim.Math3d.DVector2)
  name: Merge(DVector2)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Merge_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DAABox2D.Merge(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DAABox2D.Merge(Vim.Math3d.DVector2)
  nameWithType: DAABox2D.Merge(DVector2)
- uid: Vim.Math3d.DAABox2D.Merge*
  name: Merge
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Merge_
  commentId: Overload:Vim.Math3d.DAABox2D.Merge
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Merge
  nameWithType: DAABox2D.Merge
- uid: Vim.Math3d.DAABox2D.Min
  name: Min
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Min
  commentId: F:Vim.Math3d.DAABox2D.Min
  fullName: Vim.Math3d.DAABox2D.Min
  nameWithType: DAABox2D.Min
- uid: Vim.Math3d.DAABox2D.MinValue
  name: MinValue
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_MinValue
  commentId: F:Vim.Math3d.DAABox2D.MinValue
  fullName: Vim.Math3d.DAABox2D.MinValue
  nameWithType: DAABox2D.MinValue
- uid: Vim.Math3d.DAABox2D.op_Addition(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: Addition(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Addition_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_Addition(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Addition(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Addition(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_Addition(Vim.Math3d.DAABox2D,Vim.Math3d.DVector2)
  name: Addition(DAABox2D, DVector2)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Addition_Vim_Math3d_DAABox2D_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DAABox2D.op_Addition(Vim.Math3d.DAABox2D,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DAABox2D.Addition(Vim.Math3d.DAABox2D, Vim.Math3d.DVector2)
  nameWithType: DAABox2D.Addition(DAABox2D, DVector2)
- uid: Vim.Math3d.DAABox2D.op_Addition*
  name: Addition
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Addition_
  commentId: Overload:Vim.Math3d.DAABox2D.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Addition
  nameWithType: DAABox2D.Addition
- uid: Vim.Math3d.DAABox2D.op_Equality(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: Equality(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Equality_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_Equality(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Equality(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Equality(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Equality_
  commentId: Overload:Vim.Math3d.DAABox2D.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Equality
  nameWithType: DAABox2D.Equality
- uid: Vim.Math3d.DAABox2D.op_GreaterThan(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: GreaterThan(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_GreaterThan_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_GreaterThan(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.GreaterThan(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.GreaterThan(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_GreaterThan_
  commentId: Overload:Vim.Math3d.DAABox2D.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.GreaterThan
  nameWithType: DAABox2D.GreaterThan
- uid: Vim.Math3d.DAABox2D.op_GreaterThanOrEqual(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: GreaterThanOrEqual(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_GreaterThanOrEqual_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_GreaterThanOrEqual(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.GreaterThanOrEqual(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.GreaterThanOrEqual(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.DAABox2D.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.GreaterThanOrEqual
  nameWithType: DAABox2D.GreaterThanOrEqual
- uid: Vim.Math3d.DAABox2D.op_Implicit(System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2})~Vim.Math3d.DAABox2D
  name: Implicit((DVector2 min, DVector2 max) to DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Implicit_System_ValueTuple_Vim_Math3d_DVector2_Vim_Math3d_DVector2___Vim_Math3d_DAABox2D
  commentId: M:Vim.Math3d.DAABox2D.op_Implicit(System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2})~Vim.Math3d.DAABox2D
  name.vb: Widening((min As DVector2, max As DVector2)(Of DVector2, DVector2) to DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Implicit(System.ValueTuple<Vim.Math3d.DVector2, Vim.Math3d.DVector2> to Vim.Math3d.DAABox2D)
  fullName.vb: Vim.Math3d.DAABox2D.Widening(System.ValueTuple(Of Vim.Math3d.DVector2, Vim.Math3d.DVector2) to Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Implicit((DVector2 min, DVector2 max) to DAABox2D)
  nameWithType.vb: DAABox2D.Widening((min As DVector2, max As DVector2)(Of DVector2, DVector2) to DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_Implicit(Vim.Math3d.DAABox2D)~System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2}
  name: Implicit(DAABox2D to (DVector2 min, DVector2 max))
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Implicit_Vim_Math3d_DAABox2D__System_ValueTuple_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DAABox2D.op_Implicit(Vim.Math3d.DAABox2D)~System.ValueTuple{Vim.Math3d.DVector2,Vim.Math3d.DVector2}
  name.vb: Widening(DAABox2D to (min As DVector2, max As DVector2)(Of DVector2, DVector2))
  fullName: Vim.Math3d.DAABox2D.Implicit(Vim.Math3d.DAABox2D to System.ValueTuple<Vim.Math3d.DVector2, Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.DAABox2D.Widening(Vim.Math3d.DAABox2D to System.ValueTuple(Of Vim.Math3d.DVector2, Vim.Math3d.DVector2))
  nameWithType: DAABox2D.Implicit(DAABox2D to (DVector2 min, DVector2 max))
  nameWithType.vb: DAABox2D.Widening(DAABox2D to (min As DVector2, max As DVector2)(Of DVector2, DVector2))
- uid: Vim.Math3d.DAABox2D.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Implicit_
  commentId: Overload:Vim.Math3d.DAABox2D.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DAABox2D.Implicit
  fullName.vb: Vim.Math3d.DAABox2D.Widening
  nameWithType: DAABox2D.Implicit
  nameWithType.vb: DAABox2D.Widening
- uid: Vim.Math3d.DAABox2D.op_Inequality(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: Inequality(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Inequality_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_Inequality(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Inequality(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Inequality(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Inequality_
  commentId: Overload:Vim.Math3d.DAABox2D.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Inequality
  nameWithType: DAABox2D.Inequality
- uid: Vim.Math3d.DAABox2D.op_LessThan(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: LessThan(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_LessThan_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_LessThan(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.LessThan(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.LessThan(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_LessThan_
  commentId: Overload:Vim.Math3d.DAABox2D.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.LessThan
  nameWithType: DAABox2D.LessThan
- uid: Vim.Math3d.DAABox2D.op_LessThanOrEqual(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: LessThanOrEqual(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_LessThanOrEqual_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_LessThanOrEqual(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.LessThanOrEqual(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.LessThanOrEqual(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.DAABox2D.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.LessThanOrEqual
  nameWithType: DAABox2D.LessThanOrEqual
- uid: Vim.Math3d.DAABox2D.op_Subtraction(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  name: Subtraction(DAABox2D, DAABox2D)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Subtraction_Vim_Math3d_DAABox2D_Vim_Math3d_DAABox2D_
  commentId: M:Vim.Math3d.DAABox2D.op_Subtraction(Vim.Math3d.DAABox2D,Vim.Math3d.DAABox2D)
  fullName: Vim.Math3d.DAABox2D.Subtraction(Vim.Math3d.DAABox2D, Vim.Math3d.DAABox2D)
  nameWithType: DAABox2D.Subtraction(DAABox2D, DAABox2D)
- uid: Vim.Math3d.DAABox2D.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_op_Subtraction_
  commentId: Overload:Vim.Math3d.DAABox2D.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.Subtraction
  nameWithType: DAABox2D.Subtraction
- uid: Vim.Math3d.DAABox2D.SetMax(Vim.Math3d.DVector2)
  name: SetMax(DVector2)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_SetMax_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DAABox2D.SetMax(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DAABox2D.SetMax(Vim.Math3d.DVector2)
  nameWithType: DAABox2D.SetMax(DVector2)
- uid: Vim.Math3d.DAABox2D.SetMax*
  name: SetMax
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_SetMax_
  commentId: Overload:Vim.Math3d.DAABox2D.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.SetMax
  nameWithType: DAABox2D.SetMax
- uid: Vim.Math3d.DAABox2D.SetMin(Vim.Math3d.DVector2)
  name: SetMin(DVector2)
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_SetMin_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DAABox2D.SetMin(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DAABox2D.SetMin(Vim.Math3d.DVector2)
  nameWithType: DAABox2D.SetMin(DVector2)
- uid: Vim.Math3d.DAABox2D.SetMin*
  name: SetMin
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_SetMin_
  commentId: Overload:Vim.Math3d.DAABox2D.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.SetMin
  nameWithType: DAABox2D.SetMin
- uid: Vim.Math3d.DAABox2D.ToString
  name: ToString()
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_ToString
  commentId: M:Vim.Math3d.DAABox2D.ToString
  fullName: Vim.Math3d.DAABox2D.ToString()
  nameWithType: DAABox2D.ToString()
- uid: Vim.Math3d.DAABox2D.ToString*
  name: ToString
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_ToString_
  commentId: Overload:Vim.Math3d.DAABox2D.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DAABox2D.ToString
  nameWithType: DAABox2D.ToString
- uid: Vim.Math3d.DAABox2D.Zero
  name: Zero
  href: api/Vim.Math3d.DAABox2D.html#Vim_Math3d_DAABox2D_Zero
  commentId: F:Vim.Math3d.DAABox2D.Zero
  fullName: Vim.Math3d.DAABox2D.Zero
  nameWithType: DAABox2D.Zero
- uid: Vim.Math3d.DAABox4D
  name: DAABox4D
  href: api/Vim.Math3d.DAABox4D.html
  commentId: T:Vim.Math3d.DAABox4D
  fullName: Vim.Math3d.DAABox4D
  nameWithType: DAABox4D
- uid: Vim.Math3d.DAABox4D.#ctor(System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4})
  name: DAABox4D((DVector4 min, DVector4 max))
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D__ctor_System_ValueTuple_Vim_Math3d_DVector4_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.DAABox4D.#ctor(System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4})
  name.vb: DAABox4D((min As DVector4, max As DVector4)(Of DVector4, DVector4))
  fullName: Vim.Math3d.DAABox4D.DAABox4D(System.ValueTuple<Vim.Math3d.DVector4, Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.DAABox4D.DAABox4D(System.ValueTuple(Of Vim.Math3d.DVector4, Vim.Math3d.DVector4))
  nameWithType: DAABox4D.DAABox4D((DVector4 min, DVector4 max))
  nameWithType.vb: DAABox4D.DAABox4D((min As DVector4, max As DVector4)(Of DVector4, DVector4))
- uid: Vim.Math3d.DAABox4D.#ctor(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: DAABox4D(DVector4, DVector4)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D__ctor_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DAABox4D.#ctor(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DAABox4D.DAABox4D(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DAABox4D.DAABox4D(DVector4, DVector4)
- uid: Vim.Math3d.DAABox4D.#ctor*
  name: DAABox4D
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D__ctor_
  commentId: Overload:Vim.Math3d.DAABox4D.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.DAABox4D
  nameWithType: DAABox4D.DAABox4D
- uid: Vim.Math3d.DAABox4D.AlmostEquals(Vim.Math3d.DAABox4D,System.Single)
  name: AlmostEquals(DAABox4D, Single)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_AlmostEquals_Vim_Math3d_DAABox4D_System_Single_
  commentId: M:Vim.Math3d.DAABox4D.AlmostEquals(Vim.Math3d.DAABox4D,System.Single)
  fullName: Vim.Math3d.DAABox4D.AlmostEquals(Vim.Math3d.DAABox4D, System.Single)
  nameWithType: DAABox4D.AlmostEquals(DAABox4D, Single)
- uid: Vim.Math3d.DAABox4D.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_AlmostEquals_
  commentId: Overload:Vim.Math3d.DAABox4D.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.AlmostEquals
  nameWithType: DAABox4D.AlmostEquals
- uid: Vim.Math3d.DAABox4D.Center
  name: Center
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Center
  commentId: P:Vim.Math3d.DAABox4D.Center
  fullName: Vim.Math3d.DAABox4D.Center
  nameWithType: DAABox4D.Center
- uid: Vim.Math3d.DAABox4D.Center*
  name: Center
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Center_
  commentId: Overload:Vim.Math3d.DAABox4D.Center
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Center
  nameWithType: DAABox4D.Center
- uid: Vim.Math3d.DAABox4D.CompareTo(Vim.Math3d.DAABox4D)
  name: CompareTo(DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_CompareTo_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.CompareTo(Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.CompareTo(Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.CompareTo(DAABox4D)
- uid: Vim.Math3d.DAABox4D.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_CompareTo_
  commentId: Overload:Vim.Math3d.DAABox4D.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.CompareTo
  nameWithType: DAABox4D.CompareTo
- uid: Vim.Math3d.DAABox4D.Create(System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4})
  name: Create((DVector4 min, DVector4 max))
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Create_System_ValueTuple_Vim_Math3d_DVector4_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.DAABox4D.Create(System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4})
  name.vb: Create((min As DVector4, max As DVector4)(Of DVector4, DVector4))
  fullName: Vim.Math3d.DAABox4D.Create(System.ValueTuple<Vim.Math3d.DVector4, Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.DAABox4D.Create(System.ValueTuple(Of Vim.Math3d.DVector4, Vim.Math3d.DVector4))
  nameWithType: DAABox4D.Create((DVector4 min, DVector4 max))
  nameWithType.vb: DAABox4D.Create((min As DVector4, max As DVector4)(Of DVector4, DVector4))
- uid: Vim.Math3d.DAABox4D.Create(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Create(DVector4, DVector4)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Create_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DAABox4D.Create(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DAABox4D.Create(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DAABox4D.Create(DVector4, DVector4)
- uid: Vim.Math3d.DAABox4D.Create*
  name: Create
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Create_
  commentId: Overload:Vim.Math3d.DAABox4D.Create
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Create
  nameWithType: DAABox4D.Create
- uid: Vim.Math3d.DAABox4D.Deconstruct(Vim.Math3d.DVector4@,Vim.Math3d.DVector4@)
  name: Deconstruct(out DVector4, out DVector4)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Deconstruct_Vim_Math3d_DVector4__Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.DAABox4D.Deconstruct(Vim.Math3d.DVector4@,Vim.Math3d.DVector4@)
  name.vb: Deconstruct(ByRef DVector4, ByRef DVector4)
  fullName: Vim.Math3d.DAABox4D.Deconstruct(out Vim.Math3d.DVector4, out Vim.Math3d.DVector4)
  fullName.vb: Vim.Math3d.DAABox4D.Deconstruct(ByRef Vim.Math3d.DVector4, ByRef Vim.Math3d.DVector4)
  nameWithType: DAABox4D.Deconstruct(out DVector4, out DVector4)
  nameWithType.vb: DAABox4D.Deconstruct(ByRef DVector4, ByRef DVector4)
- uid: Vim.Math3d.DAABox4D.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Deconstruct_
  commentId: Overload:Vim.Math3d.DAABox4D.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Deconstruct
  nameWithType: DAABox4D.Deconstruct
- uid: Vim.Math3d.DAABox4D.Empty
  name: Empty
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Empty
  commentId: F:Vim.Math3d.DAABox4D.Empty
  fullName: Vim.Math3d.DAABox4D.Empty
  nameWithType: DAABox4D.Empty
- uid: Vim.Math3d.DAABox4D.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Equals_System_Object_
  commentId: M:Vim.Math3d.DAABox4D.Equals(System.Object)
  fullName: Vim.Math3d.DAABox4D.Equals(System.Object)
  nameWithType: DAABox4D.Equals(Object)
- uid: Vim.Math3d.DAABox4D.Equals(Vim.Math3d.DAABox4D)
  name: Equals(DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Equals_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.Equals(Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Equals(Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Equals(DAABox4D)
- uid: Vim.Math3d.DAABox4D.Equals*
  name: Equals
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Equals_
  commentId: Overload:Vim.Math3d.DAABox4D.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Equals
  nameWithType: DAABox4D.Equals
- uid: Vim.Math3d.DAABox4D.Extent
  name: Extent
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Extent
  commentId: P:Vim.Math3d.DAABox4D.Extent
  fullName: Vim.Math3d.DAABox4D.Extent
  nameWithType: DAABox4D.Extent
- uid: Vim.Math3d.DAABox4D.Extent*
  name: Extent
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Extent_
  commentId: Overload:Vim.Math3d.DAABox4D.Extent
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Extent
  nameWithType: DAABox4D.Extent
- uid: Vim.Math3d.DAABox4D.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_GetHashCode
  commentId: M:Vim.Math3d.DAABox4D.GetHashCode
  fullName: Vim.Math3d.DAABox4D.GetHashCode()
  nameWithType: DAABox4D.GetHashCode()
- uid: Vim.Math3d.DAABox4D.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_GetHashCode_
  commentId: Overload:Vim.Math3d.DAABox4D.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.GetHashCode
  nameWithType: DAABox4D.GetHashCode
- uid: Vim.Math3d.DAABox4D.Intersection(Vim.Math3d.DAABox4D)
  name: Intersection(DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Intersection_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.Intersection(Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Intersection(Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Intersection(DAABox4D)
- uid: Vim.Math3d.DAABox4D.Intersection*
  name: Intersection
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Intersection_
  commentId: Overload:Vim.Math3d.DAABox4D.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Intersection
  nameWithType: DAABox4D.Intersection
- uid: Vim.Math3d.DAABox4D.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_IsInfinity
  commentId: M:Vim.Math3d.DAABox4D.IsInfinity
  fullName: Vim.Math3d.DAABox4D.IsInfinity()
  nameWithType: DAABox4D.IsInfinity()
- uid: Vim.Math3d.DAABox4D.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_IsInfinity_
  commentId: Overload:Vim.Math3d.DAABox4D.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.IsInfinity
  nameWithType: DAABox4D.IsInfinity
- uid: Vim.Math3d.DAABox4D.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_IsNaN
  commentId: M:Vim.Math3d.DAABox4D.IsNaN
  fullName: Vim.Math3d.DAABox4D.IsNaN()
  nameWithType: DAABox4D.IsNaN()
- uid: Vim.Math3d.DAABox4D.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_IsNaN_
  commentId: Overload:Vim.Math3d.DAABox4D.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.IsNaN
  nameWithType: DAABox4D.IsNaN
- uid: Vim.Math3d.DAABox4D.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Magnitude
  commentId: M:Vim.Math3d.DAABox4D.Magnitude
  fullName: Vim.Math3d.DAABox4D.Magnitude()
  nameWithType: DAABox4D.Magnitude()
- uid: Vim.Math3d.DAABox4D.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Magnitude_
  commentId: Overload:Vim.Math3d.DAABox4D.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Magnitude
  nameWithType: DAABox4D.Magnitude
- uid: Vim.Math3d.DAABox4D.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_MagnitudeSquared
  commentId: M:Vim.Math3d.DAABox4D.MagnitudeSquared
  fullName: Vim.Math3d.DAABox4D.MagnitudeSquared()
  nameWithType: DAABox4D.MagnitudeSquared()
- uid: Vim.Math3d.DAABox4D.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.DAABox4D.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.MagnitudeSquared
  nameWithType: DAABox4D.MagnitudeSquared
- uid: Vim.Math3d.DAABox4D.Max
  name: Max
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Max
  commentId: F:Vim.Math3d.DAABox4D.Max
  fullName: Vim.Math3d.DAABox4D.Max
  nameWithType: DAABox4D.Max
- uid: Vim.Math3d.DAABox4D.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_MaxValue
  commentId: F:Vim.Math3d.DAABox4D.MaxValue
  fullName: Vim.Math3d.DAABox4D.MaxValue
  nameWithType: DAABox4D.MaxValue
- uid: Vim.Math3d.DAABox4D.Merge(Vim.Math3d.DAABox4D)
  name: Merge(DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Merge_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.Merge(Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Merge(Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Merge(DAABox4D)
- uid: Vim.Math3d.DAABox4D.Merge(Vim.Math3d.DVector4)
  name: Merge(DVector4)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Merge_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DAABox4D.Merge(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DAABox4D.Merge(Vim.Math3d.DVector4)
  nameWithType: DAABox4D.Merge(DVector4)
- uid: Vim.Math3d.DAABox4D.Merge*
  name: Merge
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Merge_
  commentId: Overload:Vim.Math3d.DAABox4D.Merge
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Merge
  nameWithType: DAABox4D.Merge
- uid: Vim.Math3d.DAABox4D.Min
  name: Min
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Min
  commentId: F:Vim.Math3d.DAABox4D.Min
  fullName: Vim.Math3d.DAABox4D.Min
  nameWithType: DAABox4D.Min
- uid: Vim.Math3d.DAABox4D.MinValue
  name: MinValue
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_MinValue
  commentId: F:Vim.Math3d.DAABox4D.MinValue
  fullName: Vim.Math3d.DAABox4D.MinValue
  nameWithType: DAABox4D.MinValue
- uid: Vim.Math3d.DAABox4D.op_Addition(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: Addition(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Addition_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_Addition(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Addition(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Addition(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_Addition(Vim.Math3d.DAABox4D,Vim.Math3d.DVector4)
  name: Addition(DAABox4D, DVector4)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Addition_Vim_Math3d_DAABox4D_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DAABox4D.op_Addition(Vim.Math3d.DAABox4D,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DAABox4D.Addition(Vim.Math3d.DAABox4D, Vim.Math3d.DVector4)
  nameWithType: DAABox4D.Addition(DAABox4D, DVector4)
- uid: Vim.Math3d.DAABox4D.op_Addition*
  name: Addition
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Addition_
  commentId: Overload:Vim.Math3d.DAABox4D.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Addition
  nameWithType: DAABox4D.Addition
- uid: Vim.Math3d.DAABox4D.op_Equality(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: Equality(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Equality_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_Equality(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Equality(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Equality(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Equality_
  commentId: Overload:Vim.Math3d.DAABox4D.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Equality
  nameWithType: DAABox4D.Equality
- uid: Vim.Math3d.DAABox4D.op_GreaterThan(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: GreaterThan(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_GreaterThan_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_GreaterThan(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.GreaterThan(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.GreaterThan(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_GreaterThan_
  commentId: Overload:Vim.Math3d.DAABox4D.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.GreaterThan
  nameWithType: DAABox4D.GreaterThan
- uid: Vim.Math3d.DAABox4D.op_GreaterThanOrEqual(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: GreaterThanOrEqual(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_GreaterThanOrEqual_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_GreaterThanOrEqual(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.GreaterThanOrEqual(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.GreaterThanOrEqual(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.DAABox4D.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.GreaterThanOrEqual
  nameWithType: DAABox4D.GreaterThanOrEqual
- uid: Vim.Math3d.DAABox4D.op_Implicit(System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4})~Vim.Math3d.DAABox4D
  name: Implicit((DVector4 min, DVector4 max) to DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Implicit_System_ValueTuple_Vim_Math3d_DVector4_Vim_Math3d_DVector4___Vim_Math3d_DAABox4D
  commentId: M:Vim.Math3d.DAABox4D.op_Implicit(System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4})~Vim.Math3d.DAABox4D
  name.vb: Widening((min As DVector4, max As DVector4)(Of DVector4, DVector4) to DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Implicit(System.ValueTuple<Vim.Math3d.DVector4, Vim.Math3d.DVector4> to Vim.Math3d.DAABox4D)
  fullName.vb: Vim.Math3d.DAABox4D.Widening(System.ValueTuple(Of Vim.Math3d.DVector4, Vim.Math3d.DVector4) to Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Implicit((DVector4 min, DVector4 max) to DAABox4D)
  nameWithType.vb: DAABox4D.Widening((min As DVector4, max As DVector4)(Of DVector4, DVector4) to DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_Implicit(Vim.Math3d.DAABox4D)~System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4}
  name: Implicit(DAABox4D to (DVector4 min, DVector4 max))
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Implicit_Vim_Math3d_DAABox4D__System_ValueTuple_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DAABox4D.op_Implicit(Vim.Math3d.DAABox4D)~System.ValueTuple{Vim.Math3d.DVector4,Vim.Math3d.DVector4}
  name.vb: Widening(DAABox4D to (min As DVector4, max As DVector4)(Of DVector4, DVector4))
  fullName: Vim.Math3d.DAABox4D.Implicit(Vim.Math3d.DAABox4D to System.ValueTuple<Vim.Math3d.DVector4, Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.DAABox4D.Widening(Vim.Math3d.DAABox4D to System.ValueTuple(Of Vim.Math3d.DVector4, Vim.Math3d.DVector4))
  nameWithType: DAABox4D.Implicit(DAABox4D to (DVector4 min, DVector4 max))
  nameWithType.vb: DAABox4D.Widening(DAABox4D to (min As DVector4, max As DVector4)(Of DVector4, DVector4))
- uid: Vim.Math3d.DAABox4D.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Implicit_
  commentId: Overload:Vim.Math3d.DAABox4D.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DAABox4D.Implicit
  fullName.vb: Vim.Math3d.DAABox4D.Widening
  nameWithType: DAABox4D.Implicit
  nameWithType.vb: DAABox4D.Widening
- uid: Vim.Math3d.DAABox4D.op_Inequality(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: Inequality(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Inequality_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_Inequality(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Inequality(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Inequality(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Inequality_
  commentId: Overload:Vim.Math3d.DAABox4D.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Inequality
  nameWithType: DAABox4D.Inequality
- uid: Vim.Math3d.DAABox4D.op_LessThan(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: LessThan(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_LessThan_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_LessThan(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.LessThan(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.LessThan(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_LessThan_
  commentId: Overload:Vim.Math3d.DAABox4D.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.LessThan
  nameWithType: DAABox4D.LessThan
- uid: Vim.Math3d.DAABox4D.op_LessThanOrEqual(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: LessThanOrEqual(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_LessThanOrEqual_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_LessThanOrEqual(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.LessThanOrEqual(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.LessThanOrEqual(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.DAABox4D.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.LessThanOrEqual
  nameWithType: DAABox4D.LessThanOrEqual
- uid: Vim.Math3d.DAABox4D.op_Subtraction(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  name: Subtraction(DAABox4D, DAABox4D)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Subtraction_Vim_Math3d_DAABox4D_Vim_Math3d_DAABox4D_
  commentId: M:Vim.Math3d.DAABox4D.op_Subtraction(Vim.Math3d.DAABox4D,Vim.Math3d.DAABox4D)
  fullName: Vim.Math3d.DAABox4D.Subtraction(Vim.Math3d.DAABox4D, Vim.Math3d.DAABox4D)
  nameWithType: DAABox4D.Subtraction(DAABox4D, DAABox4D)
- uid: Vim.Math3d.DAABox4D.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_op_Subtraction_
  commentId: Overload:Vim.Math3d.DAABox4D.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.Subtraction
  nameWithType: DAABox4D.Subtraction
- uid: Vim.Math3d.DAABox4D.SetMax(Vim.Math3d.DVector4)
  name: SetMax(DVector4)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_SetMax_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DAABox4D.SetMax(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DAABox4D.SetMax(Vim.Math3d.DVector4)
  nameWithType: DAABox4D.SetMax(DVector4)
- uid: Vim.Math3d.DAABox4D.SetMax*
  name: SetMax
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_SetMax_
  commentId: Overload:Vim.Math3d.DAABox4D.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.SetMax
  nameWithType: DAABox4D.SetMax
- uid: Vim.Math3d.DAABox4D.SetMin(Vim.Math3d.DVector4)
  name: SetMin(DVector4)
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_SetMin_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DAABox4D.SetMin(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DAABox4D.SetMin(Vim.Math3d.DVector4)
  nameWithType: DAABox4D.SetMin(DVector4)
- uid: Vim.Math3d.DAABox4D.SetMin*
  name: SetMin
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_SetMin_
  commentId: Overload:Vim.Math3d.DAABox4D.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.SetMin
  nameWithType: DAABox4D.SetMin
- uid: Vim.Math3d.DAABox4D.ToString
  name: ToString()
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_ToString
  commentId: M:Vim.Math3d.DAABox4D.ToString
  fullName: Vim.Math3d.DAABox4D.ToString()
  nameWithType: DAABox4D.ToString()
- uid: Vim.Math3d.DAABox4D.ToString*
  name: ToString
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_ToString_
  commentId: Overload:Vim.Math3d.DAABox4D.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DAABox4D.ToString
  nameWithType: DAABox4D.ToString
- uid: Vim.Math3d.DAABox4D.Zero
  name: Zero
  href: api/Vim.Math3d.DAABox4D.html#Vim_Math3d_DAABox4D_Zero
  commentId: F:Vim.Math3d.DAABox4D.Zero
  fullName: Vim.Math3d.DAABox4D.Zero
  nameWithType: DAABox4D.Zero
- uid: Vim.Math3d.DInterval
  name: DInterval
  href: api/Vim.Math3d.DInterval.html
  commentId: T:Vim.Math3d.DInterval
  fullName: Vim.Math3d.DInterval
  nameWithType: DInterval
- uid: Vim.Math3d.DInterval.#ctor(System.Double,System.Double)
  name: DInterval(Double, Double)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval__ctor_System_Double_System_Double_
  commentId: M:Vim.Math3d.DInterval.#ctor(System.Double,System.Double)
  fullName: Vim.Math3d.DInterval.DInterval(System.Double, System.Double)
  nameWithType: DInterval.DInterval(Double, Double)
- uid: Vim.Math3d.DInterval.#ctor(System.ValueTuple{System.Double,System.Double})
  name: DInterval((Double min, Double max))
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval__ctor_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.DInterval.#ctor(System.ValueTuple{System.Double,System.Double})
  name.vb: DInterval((min As Double, max As Double)(Of Double, Double))
  fullName: Vim.Math3d.DInterval.DInterval(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DInterval.DInterval(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: DInterval.DInterval((Double min, Double max))
  nameWithType.vb: DInterval.DInterval((min As Double, max As Double)(Of Double, Double))
- uid: Vim.Math3d.DInterval.#ctor*
  name: DInterval
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval__ctor_
  commentId: Overload:Vim.Math3d.DInterval.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.DInterval
  nameWithType: DInterval.DInterval
- uid: Vim.Math3d.DInterval.AlmostEquals(Vim.Math3d.DInterval,System.Single)
  name: AlmostEquals(DInterval, Single)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_AlmostEquals_Vim_Math3d_DInterval_System_Single_
  commentId: M:Vim.Math3d.DInterval.AlmostEquals(Vim.Math3d.DInterval,System.Single)
  fullName: Vim.Math3d.DInterval.AlmostEquals(Vim.Math3d.DInterval, System.Single)
  nameWithType: DInterval.AlmostEquals(DInterval, Single)
- uid: Vim.Math3d.DInterval.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_AlmostEquals_
  commentId: Overload:Vim.Math3d.DInterval.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.AlmostEquals
  nameWithType: DInterval.AlmostEquals
- uid: Vim.Math3d.DInterval.Center
  name: Center
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Center
  commentId: P:Vim.Math3d.DInterval.Center
  fullName: Vim.Math3d.DInterval.Center
  nameWithType: DInterval.Center
- uid: Vim.Math3d.DInterval.Center*
  name: Center
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Center_
  commentId: Overload:Vim.Math3d.DInterval.Center
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Center
  nameWithType: DInterval.Center
- uid: Vim.Math3d.DInterval.CompareTo(Vim.Math3d.DInterval)
  name: CompareTo(DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_CompareTo_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.CompareTo(Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.CompareTo(Vim.Math3d.DInterval)
  nameWithType: DInterval.CompareTo(DInterval)
- uid: Vim.Math3d.DInterval.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_CompareTo_
  commentId: Overload:Vim.Math3d.DInterval.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.CompareTo
  nameWithType: DInterval.CompareTo
- uid: Vim.Math3d.DInterval.Create(System.Double,System.Double)
  name: Create(Double, Double)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Create_System_Double_System_Double_
  commentId: M:Vim.Math3d.DInterval.Create(System.Double,System.Double)
  fullName: Vim.Math3d.DInterval.Create(System.Double, System.Double)
  nameWithType: DInterval.Create(Double, Double)
- uid: Vim.Math3d.DInterval.Create(System.ValueTuple{System.Double,System.Double})
  name: Create((Double min, Double max))
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Create_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.DInterval.Create(System.ValueTuple{System.Double,System.Double})
  name.vb: Create((min As Double, max As Double)(Of Double, Double))
  fullName: Vim.Math3d.DInterval.Create(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DInterval.Create(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: DInterval.Create((Double min, Double max))
  nameWithType.vb: DInterval.Create((min As Double, max As Double)(Of Double, Double))
- uid: Vim.Math3d.DInterval.Create*
  name: Create
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Create_
  commentId: Overload:Vim.Math3d.DInterval.Create
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Create
  nameWithType: DInterval.Create
- uid: Vim.Math3d.DInterval.Deconstruct(System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Deconstruct_System_Double__System_Double__
  commentId: M:Vim.Math3d.DInterval.Deconstruct(System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
  fullName: Vim.Math3d.DInterval.Deconstruct(out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.DInterval.Deconstruct(ByRef System.Double, ByRef System.Double)
  nameWithType: DInterval.Deconstruct(out Double, out Double)
  nameWithType.vb: DInterval.Deconstruct(ByRef Double, ByRef Double)
- uid: Vim.Math3d.DInterval.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Deconstruct_
  commentId: Overload:Vim.Math3d.DInterval.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Deconstruct
  nameWithType: DInterval.Deconstruct
- uid: Vim.Math3d.DInterval.Empty
  name: Empty
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Empty
  commentId: F:Vim.Math3d.DInterval.Empty
  fullName: Vim.Math3d.DInterval.Empty
  nameWithType: DInterval.Empty
- uid: Vim.Math3d.DInterval.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Equals_System_Object_
  commentId: M:Vim.Math3d.DInterval.Equals(System.Object)
  fullName: Vim.Math3d.DInterval.Equals(System.Object)
  nameWithType: DInterval.Equals(Object)
- uid: Vim.Math3d.DInterval.Equals(Vim.Math3d.DInterval)
  name: Equals(DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Equals_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.Equals(Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.Equals(Vim.Math3d.DInterval)
  nameWithType: DInterval.Equals(DInterval)
- uid: Vim.Math3d.DInterval.Equals*
  name: Equals
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Equals_
  commentId: Overload:Vim.Math3d.DInterval.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Equals
  nameWithType: DInterval.Equals
- uid: Vim.Math3d.DInterval.Extent
  name: Extent
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Extent
  commentId: P:Vim.Math3d.DInterval.Extent
  fullName: Vim.Math3d.DInterval.Extent
  nameWithType: DInterval.Extent
- uid: Vim.Math3d.DInterval.Extent*
  name: Extent
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Extent_
  commentId: Overload:Vim.Math3d.DInterval.Extent
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Extent
  nameWithType: DInterval.Extent
- uid: Vim.Math3d.DInterval.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_GetHashCode
  commentId: M:Vim.Math3d.DInterval.GetHashCode
  fullName: Vim.Math3d.DInterval.GetHashCode()
  nameWithType: DInterval.GetHashCode()
- uid: Vim.Math3d.DInterval.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_GetHashCode_
  commentId: Overload:Vim.Math3d.DInterval.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.GetHashCode
  nameWithType: DInterval.GetHashCode
- uid: Vim.Math3d.DInterval.Intersection(Vim.Math3d.DInterval)
  name: Intersection(DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Intersection_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.Intersection(Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.Intersection(Vim.Math3d.DInterval)
  nameWithType: DInterval.Intersection(DInterval)
- uid: Vim.Math3d.DInterval.Intersection*
  name: Intersection
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Intersection_
  commentId: Overload:Vim.Math3d.DInterval.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Intersection
  nameWithType: DInterval.Intersection
- uid: Vim.Math3d.DInterval.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_IsInfinity
  commentId: M:Vim.Math3d.DInterval.IsInfinity
  fullName: Vim.Math3d.DInterval.IsInfinity()
  nameWithType: DInterval.IsInfinity()
- uid: Vim.Math3d.DInterval.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_IsInfinity_
  commentId: Overload:Vim.Math3d.DInterval.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.IsInfinity
  nameWithType: DInterval.IsInfinity
- uid: Vim.Math3d.DInterval.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_IsNaN
  commentId: M:Vim.Math3d.DInterval.IsNaN
  fullName: Vim.Math3d.DInterval.IsNaN()
  nameWithType: DInterval.IsNaN()
- uid: Vim.Math3d.DInterval.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_IsNaN_
  commentId: Overload:Vim.Math3d.DInterval.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.IsNaN
  nameWithType: DInterval.IsNaN
- uid: Vim.Math3d.DInterval.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Magnitude
  commentId: M:Vim.Math3d.DInterval.Magnitude
  fullName: Vim.Math3d.DInterval.Magnitude()
  nameWithType: DInterval.Magnitude()
- uid: Vim.Math3d.DInterval.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Magnitude_
  commentId: Overload:Vim.Math3d.DInterval.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Magnitude
  nameWithType: DInterval.Magnitude
- uid: Vim.Math3d.DInterval.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_MagnitudeSquared
  commentId: M:Vim.Math3d.DInterval.MagnitudeSquared
  fullName: Vim.Math3d.DInterval.MagnitudeSquared()
  nameWithType: DInterval.MagnitudeSquared()
- uid: Vim.Math3d.DInterval.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.DInterval.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.MagnitudeSquared
  nameWithType: DInterval.MagnitudeSquared
- uid: Vim.Math3d.DInterval.Max
  name: Max
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Max
  commentId: F:Vim.Math3d.DInterval.Max
  fullName: Vim.Math3d.DInterval.Max
  nameWithType: DInterval.Max
- uid: Vim.Math3d.DInterval.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_MaxValue
  commentId: F:Vim.Math3d.DInterval.MaxValue
  fullName: Vim.Math3d.DInterval.MaxValue
  nameWithType: DInterval.MaxValue
- uid: Vim.Math3d.DInterval.Merge(System.Double)
  name: Merge(Double)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Merge_System_Double_
  commentId: M:Vim.Math3d.DInterval.Merge(System.Double)
  fullName: Vim.Math3d.DInterval.Merge(System.Double)
  nameWithType: DInterval.Merge(Double)
- uid: Vim.Math3d.DInterval.Merge(Vim.Math3d.DInterval)
  name: Merge(DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Merge_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.Merge(Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.Merge(Vim.Math3d.DInterval)
  nameWithType: DInterval.Merge(DInterval)
- uid: Vim.Math3d.DInterval.Merge*
  name: Merge
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Merge_
  commentId: Overload:Vim.Math3d.DInterval.Merge
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Merge
  nameWithType: DInterval.Merge
- uid: Vim.Math3d.DInterval.Min
  name: Min
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Min
  commentId: F:Vim.Math3d.DInterval.Min
  fullName: Vim.Math3d.DInterval.Min
  nameWithType: DInterval.Min
- uid: Vim.Math3d.DInterval.MinValue
  name: MinValue
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_MinValue
  commentId: F:Vim.Math3d.DInterval.MinValue
  fullName: Vim.Math3d.DInterval.MinValue
  nameWithType: DInterval.MinValue
- uid: Vim.Math3d.DInterval.op_Addition(Vim.Math3d.DInterval,System.Double)
  name: Addition(DInterval, Double)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Addition_Vim_Math3d_DInterval_System_Double_
  commentId: M:Vim.Math3d.DInterval.op_Addition(Vim.Math3d.DInterval,System.Double)
  fullName: Vim.Math3d.DInterval.Addition(Vim.Math3d.DInterval, System.Double)
  nameWithType: DInterval.Addition(DInterval, Double)
- uid: Vim.Math3d.DInterval.op_Addition(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: Addition(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Addition_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_Addition(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.Addition(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.Addition(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_Addition*
  name: Addition
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Addition_
  commentId: Overload:Vim.Math3d.DInterval.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Addition
  nameWithType: DInterval.Addition
- uid: Vim.Math3d.DInterval.op_Equality(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: Equality(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Equality_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_Equality(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.Equality(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.Equality(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Equality_
  commentId: Overload:Vim.Math3d.DInterval.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Equality
  nameWithType: DInterval.Equality
- uid: Vim.Math3d.DInterval.op_GreaterThan(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: GreaterThan(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_GreaterThan_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_GreaterThan(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.GreaterThan(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.GreaterThan(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_GreaterThan_
  commentId: Overload:Vim.Math3d.DInterval.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.GreaterThan
  nameWithType: DInterval.GreaterThan
- uid: Vim.Math3d.DInterval.op_GreaterThanOrEqual(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: GreaterThanOrEqual(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_GreaterThanOrEqual_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_GreaterThanOrEqual(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.GreaterThanOrEqual(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.GreaterThanOrEqual(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.DInterval.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.GreaterThanOrEqual
  nameWithType: DInterval.GreaterThanOrEqual
- uid: Vim.Math3d.DInterval.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.DInterval
  name: Implicit((Double min, Double max) to DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Implicit_System_ValueTuple_System_Double_System_Double___Vim_Math3d_DInterval
  commentId: M:Vim.Math3d.DInterval.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.DInterval
  name.vb: Widening((min As Double, max As Double)(Of Double, Double) to DInterval)
  fullName: Vim.Math3d.DInterval.Implicit(System.ValueTuple<System.Double, System.Double> to Vim.Math3d.DInterval)
  fullName.vb: Vim.Math3d.DInterval.Widening(System.ValueTuple(Of System.Double, System.Double) to Vim.Math3d.DInterval)
  nameWithType: DInterval.Implicit((Double min, Double max) to DInterval)
  nameWithType.vb: DInterval.Widening((min As Double, max As Double)(Of Double, Double) to DInterval)
- uid: Vim.Math3d.DInterval.op_Implicit(Vim.Math3d.DInterval)~System.ValueTuple{System.Double,System.Double}
  name: Implicit(DInterval to (Double min, Double max))
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Implicit_Vim_Math3d_DInterval__System_ValueTuple_System_Double_System_Double_
  commentId: M:Vim.Math3d.DInterval.op_Implicit(Vim.Math3d.DInterval)~System.ValueTuple{System.Double,System.Double}
  name.vb: Widening(DInterval to (min As Double, max As Double)(Of Double, Double))
  fullName: Vim.Math3d.DInterval.Implicit(Vim.Math3d.DInterval to System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DInterval.Widening(Vim.Math3d.DInterval to System.ValueTuple(Of System.Double, System.Double))
  nameWithType: DInterval.Implicit(DInterval to (Double min, Double max))
  nameWithType.vb: DInterval.Widening(DInterval to (min As Double, max As Double)(Of Double, Double))
- uid: Vim.Math3d.DInterval.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Implicit_
  commentId: Overload:Vim.Math3d.DInterval.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DInterval.Implicit
  fullName.vb: Vim.Math3d.DInterval.Widening
  nameWithType: DInterval.Implicit
  nameWithType.vb: DInterval.Widening
- uid: Vim.Math3d.DInterval.op_Inequality(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: Inequality(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Inequality_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_Inequality(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.Inequality(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.Inequality(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Inequality_
  commentId: Overload:Vim.Math3d.DInterval.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Inequality
  nameWithType: DInterval.Inequality
- uid: Vim.Math3d.DInterval.op_LessThan(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: LessThan(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_LessThan_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_LessThan(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.LessThan(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.LessThan(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_LessThan_
  commentId: Overload:Vim.Math3d.DInterval.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.LessThan
  nameWithType: DInterval.LessThan
- uid: Vim.Math3d.DInterval.op_LessThanOrEqual(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: LessThanOrEqual(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_LessThanOrEqual_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_LessThanOrEqual(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.LessThanOrEqual(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.LessThanOrEqual(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.DInterval.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.LessThanOrEqual
  nameWithType: DInterval.LessThanOrEqual
- uid: Vim.Math3d.DInterval.op_Subtraction(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  name: Subtraction(DInterval, DInterval)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Subtraction_Vim_Math3d_DInterval_Vim_Math3d_DInterval_
  commentId: M:Vim.Math3d.DInterval.op_Subtraction(Vim.Math3d.DInterval,Vim.Math3d.DInterval)
  fullName: Vim.Math3d.DInterval.Subtraction(Vim.Math3d.DInterval, Vim.Math3d.DInterval)
  nameWithType: DInterval.Subtraction(DInterval, DInterval)
- uid: Vim.Math3d.DInterval.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_op_Subtraction_
  commentId: Overload:Vim.Math3d.DInterval.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.Subtraction
  nameWithType: DInterval.Subtraction
- uid: Vim.Math3d.DInterval.SetMax(System.Double)
  name: SetMax(Double)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_SetMax_System_Double_
  commentId: M:Vim.Math3d.DInterval.SetMax(System.Double)
  fullName: Vim.Math3d.DInterval.SetMax(System.Double)
  nameWithType: DInterval.SetMax(Double)
- uid: Vim.Math3d.DInterval.SetMax*
  name: SetMax
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_SetMax_
  commentId: Overload:Vim.Math3d.DInterval.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.SetMax
  nameWithType: DInterval.SetMax
- uid: Vim.Math3d.DInterval.SetMin(System.Double)
  name: SetMin(Double)
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_SetMin_System_Double_
  commentId: M:Vim.Math3d.DInterval.SetMin(System.Double)
  fullName: Vim.Math3d.DInterval.SetMin(System.Double)
  nameWithType: DInterval.SetMin(Double)
- uid: Vim.Math3d.DInterval.SetMin*
  name: SetMin
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_SetMin_
  commentId: Overload:Vim.Math3d.DInterval.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.SetMin
  nameWithType: DInterval.SetMin
- uid: Vim.Math3d.DInterval.ToString
  name: ToString()
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_ToString
  commentId: M:Vim.Math3d.DInterval.ToString
  fullName: Vim.Math3d.DInterval.ToString()
  nameWithType: DInterval.ToString()
- uid: Vim.Math3d.DInterval.ToString*
  name: ToString
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_ToString_
  commentId: Overload:Vim.Math3d.DInterval.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DInterval.ToString
  nameWithType: DInterval.ToString
- uid: Vim.Math3d.DInterval.Zero
  name: Zero
  href: api/Vim.Math3d.DInterval.html#Vim_Math3d_DInterval_Zero
  commentId: F:Vim.Math3d.DInterval.Zero
  fullName: Vim.Math3d.DInterval.Zero
  nameWithType: DInterval.Zero
- uid: Vim.Math3d.DPlane
  name: DPlane
  href: api/Vim.Math3d.DPlane.html
  commentId: T:Vim.Math3d.DPlane
  fullName: Vim.Math3d.DPlane
  nameWithType: DPlane
- uid: Vim.Math3d.DPlane.#ctor(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name: DPlane((DVector3 normal, Double d))
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane__ctor_System_ValueTuple_Vim_Math3d_DVector3_System_Double__
  commentId: M:Vim.Math3d.DPlane.#ctor(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name.vb: DPlane((normal As DVector3, d As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.DPlane.DPlane(System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.DPlane.DPlane(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: DPlane.DPlane((DVector3 normal, Double d))
  nameWithType.vb: DPlane.DPlane((normal As DVector3, d As Double)(Of DVector3, Double))
- uid: Vim.Math3d.DPlane.#ctor(Vim.Math3d.DVector3,System.Double)
  name: DPlane(DVector3, Double)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane__ctor_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DPlane.#ctor(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DPlane.DPlane(Vim.Math3d.DVector3, System.Double)
  nameWithType: DPlane.DPlane(DVector3, Double)
- uid: Vim.Math3d.DPlane.#ctor*
  name: DPlane
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane__ctor_
  commentId: Overload:Vim.Math3d.DPlane.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.DPlane
  nameWithType: DPlane.DPlane
- uid: Vim.Math3d.DPlane.AlmostEquals(Vim.Math3d.DPlane,System.Single)
  name: AlmostEquals(DPlane, Single)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_AlmostEquals_Vim_Math3d_DPlane_System_Single_
  commentId: M:Vim.Math3d.DPlane.AlmostEquals(Vim.Math3d.DPlane,System.Single)
  fullName: Vim.Math3d.DPlane.AlmostEquals(Vim.Math3d.DPlane, System.Single)
  nameWithType: DPlane.AlmostEquals(DPlane, Single)
- uid: Vim.Math3d.DPlane.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_AlmostEquals_
  commentId: Overload:Vim.Math3d.DPlane.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.AlmostEquals
  nameWithType: DPlane.AlmostEquals
- uid: Vim.Math3d.DPlane.Create(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name: Create((DVector3 normal, Double d))
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Create_System_ValueTuple_Vim_Math3d_DVector3_System_Double__
  commentId: M:Vim.Math3d.DPlane.Create(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name.vb: Create((normal As DVector3, d As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.DPlane.Create(System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.DPlane.Create(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: DPlane.Create((DVector3 normal, Double d))
  nameWithType.vb: DPlane.Create((normal As DVector3, d As Double)(Of DVector3, Double))
- uid: Vim.Math3d.DPlane.Create(Vim.Math3d.DVector3,System.Double)
  name: Create(DVector3, Double)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Create_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DPlane.Create(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DPlane.Create(Vim.Math3d.DVector3, System.Double)
  nameWithType: DPlane.Create(DVector3, Double)
- uid: Vim.Math3d.DPlane.Create*
  name: Create
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Create_
  commentId: Overload:Vim.Math3d.DPlane.Create
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.Create
  nameWithType: DPlane.Create
- uid: Vim.Math3d.DPlane.D
  name: D
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_D
  commentId: F:Vim.Math3d.DPlane.D
  fullName: Vim.Math3d.DPlane.D
  nameWithType: DPlane.D
- uid: Vim.Math3d.DPlane.Deconstruct(Vim.Math3d.DVector3@,System.Double@)
  name: Deconstruct(out DVector3, out Double)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Deconstruct_Vim_Math3d_DVector3__System_Double__
  commentId: M:Vim.Math3d.DPlane.Deconstruct(Vim.Math3d.DVector3@,System.Double@)
  name.vb: Deconstruct(ByRef DVector3, ByRef Double)
  fullName: Vim.Math3d.DPlane.Deconstruct(out Vim.Math3d.DVector3, out System.Double)
  fullName.vb: Vim.Math3d.DPlane.Deconstruct(ByRef Vim.Math3d.DVector3, ByRef System.Double)
  nameWithType: DPlane.Deconstruct(out DVector3, out Double)
  nameWithType.vb: DPlane.Deconstruct(ByRef DVector3, ByRef Double)
- uid: Vim.Math3d.DPlane.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Deconstruct_
  commentId: Overload:Vim.Math3d.DPlane.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.Deconstruct
  nameWithType: DPlane.Deconstruct
- uid: Vim.Math3d.DPlane.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Equals_System_Object_
  commentId: M:Vim.Math3d.DPlane.Equals(System.Object)
  fullName: Vim.Math3d.DPlane.Equals(System.Object)
  nameWithType: DPlane.Equals(Object)
- uid: Vim.Math3d.DPlane.Equals(Vim.Math3d.DPlane)
  name: Equals(DPlane)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Equals_Vim_Math3d_DPlane_
  commentId: M:Vim.Math3d.DPlane.Equals(Vim.Math3d.DPlane)
  fullName: Vim.Math3d.DPlane.Equals(Vim.Math3d.DPlane)
  nameWithType: DPlane.Equals(DPlane)
- uid: Vim.Math3d.DPlane.Equals*
  name: Equals
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Equals_
  commentId: Overload:Vim.Math3d.DPlane.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.Equals
  nameWithType: DPlane.Equals
- uid: Vim.Math3d.DPlane.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_GetHashCode
  commentId: M:Vim.Math3d.DPlane.GetHashCode
  fullName: Vim.Math3d.DPlane.GetHashCode()
  nameWithType: DPlane.GetHashCode()
- uid: Vim.Math3d.DPlane.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_GetHashCode_
  commentId: Overload:Vim.Math3d.DPlane.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.GetHashCode
  nameWithType: DPlane.GetHashCode
- uid: Vim.Math3d.DPlane.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_MaxValue
  commentId: F:Vim.Math3d.DPlane.MaxValue
  fullName: Vim.Math3d.DPlane.MaxValue
  nameWithType: DPlane.MaxValue
- uid: Vim.Math3d.DPlane.MinValue
  name: MinValue
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_MinValue
  commentId: F:Vim.Math3d.DPlane.MinValue
  fullName: Vim.Math3d.DPlane.MinValue
  nameWithType: DPlane.MinValue
- uid: Vim.Math3d.DPlane.Normal
  name: Normal
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Normal
  commentId: F:Vim.Math3d.DPlane.Normal
  fullName: Vim.Math3d.DPlane.Normal
  nameWithType: DPlane.Normal
- uid: Vim.Math3d.DPlane.op_Equality(Vim.Math3d.DPlane,Vim.Math3d.DPlane)
  name: Equality(DPlane, DPlane)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_op_Equality_Vim_Math3d_DPlane_Vim_Math3d_DPlane_
  commentId: M:Vim.Math3d.DPlane.op_Equality(Vim.Math3d.DPlane,Vim.Math3d.DPlane)
  fullName: Vim.Math3d.DPlane.Equality(Vim.Math3d.DPlane, Vim.Math3d.DPlane)
  nameWithType: DPlane.Equality(DPlane, DPlane)
- uid: Vim.Math3d.DPlane.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_op_Equality_
  commentId: Overload:Vim.Math3d.DPlane.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.Equality
  nameWithType: DPlane.Equality
- uid: Vim.Math3d.DPlane.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,System.Double})~Vim.Math3d.DPlane
  name: Implicit((DVector3 normal, Double d) to DPlane)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_op_Implicit_System_ValueTuple_Vim_Math3d_DVector3_System_Double___Vim_Math3d_DPlane
  commentId: M:Vim.Math3d.DPlane.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,System.Double})~Vim.Math3d.DPlane
  name.vb: Widening((normal As DVector3, d As Double)(Of DVector3, Double) to DPlane)
  fullName: Vim.Math3d.DPlane.Implicit(System.ValueTuple<Vim.Math3d.DVector3, System.Double> to Vim.Math3d.DPlane)
  fullName.vb: Vim.Math3d.DPlane.Widening(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double) to Vim.Math3d.DPlane)
  nameWithType: DPlane.Implicit((DVector3 normal, Double d) to DPlane)
  nameWithType.vb: DPlane.Widening((normal As DVector3, d As Double)(Of DVector3, Double) to DPlane)
- uid: Vim.Math3d.DPlane.op_Implicit(Vim.Math3d.DPlane)~System.ValueTuple{Vim.Math3d.DVector3,System.Double}
  name: Implicit(DPlane to (DVector3 normal, Double d))
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_op_Implicit_Vim_Math3d_DPlane__System_ValueTuple_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DPlane.op_Implicit(Vim.Math3d.DPlane)~System.ValueTuple{Vim.Math3d.DVector3,System.Double}
  name.vb: Widening(DPlane to (normal As DVector3, d As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.DPlane.Implicit(Vim.Math3d.DPlane to System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.DPlane.Widening(Vim.Math3d.DPlane to System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: DPlane.Implicit(DPlane to (DVector3 normal, Double d))
  nameWithType.vb: DPlane.Widening(DPlane to (normal As DVector3, d As Double)(Of DVector3, Double))
- uid: Vim.Math3d.DPlane.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_op_Implicit_
  commentId: Overload:Vim.Math3d.DPlane.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DPlane.Implicit
  fullName.vb: Vim.Math3d.DPlane.Widening
  nameWithType: DPlane.Implicit
  nameWithType.vb: DPlane.Widening
- uid: Vim.Math3d.DPlane.op_Inequality(Vim.Math3d.DPlane,Vim.Math3d.DPlane)
  name: Inequality(DPlane, DPlane)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_op_Inequality_Vim_Math3d_DPlane_Vim_Math3d_DPlane_
  commentId: M:Vim.Math3d.DPlane.op_Inequality(Vim.Math3d.DPlane,Vim.Math3d.DPlane)
  fullName: Vim.Math3d.DPlane.Inequality(Vim.Math3d.DPlane, Vim.Math3d.DPlane)
  nameWithType: DPlane.Inequality(DPlane, DPlane)
- uid: Vim.Math3d.DPlane.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_op_Inequality_
  commentId: Overload:Vim.Math3d.DPlane.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.Inequality
  nameWithType: DPlane.Inequality
- uid: Vim.Math3d.DPlane.SetD(System.Double)
  name: SetD(Double)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_SetD_System_Double_
  commentId: M:Vim.Math3d.DPlane.SetD(System.Double)
  fullName: Vim.Math3d.DPlane.SetD(System.Double)
  nameWithType: DPlane.SetD(Double)
- uid: Vim.Math3d.DPlane.SetD*
  name: SetD
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_SetD_
  commentId: Overload:Vim.Math3d.DPlane.SetD
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.SetD
  nameWithType: DPlane.SetD
- uid: Vim.Math3d.DPlane.SetNormal(Vim.Math3d.DVector3)
  name: SetNormal(DVector3)
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_SetNormal_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DPlane.SetNormal(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DPlane.SetNormal(Vim.Math3d.DVector3)
  nameWithType: DPlane.SetNormal(DVector3)
- uid: Vim.Math3d.DPlane.SetNormal*
  name: SetNormal
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_SetNormal_
  commentId: Overload:Vim.Math3d.DPlane.SetNormal
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.SetNormal
  nameWithType: DPlane.SetNormal
- uid: Vim.Math3d.DPlane.ToString
  name: ToString()
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_ToString
  commentId: M:Vim.Math3d.DPlane.ToString
  fullName: Vim.Math3d.DPlane.ToString()
  nameWithType: DPlane.ToString()
- uid: Vim.Math3d.DPlane.ToString*
  name: ToString
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_ToString_
  commentId: Overload:Vim.Math3d.DPlane.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DPlane.ToString
  nameWithType: DPlane.ToString
- uid: Vim.Math3d.DPlane.Zero
  name: Zero
  href: api/Vim.Math3d.DPlane.html#Vim_Math3d_DPlane_Zero
  commentId: F:Vim.Math3d.DPlane.Zero
  fullName: Vim.Math3d.DPlane.Zero
  nameWithType: DPlane.Zero
- uid: Vim.Math3d.DQuaternion
  name: DQuaternion
  href: api/Vim.Math3d.DQuaternion.html
  commentId: T:Vim.Math3d.DQuaternion
  fullName: Vim.Math3d.DQuaternion
  nameWithType: DQuaternion
- uid: Vim.Math3d.DQuaternion.#ctor(System.Double,System.Double,System.Double,System.Double)
  name: DQuaternion(Double, Double, Double, Double)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion__ctor_System_Double_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DQuaternion.#ctor(System.Double,System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.DQuaternion.DQuaternion(System.Double, System.Double, System.Double, System.Double)
  nameWithType: DQuaternion.DQuaternion(Double, Double, Double, Double)
- uid: Vim.Math3d.DQuaternion.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name: DQuaternion((Double x, Double y, Double z, Double w))
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion__ctor_System_ValueTuple_System_Double_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.DQuaternion.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name.vb: DQuaternion((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  fullName: Vim.Math3d.DQuaternion.DQuaternion(System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DQuaternion.DQuaternion(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  nameWithType: DQuaternion.DQuaternion((Double x, Double y, Double z, Double w))
  nameWithType.vb: DQuaternion.DQuaternion((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DQuaternion.#ctor*
  name: DQuaternion
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion__ctor_
  commentId: Overload:Vim.Math3d.DQuaternion.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.DQuaternion
  nameWithType: DQuaternion.DQuaternion
- uid: Vim.Math3d.DQuaternion.AlmostEquals(Vim.Math3d.DQuaternion,System.Single)
  name: AlmostEquals(DQuaternion, Single)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_AlmostEquals_Vim_Math3d_DQuaternion_System_Single_
  commentId: M:Vim.Math3d.DQuaternion.AlmostEquals(Vim.Math3d.DQuaternion,System.Single)
  fullName: Vim.Math3d.DQuaternion.AlmostEquals(Vim.Math3d.DQuaternion, System.Single)
  nameWithType: DQuaternion.AlmostEquals(DQuaternion, Single)
- uid: Vim.Math3d.DQuaternion.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_AlmostEquals_
  commentId: Overload:Vim.Math3d.DQuaternion.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.AlmostEquals
  nameWithType: DQuaternion.AlmostEquals
- uid: Vim.Math3d.DQuaternion.Create(System.Double,System.Double,System.Double,System.Double)
  name: Create(Double, Double, Double, Double)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Create_System_Double_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DQuaternion.Create(System.Double,System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.DQuaternion.Create(System.Double, System.Double, System.Double, System.Double)
  nameWithType: DQuaternion.Create(Double, Double, Double, Double)
- uid: Vim.Math3d.DQuaternion.Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name: Create((Double x, Double y, Double z, Double w))
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Create_System_ValueTuple_System_Double_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.DQuaternion.Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name.vb: Create((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  fullName: Vim.Math3d.DQuaternion.Create(System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DQuaternion.Create(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  nameWithType: DQuaternion.Create((Double x, Double y, Double z, Double w))
  nameWithType.vb: DQuaternion.Create((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DQuaternion.Create*
  name: Create
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Create_
  commentId: Overload:Vim.Math3d.DQuaternion.Create
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.Create
  nameWithType: DQuaternion.Create
- uid: Vim.Math3d.DQuaternion.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double, out Double, out Double)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Deconstruct_System_Double__System_Double__System_Double__System_Double__
  commentId: M:Vim.Math3d.DQuaternion.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double, ByRef Double, ByRef Double)
  fullName: Vim.Math3d.DQuaternion.Deconstruct(out System.Double, out System.Double, out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.DQuaternion.Deconstruct(ByRef System.Double, ByRef System.Double, ByRef System.Double, ByRef System.Double)
  nameWithType: DQuaternion.Deconstruct(out Double, out Double, out Double, out Double)
  nameWithType.vb: DQuaternion.Deconstruct(ByRef Double, ByRef Double, ByRef Double, ByRef Double)
- uid: Vim.Math3d.DQuaternion.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Deconstruct_
  commentId: Overload:Vim.Math3d.DQuaternion.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.Deconstruct
  nameWithType: DQuaternion.Deconstruct
- uid: Vim.Math3d.DQuaternion.DVector4
  name: DVector4
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_DVector4
  commentId: P:Vim.Math3d.DQuaternion.DVector4
  fullName: Vim.Math3d.DQuaternion.DVector4
  nameWithType: DQuaternion.DVector4
- uid: Vim.Math3d.DQuaternion.DVector4*
  name: DVector4
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_DVector4_
  commentId: Overload:Vim.Math3d.DQuaternion.DVector4
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.DVector4
  nameWithType: DQuaternion.DVector4
- uid: Vim.Math3d.DQuaternion.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Equals_System_Object_
  commentId: M:Vim.Math3d.DQuaternion.Equals(System.Object)
  fullName: Vim.Math3d.DQuaternion.Equals(System.Object)
  nameWithType: DQuaternion.Equals(Object)
- uid: Vim.Math3d.DQuaternion.Equals(Vim.Math3d.DQuaternion)
  name: Equals(DQuaternion)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Equals_Vim_Math3d_DQuaternion_
  commentId: M:Vim.Math3d.DQuaternion.Equals(Vim.Math3d.DQuaternion)
  fullName: Vim.Math3d.DQuaternion.Equals(Vim.Math3d.DQuaternion)
  nameWithType: DQuaternion.Equals(DQuaternion)
- uid: Vim.Math3d.DQuaternion.Equals*
  name: Equals
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Equals_
  commentId: Overload:Vim.Math3d.DQuaternion.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.Equals
  nameWithType: DQuaternion.Equals
- uid: Vim.Math3d.DQuaternion.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_GetHashCode
  commentId: M:Vim.Math3d.DQuaternion.GetHashCode
  fullName: Vim.Math3d.DQuaternion.GetHashCode()
  nameWithType: DQuaternion.GetHashCode()
- uid: Vim.Math3d.DQuaternion.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_GetHashCode_
  commentId: Overload:Vim.Math3d.DQuaternion.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.GetHashCode
  nameWithType: DQuaternion.GetHashCode
- uid: Vim.Math3d.DQuaternion.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_MaxValue
  commentId: F:Vim.Math3d.DQuaternion.MaxValue
  fullName: Vim.Math3d.DQuaternion.MaxValue
  nameWithType: DQuaternion.MaxValue
- uid: Vim.Math3d.DQuaternion.MinValue
  name: MinValue
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_MinValue
  commentId: F:Vim.Math3d.DQuaternion.MinValue
  fullName: Vim.Math3d.DQuaternion.MinValue
  nameWithType: DQuaternion.MinValue
- uid: Vim.Math3d.DQuaternion.op_Equality(Vim.Math3d.DQuaternion,Vim.Math3d.DQuaternion)
  name: Equality(DQuaternion, DQuaternion)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_op_Equality_Vim_Math3d_DQuaternion_Vim_Math3d_DQuaternion_
  commentId: M:Vim.Math3d.DQuaternion.op_Equality(Vim.Math3d.DQuaternion,Vim.Math3d.DQuaternion)
  fullName: Vim.Math3d.DQuaternion.Equality(Vim.Math3d.DQuaternion, Vim.Math3d.DQuaternion)
  nameWithType: DQuaternion.Equality(DQuaternion, DQuaternion)
- uid: Vim.Math3d.DQuaternion.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_op_Equality_
  commentId: Overload:Vim.Math3d.DQuaternion.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.Equality
  nameWithType: DQuaternion.Equality
- uid: Vim.Math3d.DQuaternion.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DQuaternion
  name: Implicit((Double x, Double y, Double z, Double w) to DQuaternion)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_op_Implicit_System_ValueTuple_System_Double_System_Double_System_Double_System_Double___Vim_Math3d_DQuaternion
  commentId: M:Vim.Math3d.DQuaternion.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DQuaternion
  name.vb: Widening((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double) to DQuaternion)
  fullName: Vim.Math3d.DQuaternion.Implicit(System.ValueTuple<System.Double, System.Double, System.Double, System.Double> to Vim.Math3d.DQuaternion)
  fullName.vb: Vim.Math3d.DQuaternion.Widening(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double) to Vim.Math3d.DQuaternion)
  nameWithType: DQuaternion.Implicit((Double x, Double y, Double z, Double w) to DQuaternion)
  nameWithType.vb: DQuaternion.Widening((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double) to DQuaternion)
- uid: Vim.Math3d.DQuaternion.op_Implicit(Vim.Math3d.DQuaternion)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  name: Implicit(DQuaternion to (Double x, Double y, Double z, Double w))
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_op_Implicit_Vim_Math3d_DQuaternion__System_ValueTuple_System_Double_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DQuaternion.op_Implicit(Vim.Math3d.DQuaternion)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  name.vb: Widening(DQuaternion to (x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  fullName: Vim.Math3d.DQuaternion.Implicit(Vim.Math3d.DQuaternion to System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DQuaternion.Widening(Vim.Math3d.DQuaternion to System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  nameWithType: DQuaternion.Implicit(DQuaternion to (Double x, Double y, Double z, Double w))
  nameWithType.vb: DQuaternion.Widening(DQuaternion to (x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DQuaternion.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_op_Implicit_
  commentId: Overload:Vim.Math3d.DQuaternion.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DQuaternion.Implicit
  fullName.vb: Vim.Math3d.DQuaternion.Widening
  nameWithType: DQuaternion.Implicit
  nameWithType.vb: DQuaternion.Widening
- uid: Vim.Math3d.DQuaternion.op_Inequality(Vim.Math3d.DQuaternion,Vim.Math3d.DQuaternion)
  name: Inequality(DQuaternion, DQuaternion)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_op_Inequality_Vim_Math3d_DQuaternion_Vim_Math3d_DQuaternion_
  commentId: M:Vim.Math3d.DQuaternion.op_Inequality(Vim.Math3d.DQuaternion,Vim.Math3d.DQuaternion)
  fullName: Vim.Math3d.DQuaternion.Inequality(Vim.Math3d.DQuaternion, Vim.Math3d.DQuaternion)
  nameWithType: DQuaternion.Inequality(DQuaternion, DQuaternion)
- uid: Vim.Math3d.DQuaternion.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_op_Inequality_
  commentId: Overload:Vim.Math3d.DQuaternion.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.Inequality
  nameWithType: DQuaternion.Inequality
- uid: Vim.Math3d.DQuaternion.Quaternion
  name: Quaternion
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Quaternion
  commentId: P:Vim.Math3d.DQuaternion.Quaternion
  fullName: Vim.Math3d.DQuaternion.Quaternion
  nameWithType: DQuaternion.Quaternion
- uid: Vim.Math3d.DQuaternion.Quaternion*
  name: Quaternion
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Quaternion_
  commentId: Overload:Vim.Math3d.DQuaternion.Quaternion
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.Quaternion
  nameWithType: DQuaternion.Quaternion
- uid: Vim.Math3d.DQuaternion.SetW(System.Double)
  name: SetW(Double)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetW_System_Double_
  commentId: M:Vim.Math3d.DQuaternion.SetW(System.Double)
  fullName: Vim.Math3d.DQuaternion.SetW(System.Double)
  nameWithType: DQuaternion.SetW(Double)
- uid: Vim.Math3d.DQuaternion.SetW*
  name: SetW
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetW_
  commentId: Overload:Vim.Math3d.DQuaternion.SetW
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.SetW
  nameWithType: DQuaternion.SetW
- uid: Vim.Math3d.DQuaternion.SetX(System.Double)
  name: SetX(Double)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetX_System_Double_
  commentId: M:Vim.Math3d.DQuaternion.SetX(System.Double)
  fullName: Vim.Math3d.DQuaternion.SetX(System.Double)
  nameWithType: DQuaternion.SetX(Double)
- uid: Vim.Math3d.DQuaternion.SetX*
  name: SetX
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetX_
  commentId: Overload:Vim.Math3d.DQuaternion.SetX
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.SetX
  nameWithType: DQuaternion.SetX
- uid: Vim.Math3d.DQuaternion.SetY(System.Double)
  name: SetY(Double)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetY_System_Double_
  commentId: M:Vim.Math3d.DQuaternion.SetY(System.Double)
  fullName: Vim.Math3d.DQuaternion.SetY(System.Double)
  nameWithType: DQuaternion.SetY(Double)
- uid: Vim.Math3d.DQuaternion.SetY*
  name: SetY
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetY_
  commentId: Overload:Vim.Math3d.DQuaternion.SetY
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.SetY
  nameWithType: DQuaternion.SetY
- uid: Vim.Math3d.DQuaternion.SetZ(System.Double)
  name: SetZ(Double)
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetZ_System_Double_
  commentId: M:Vim.Math3d.DQuaternion.SetZ(System.Double)
  fullName: Vim.Math3d.DQuaternion.SetZ(System.Double)
  nameWithType: DQuaternion.SetZ(Double)
- uid: Vim.Math3d.DQuaternion.SetZ*
  name: SetZ
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_SetZ_
  commentId: Overload:Vim.Math3d.DQuaternion.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.SetZ
  nameWithType: DQuaternion.SetZ
- uid: Vim.Math3d.DQuaternion.ToString
  name: ToString()
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_ToString
  commentId: M:Vim.Math3d.DQuaternion.ToString
  fullName: Vim.Math3d.DQuaternion.ToString()
  nameWithType: DQuaternion.ToString()
- uid: Vim.Math3d.DQuaternion.ToString*
  name: ToString
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_ToString_
  commentId: Overload:Vim.Math3d.DQuaternion.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DQuaternion.ToString
  nameWithType: DQuaternion.ToString
- uid: Vim.Math3d.DQuaternion.W
  name: W
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_W
  commentId: F:Vim.Math3d.DQuaternion.W
  fullName: Vim.Math3d.DQuaternion.W
  nameWithType: DQuaternion.W
- uid: Vim.Math3d.DQuaternion.X
  name: X
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_X
  commentId: F:Vim.Math3d.DQuaternion.X
  fullName: Vim.Math3d.DQuaternion.X
  nameWithType: DQuaternion.X
- uid: Vim.Math3d.DQuaternion.Y
  name: Y
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Y
  commentId: F:Vim.Math3d.DQuaternion.Y
  fullName: Vim.Math3d.DQuaternion.Y
  nameWithType: DQuaternion.Y
- uid: Vim.Math3d.DQuaternion.Z
  name: Z
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Z
  commentId: F:Vim.Math3d.DQuaternion.Z
  fullName: Vim.Math3d.DQuaternion.Z
  nameWithType: DQuaternion.Z
- uid: Vim.Math3d.DQuaternion.Zero
  name: Zero
  href: api/Vim.Math3d.DQuaternion.html#Vim_Math3d_DQuaternion_Zero
  commentId: F:Vim.Math3d.DQuaternion.Zero
  fullName: Vim.Math3d.DQuaternion.Zero
  nameWithType: DQuaternion.Zero
- uid: Vim.Math3d.DRay
  name: DRay
  href: api/Vim.Math3d.DRay.html
  commentId: T:Vim.Math3d.DRay
  fullName: Vim.Math3d.DRay
  nameWithType: DRay
- uid: Vim.Math3d.DRay.#ctor(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name: DRay((DVector3 position, DVector3 direction))
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay__ctor_System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.DRay.#ctor(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name.vb: DRay((position As DVector3, direction As DVector3)(Of DVector3, DVector3))
  fullName: Vim.Math3d.DRay.DRay(System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.DRay.DRay(System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3))
  nameWithType: DRay.DRay((DVector3 position, DVector3 direction))
  nameWithType.vb: DRay.DRay((position As DVector3, direction As DVector3)(Of DVector3, DVector3))
- uid: Vim.Math3d.DRay.#ctor(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: DRay(DVector3, DVector3)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay__ctor_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DRay.#ctor(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DRay.DRay(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DRay.DRay(DVector3, DVector3)
- uid: Vim.Math3d.DRay.#ctor*
  name: DRay
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay__ctor_
  commentId: Overload:Vim.Math3d.DRay.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DRay.DRay
  nameWithType: DRay.DRay
- uid: Vim.Math3d.DRay.AlmostEquals(Vim.Math3d.DRay,System.Single)
  name: AlmostEquals(DRay, Single)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_AlmostEquals_Vim_Math3d_DRay_System_Single_
  commentId: M:Vim.Math3d.DRay.AlmostEquals(Vim.Math3d.DRay,System.Single)
  fullName: Vim.Math3d.DRay.AlmostEquals(Vim.Math3d.DRay, System.Single)
  nameWithType: DRay.AlmostEquals(DRay, Single)
- uid: Vim.Math3d.DRay.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_AlmostEquals_
  commentId: Overload:Vim.Math3d.DRay.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DRay.AlmostEquals
  nameWithType: DRay.AlmostEquals
- uid: Vim.Math3d.DRay.Create(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name: Create((DVector3 position, DVector3 direction))
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Create_System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.DRay.Create(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})
  name.vb: Create((position As DVector3, direction As DVector3)(Of DVector3, DVector3))
  fullName: Vim.Math3d.DRay.Create(System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.DRay.Create(System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3))
  nameWithType: DRay.Create((DVector3 position, DVector3 direction))
  nameWithType.vb: DRay.Create((position As DVector3, direction As DVector3)(Of DVector3, DVector3))
- uid: Vim.Math3d.DRay.Create(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Create(DVector3, DVector3)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Create_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DRay.Create(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DRay.Create(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DRay.Create(DVector3, DVector3)
- uid: Vim.Math3d.DRay.Create*
  name: Create
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Create_
  commentId: Overload:Vim.Math3d.DRay.Create
  isSpec: "True"
  fullName: Vim.Math3d.DRay.Create
  nameWithType: DRay.Create
- uid: Vim.Math3d.DRay.Deconstruct(Vim.Math3d.DVector3@,Vim.Math3d.DVector3@)
  name: Deconstruct(out DVector3, out DVector3)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Deconstruct_Vim_Math3d_DVector3__Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.DRay.Deconstruct(Vim.Math3d.DVector3@,Vim.Math3d.DVector3@)
  name.vb: Deconstruct(ByRef DVector3, ByRef DVector3)
  fullName: Vim.Math3d.DRay.Deconstruct(out Vim.Math3d.DVector3, out Vim.Math3d.DVector3)
  fullName.vb: Vim.Math3d.DRay.Deconstruct(ByRef Vim.Math3d.DVector3, ByRef Vim.Math3d.DVector3)
  nameWithType: DRay.Deconstruct(out DVector3, out DVector3)
  nameWithType.vb: DRay.Deconstruct(ByRef DVector3, ByRef DVector3)
- uid: Vim.Math3d.DRay.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Deconstruct_
  commentId: Overload:Vim.Math3d.DRay.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DRay.Deconstruct
  nameWithType: DRay.Deconstruct
- uid: Vim.Math3d.DRay.Direction
  name: Direction
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Direction
  commentId: F:Vim.Math3d.DRay.Direction
  fullName: Vim.Math3d.DRay.Direction
  nameWithType: DRay.Direction
- uid: Vim.Math3d.DRay.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Equals_System_Object_
  commentId: M:Vim.Math3d.DRay.Equals(System.Object)
  fullName: Vim.Math3d.DRay.Equals(System.Object)
  nameWithType: DRay.Equals(Object)
- uid: Vim.Math3d.DRay.Equals(Vim.Math3d.DRay)
  name: Equals(DRay)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Equals_Vim_Math3d_DRay_
  commentId: M:Vim.Math3d.DRay.Equals(Vim.Math3d.DRay)
  fullName: Vim.Math3d.DRay.Equals(Vim.Math3d.DRay)
  nameWithType: DRay.Equals(DRay)
- uid: Vim.Math3d.DRay.Equals*
  name: Equals
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Equals_
  commentId: Overload:Vim.Math3d.DRay.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DRay.Equals
  nameWithType: DRay.Equals
- uid: Vim.Math3d.DRay.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_GetHashCode
  commentId: M:Vim.Math3d.DRay.GetHashCode
  fullName: Vim.Math3d.DRay.GetHashCode()
  nameWithType: DRay.GetHashCode()
- uid: Vim.Math3d.DRay.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_GetHashCode_
  commentId: Overload:Vim.Math3d.DRay.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DRay.GetHashCode
  nameWithType: DRay.GetHashCode
- uid: Vim.Math3d.DRay.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_MaxValue
  commentId: F:Vim.Math3d.DRay.MaxValue
  fullName: Vim.Math3d.DRay.MaxValue
  nameWithType: DRay.MaxValue
- uid: Vim.Math3d.DRay.MinValue
  name: MinValue
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_MinValue
  commentId: F:Vim.Math3d.DRay.MinValue
  fullName: Vim.Math3d.DRay.MinValue
  nameWithType: DRay.MinValue
- uid: Vim.Math3d.DRay.op_Equality(Vim.Math3d.DRay,Vim.Math3d.DRay)
  name: Equality(DRay, DRay)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_op_Equality_Vim_Math3d_DRay_Vim_Math3d_DRay_
  commentId: M:Vim.Math3d.DRay.op_Equality(Vim.Math3d.DRay,Vim.Math3d.DRay)
  fullName: Vim.Math3d.DRay.Equality(Vim.Math3d.DRay, Vim.Math3d.DRay)
  nameWithType: DRay.Equality(DRay, DRay)
- uid: Vim.Math3d.DRay.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_op_Equality_
  commentId: Overload:Vim.Math3d.DRay.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DRay.Equality
  nameWithType: DRay.Equality
- uid: Vim.Math3d.DRay.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})~Vim.Math3d.DRay
  name: Implicit((DVector3 position, DVector3 direction) to DRay)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_op_Implicit_System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3___Vim_Math3d_DRay
  commentId: M:Vim.Math3d.DRay.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3})~Vim.Math3d.DRay
  name.vb: Widening((position As DVector3, direction As DVector3)(Of DVector3, DVector3) to DRay)
  fullName: Vim.Math3d.DRay.Implicit(System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3> to Vim.Math3d.DRay)
  fullName.vb: Vim.Math3d.DRay.Widening(System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3) to Vim.Math3d.DRay)
  nameWithType: DRay.Implicit((DVector3 position, DVector3 direction) to DRay)
  nameWithType.vb: DRay.Widening((position As DVector3, direction As DVector3)(Of DVector3, DVector3) to DRay)
- uid: Vim.Math3d.DRay.op_Implicit(Vim.Math3d.DRay)~System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3}
  name: Implicit(DRay to (DVector3 position, DVector3 direction))
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_op_Implicit_Vim_Math3d_DRay__System_ValueTuple_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DRay.op_Implicit(Vim.Math3d.DRay)~System.ValueTuple{Vim.Math3d.DVector3,Vim.Math3d.DVector3}
  name.vb: Widening(DRay to (position As DVector3, direction As DVector3)(Of DVector3, DVector3))
  fullName: Vim.Math3d.DRay.Implicit(Vim.Math3d.DRay to System.ValueTuple<Vim.Math3d.DVector3, Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.DRay.Widening(Vim.Math3d.DRay to System.ValueTuple(Of Vim.Math3d.DVector3, Vim.Math3d.DVector3))
  nameWithType: DRay.Implicit(DRay to (DVector3 position, DVector3 direction))
  nameWithType.vb: DRay.Widening(DRay to (position As DVector3, direction As DVector3)(Of DVector3, DVector3))
- uid: Vim.Math3d.DRay.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_op_Implicit_
  commentId: Overload:Vim.Math3d.DRay.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DRay.Implicit
  fullName.vb: Vim.Math3d.DRay.Widening
  nameWithType: DRay.Implicit
  nameWithType.vb: DRay.Widening
- uid: Vim.Math3d.DRay.op_Inequality(Vim.Math3d.DRay,Vim.Math3d.DRay)
  name: Inequality(DRay, DRay)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_op_Inequality_Vim_Math3d_DRay_Vim_Math3d_DRay_
  commentId: M:Vim.Math3d.DRay.op_Inequality(Vim.Math3d.DRay,Vim.Math3d.DRay)
  fullName: Vim.Math3d.DRay.Inequality(Vim.Math3d.DRay, Vim.Math3d.DRay)
  nameWithType: DRay.Inequality(DRay, DRay)
- uid: Vim.Math3d.DRay.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_op_Inequality_
  commentId: Overload:Vim.Math3d.DRay.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DRay.Inequality
  nameWithType: DRay.Inequality
- uid: Vim.Math3d.DRay.Position
  name: Position
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Position
  commentId: F:Vim.Math3d.DRay.Position
  fullName: Vim.Math3d.DRay.Position
  nameWithType: DRay.Position
- uid: Vim.Math3d.DRay.SetDirection(Vim.Math3d.DVector3)
  name: SetDirection(DVector3)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_SetDirection_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DRay.SetDirection(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DRay.SetDirection(Vim.Math3d.DVector3)
  nameWithType: DRay.SetDirection(DVector3)
- uid: Vim.Math3d.DRay.SetDirection*
  name: SetDirection
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_SetDirection_
  commentId: Overload:Vim.Math3d.DRay.SetDirection
  isSpec: "True"
  fullName: Vim.Math3d.DRay.SetDirection
  nameWithType: DRay.SetDirection
- uid: Vim.Math3d.DRay.SetPosition(Vim.Math3d.DVector3)
  name: SetPosition(DVector3)
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_SetPosition_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DRay.SetPosition(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DRay.SetPosition(Vim.Math3d.DVector3)
  nameWithType: DRay.SetPosition(DVector3)
- uid: Vim.Math3d.DRay.SetPosition*
  name: SetPosition
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_SetPosition_
  commentId: Overload:Vim.Math3d.DRay.SetPosition
  isSpec: "True"
  fullName: Vim.Math3d.DRay.SetPosition
  nameWithType: DRay.SetPosition
- uid: Vim.Math3d.DRay.ToString
  name: ToString()
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_ToString
  commentId: M:Vim.Math3d.DRay.ToString
  fullName: Vim.Math3d.DRay.ToString()
  nameWithType: DRay.ToString()
- uid: Vim.Math3d.DRay.ToString*
  name: ToString
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_ToString_
  commentId: Overload:Vim.Math3d.DRay.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DRay.ToString
  nameWithType: DRay.ToString
- uid: Vim.Math3d.DRay.Zero
  name: Zero
  href: api/Vim.Math3d.DRay.html#Vim_Math3d_DRay_Zero
  commentId: F:Vim.Math3d.DRay.Zero
  fullName: Vim.Math3d.DRay.Zero
  nameWithType: DRay.Zero
- uid: Vim.Math3d.DSphere
  name: DSphere
  href: api/Vim.Math3d.DSphere.html
  commentId: T:Vim.Math3d.DSphere
  fullName: Vim.Math3d.DSphere
  nameWithType: DSphere
- uid: Vim.Math3d.DSphere.#ctor(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name: DSphere((DVector3 center, Double radius))
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere__ctor_System_ValueTuple_Vim_Math3d_DVector3_System_Double__
  commentId: M:Vim.Math3d.DSphere.#ctor(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name.vb: DSphere((center As DVector3, radius As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.DSphere.DSphere(System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.DSphere.DSphere(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: DSphere.DSphere((DVector3 center, Double radius))
  nameWithType.vb: DSphere.DSphere((center As DVector3, radius As Double)(Of DVector3, Double))
- uid: Vim.Math3d.DSphere.#ctor(Vim.Math3d.DVector3,System.Double)
  name: DSphere(DVector3, Double)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere__ctor_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DSphere.#ctor(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DSphere.DSphere(Vim.Math3d.DVector3, System.Double)
  nameWithType: DSphere.DSphere(DVector3, Double)
- uid: Vim.Math3d.DSphere.#ctor*
  name: DSphere
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere__ctor_
  commentId: Overload:Vim.Math3d.DSphere.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.DSphere
  nameWithType: DSphere.DSphere
- uid: Vim.Math3d.DSphere.AlmostEquals(Vim.Math3d.DSphere,System.Single)
  name: AlmostEquals(DSphere, Single)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_AlmostEquals_Vim_Math3d_DSphere_System_Single_
  commentId: M:Vim.Math3d.DSphere.AlmostEquals(Vim.Math3d.DSphere,System.Single)
  fullName: Vim.Math3d.DSphere.AlmostEquals(Vim.Math3d.DSphere, System.Single)
  nameWithType: DSphere.AlmostEquals(DSphere, Single)
- uid: Vim.Math3d.DSphere.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_AlmostEquals_
  commentId: Overload:Vim.Math3d.DSphere.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.AlmostEquals
  nameWithType: DSphere.AlmostEquals
- uid: Vim.Math3d.DSphere.Center
  name: Center
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Center
  commentId: F:Vim.Math3d.DSphere.Center
  fullName: Vim.Math3d.DSphere.Center
  nameWithType: DSphere.Center
- uid: Vim.Math3d.DSphere.Create(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name: Create((DVector3 center, Double radius))
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Create_System_ValueTuple_Vim_Math3d_DVector3_System_Double__
  commentId: M:Vim.Math3d.DSphere.Create(System.ValueTuple{Vim.Math3d.DVector3,System.Double})
  name.vb: Create((center As DVector3, radius As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.DSphere.Create(System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.DSphere.Create(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: DSphere.Create((DVector3 center, Double radius))
  nameWithType.vb: DSphere.Create((center As DVector3, radius As Double)(Of DVector3, Double))
- uid: Vim.Math3d.DSphere.Create(Vim.Math3d.DVector3,System.Double)
  name: Create(DVector3, Double)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Create_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DSphere.Create(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DSphere.Create(Vim.Math3d.DVector3, System.Double)
  nameWithType: DSphere.Create(DVector3, Double)
- uid: Vim.Math3d.DSphere.Create*
  name: Create
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Create_
  commentId: Overload:Vim.Math3d.DSphere.Create
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.Create
  nameWithType: DSphere.Create
- uid: Vim.Math3d.DSphere.Deconstruct(Vim.Math3d.DVector3@,System.Double@)
  name: Deconstruct(out DVector3, out Double)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Deconstruct_Vim_Math3d_DVector3__System_Double__
  commentId: M:Vim.Math3d.DSphere.Deconstruct(Vim.Math3d.DVector3@,System.Double@)
  name.vb: Deconstruct(ByRef DVector3, ByRef Double)
  fullName: Vim.Math3d.DSphere.Deconstruct(out Vim.Math3d.DVector3, out System.Double)
  fullName.vb: Vim.Math3d.DSphere.Deconstruct(ByRef Vim.Math3d.DVector3, ByRef System.Double)
  nameWithType: DSphere.Deconstruct(out DVector3, out Double)
  nameWithType.vb: DSphere.Deconstruct(ByRef DVector3, ByRef Double)
- uid: Vim.Math3d.DSphere.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Deconstruct_
  commentId: Overload:Vim.Math3d.DSphere.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.Deconstruct
  nameWithType: DSphere.Deconstruct
- uid: Vim.Math3d.DSphere.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Equals_System_Object_
  commentId: M:Vim.Math3d.DSphere.Equals(System.Object)
  fullName: Vim.Math3d.DSphere.Equals(System.Object)
  nameWithType: DSphere.Equals(Object)
- uid: Vim.Math3d.DSphere.Equals(Vim.Math3d.DSphere)
  name: Equals(DSphere)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Equals_Vim_Math3d_DSphere_
  commentId: M:Vim.Math3d.DSphere.Equals(Vim.Math3d.DSphere)
  fullName: Vim.Math3d.DSphere.Equals(Vim.Math3d.DSphere)
  nameWithType: DSphere.Equals(DSphere)
- uid: Vim.Math3d.DSphere.Equals*
  name: Equals
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Equals_
  commentId: Overload:Vim.Math3d.DSphere.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.Equals
  nameWithType: DSphere.Equals
- uid: Vim.Math3d.DSphere.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_GetHashCode
  commentId: M:Vim.Math3d.DSphere.GetHashCode
  fullName: Vim.Math3d.DSphere.GetHashCode()
  nameWithType: DSphere.GetHashCode()
- uid: Vim.Math3d.DSphere.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_GetHashCode_
  commentId: Overload:Vim.Math3d.DSphere.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.GetHashCode
  nameWithType: DSphere.GetHashCode
- uid: Vim.Math3d.DSphere.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_MaxValue
  commentId: F:Vim.Math3d.DSphere.MaxValue
  fullName: Vim.Math3d.DSphere.MaxValue
  nameWithType: DSphere.MaxValue
- uid: Vim.Math3d.DSphere.MinValue
  name: MinValue
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_MinValue
  commentId: F:Vim.Math3d.DSphere.MinValue
  fullName: Vim.Math3d.DSphere.MinValue
  nameWithType: DSphere.MinValue
- uid: Vim.Math3d.DSphere.op_Equality(Vim.Math3d.DSphere,Vim.Math3d.DSphere)
  name: Equality(DSphere, DSphere)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_op_Equality_Vim_Math3d_DSphere_Vim_Math3d_DSphere_
  commentId: M:Vim.Math3d.DSphere.op_Equality(Vim.Math3d.DSphere,Vim.Math3d.DSphere)
  fullName: Vim.Math3d.DSphere.Equality(Vim.Math3d.DSphere, Vim.Math3d.DSphere)
  nameWithType: DSphere.Equality(DSphere, DSphere)
- uid: Vim.Math3d.DSphere.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_op_Equality_
  commentId: Overload:Vim.Math3d.DSphere.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.Equality
  nameWithType: DSphere.Equality
- uid: Vim.Math3d.DSphere.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,System.Double})~Vim.Math3d.DSphere
  name: Implicit((DVector3 center, Double radius) to DSphere)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_op_Implicit_System_ValueTuple_Vim_Math3d_DVector3_System_Double___Vim_Math3d_DSphere
  commentId: M:Vim.Math3d.DSphere.op_Implicit(System.ValueTuple{Vim.Math3d.DVector3,System.Double})~Vim.Math3d.DSphere
  name.vb: Widening((center As DVector3, radius As Double)(Of DVector3, Double) to DSphere)
  fullName: Vim.Math3d.DSphere.Implicit(System.ValueTuple<Vim.Math3d.DVector3, System.Double> to Vim.Math3d.DSphere)
  fullName.vb: Vim.Math3d.DSphere.Widening(System.ValueTuple(Of Vim.Math3d.DVector3, System.Double) to Vim.Math3d.DSphere)
  nameWithType: DSphere.Implicit((DVector3 center, Double radius) to DSphere)
  nameWithType.vb: DSphere.Widening((center As DVector3, radius As Double)(Of DVector3, Double) to DSphere)
- uid: Vim.Math3d.DSphere.op_Implicit(Vim.Math3d.DSphere)~System.ValueTuple{Vim.Math3d.DVector3,System.Double}
  name: Implicit(DSphere to (DVector3 center, Double radius))
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_op_Implicit_Vim_Math3d_DSphere__System_ValueTuple_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DSphere.op_Implicit(Vim.Math3d.DSphere)~System.ValueTuple{Vim.Math3d.DVector3,System.Double}
  name.vb: Widening(DSphere to (center As DVector3, radius As Double)(Of DVector3, Double))
  fullName: Vim.Math3d.DSphere.Implicit(Vim.Math3d.DSphere to System.ValueTuple<Vim.Math3d.DVector3, System.Double>)
  fullName.vb: Vim.Math3d.DSphere.Widening(Vim.Math3d.DSphere to System.ValueTuple(Of Vim.Math3d.DVector3, System.Double))
  nameWithType: DSphere.Implicit(DSphere to (DVector3 center, Double radius))
  nameWithType.vb: DSphere.Widening(DSphere to (center As DVector3, radius As Double)(Of DVector3, Double))
- uid: Vim.Math3d.DSphere.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_op_Implicit_
  commentId: Overload:Vim.Math3d.DSphere.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DSphere.Implicit
  fullName.vb: Vim.Math3d.DSphere.Widening
  nameWithType: DSphere.Implicit
  nameWithType.vb: DSphere.Widening
- uid: Vim.Math3d.DSphere.op_Inequality(Vim.Math3d.DSphere,Vim.Math3d.DSphere)
  name: Inequality(DSphere, DSphere)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_op_Inequality_Vim_Math3d_DSphere_Vim_Math3d_DSphere_
  commentId: M:Vim.Math3d.DSphere.op_Inequality(Vim.Math3d.DSphere,Vim.Math3d.DSphere)
  fullName: Vim.Math3d.DSphere.Inequality(Vim.Math3d.DSphere, Vim.Math3d.DSphere)
  nameWithType: DSphere.Inequality(DSphere, DSphere)
- uid: Vim.Math3d.DSphere.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_op_Inequality_
  commentId: Overload:Vim.Math3d.DSphere.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.Inequality
  nameWithType: DSphere.Inequality
- uid: Vim.Math3d.DSphere.Radius
  name: Radius
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Radius
  commentId: F:Vim.Math3d.DSphere.Radius
  fullName: Vim.Math3d.DSphere.Radius
  nameWithType: DSphere.Radius
- uid: Vim.Math3d.DSphere.SetCenter(Vim.Math3d.DVector3)
  name: SetCenter(DVector3)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_SetCenter_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DSphere.SetCenter(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DSphere.SetCenter(Vim.Math3d.DVector3)
  nameWithType: DSphere.SetCenter(DVector3)
- uid: Vim.Math3d.DSphere.SetCenter*
  name: SetCenter
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_SetCenter_
  commentId: Overload:Vim.Math3d.DSphere.SetCenter
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.SetCenter
  nameWithType: DSphere.SetCenter
- uid: Vim.Math3d.DSphere.SetRadius(System.Double)
  name: SetRadius(Double)
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_SetRadius_System_Double_
  commentId: M:Vim.Math3d.DSphere.SetRadius(System.Double)
  fullName: Vim.Math3d.DSphere.SetRadius(System.Double)
  nameWithType: DSphere.SetRadius(Double)
- uid: Vim.Math3d.DSphere.SetRadius*
  name: SetRadius
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_SetRadius_
  commentId: Overload:Vim.Math3d.DSphere.SetRadius
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.SetRadius
  nameWithType: DSphere.SetRadius
- uid: Vim.Math3d.DSphere.ToString
  name: ToString()
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_ToString
  commentId: M:Vim.Math3d.DSphere.ToString
  fullName: Vim.Math3d.DSphere.ToString()
  nameWithType: DSphere.ToString()
- uid: Vim.Math3d.DSphere.ToString*
  name: ToString
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_ToString_
  commentId: Overload:Vim.Math3d.DSphere.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DSphere.ToString
  nameWithType: DSphere.ToString
- uid: Vim.Math3d.DSphere.Zero
  name: Zero
  href: api/Vim.Math3d.DSphere.html#Vim_Math3d_DSphere_Zero
  commentId: F:Vim.Math3d.DSphere.Zero
  fullName: Vim.Math3d.DSphere.Zero
  nameWithType: DSphere.Zero
- uid: Vim.Math3d.DVector2
  name: DVector2
  href: api/Vim.Math3d.DVector2.html
  commentId: T:Vim.Math3d.DVector2
  fullName: Vim.Math3d.DVector2
  nameWithType: DVector2
- uid: Vim.Math3d.DVector2.#ctor(System.Double)
  name: DVector2(Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2__ctor_System_Double_
  commentId: M:Vim.Math3d.DVector2.#ctor(System.Double)
  fullName: Vim.Math3d.DVector2.DVector2(System.Double)
  nameWithType: DVector2.DVector2(Double)
- uid: Vim.Math3d.DVector2.#ctor(System.Double,System.Double)
  name: DVector2(Double, Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2__ctor_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector2.#ctor(System.Double,System.Double)
  fullName: Vim.Math3d.DVector2.DVector2(System.Double, System.Double)
  nameWithType: DVector2.DVector2(Double, Double)
- uid: Vim.Math3d.DVector2.#ctor(System.ValueTuple{System.Double,System.Double})
  name: DVector2((Double x, Double y))
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2__ctor_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.DVector2.#ctor(System.ValueTuple{System.Double,System.Double})
  name.vb: DVector2((x As Double, y As Double)(Of Double, Double))
  fullName: Vim.Math3d.DVector2.DVector2(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector2.DVector2(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: DVector2.DVector2((Double x, Double y))
  nameWithType.vb: DVector2.DVector2((x As Double, y As Double)(Of Double, Double))
- uid: Vim.Math3d.DVector2.#ctor*
  name: DVector2
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2__ctor_
  commentId: Overload:Vim.Math3d.DVector2.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.DVector2
  nameWithType: DVector2.DVector2
- uid: Vim.Math3d.DVector2.AlmostEquals(Vim.Math3d.DVector2,System.Single)
  name: AlmostEquals(DVector2, Single)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_AlmostEquals_Vim_Math3d_DVector2_System_Single_
  commentId: M:Vim.Math3d.DVector2.AlmostEquals(Vim.Math3d.DVector2,System.Single)
  fullName: Vim.Math3d.DVector2.AlmostEquals(Vim.Math3d.DVector2, System.Single)
  nameWithType: DVector2.AlmostEquals(DVector2, Single)
- uid: Vim.Math3d.DVector2.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_AlmostEquals_
  commentId: Overload:Vim.Math3d.DVector2.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.AlmostEquals
  nameWithType: DVector2.AlmostEquals
- uid: Vim.Math3d.DVector2.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.DVector2.AlmostZero(System.Single)
  fullName: Vim.Math3d.DVector2.AlmostZero(System.Single)
  nameWithType: DVector2.AlmostZero(Single)
- uid: Vim.Math3d.DVector2.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_AlmostZero_
  commentId: Overload:Vim.Math3d.DVector2.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.AlmostZero
  nameWithType: DVector2.AlmostZero
- uid: Vim.Math3d.DVector2.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_AnyComponentNegative
  commentId: M:Vim.Math3d.DVector2.AnyComponentNegative
  fullName: Vim.Math3d.DVector2.AnyComponentNegative()
  nameWithType: DVector2.AnyComponentNegative()
- uid: Vim.Math3d.DVector2.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.DVector2.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.AnyComponentNegative
  nameWithType: DVector2.AnyComponentNegative
- uid: Vim.Math3d.DVector2.CompareTo(Vim.Math3d.DVector2)
  name: CompareTo(DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_CompareTo_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.CompareTo(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.CompareTo(Vim.Math3d.DVector2)
  nameWithType: DVector2.CompareTo(DVector2)
- uid: Vim.Math3d.DVector2.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_CompareTo_
  commentId: Overload:Vim.Math3d.DVector2.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.CompareTo
  nameWithType: DVector2.CompareTo
- uid: Vim.Math3d.DVector2.Create(System.Double,System.Double)
  name: Create(Double, Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Create_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector2.Create(System.Double,System.Double)
  fullName: Vim.Math3d.DVector2.Create(System.Double, System.Double)
  nameWithType: DVector2.Create(Double, Double)
- uid: Vim.Math3d.DVector2.Create(System.ValueTuple{System.Double,System.Double})
  name: Create((Double x, Double y))
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Create_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.DVector2.Create(System.ValueTuple{System.Double,System.Double})
  name.vb: Create((x As Double, y As Double)(Of Double, Double))
  fullName: Vim.Math3d.DVector2.Create(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector2.Create(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: DVector2.Create((Double x, Double y))
  nameWithType.vb: DVector2.Create((x As Double, y As Double)(Of Double, Double))
- uid: Vim.Math3d.DVector2.Create*
  name: Create
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Create_
  commentId: Overload:Vim.Math3d.DVector2.Create
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Create
  nameWithType: DVector2.Create
- uid: Vim.Math3d.DVector2.Deconstruct(System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Deconstruct_System_Double__System_Double__
  commentId: M:Vim.Math3d.DVector2.Deconstruct(System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
  fullName: Vim.Math3d.DVector2.Deconstruct(out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.DVector2.Deconstruct(ByRef System.Double, ByRef System.Double)
  nameWithType: DVector2.Deconstruct(out Double, out Double)
  nameWithType.vb: DVector2.Deconstruct(ByRef Double, ByRef Double)
- uid: Vim.Math3d.DVector2.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Deconstruct_
  commentId: Overload:Vim.Math3d.DVector2.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Deconstruct
  nameWithType: DVector2.Deconstruct
- uid: Vim.Math3d.DVector2.Dot(Vim.Math3d.DVector2)
  name: Dot(DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Dot_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.Dot(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Dot(Vim.Math3d.DVector2)
  nameWithType: DVector2.Dot(DVector2)
- uid: Vim.Math3d.DVector2.Dot(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Dot(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Dot_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.Dot(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Dot(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.Dot(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.Dot*
  name: Dot
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Dot_
  commentId: Overload:Vim.Math3d.DVector2.Dot
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Dot
  nameWithType: DVector2.Dot
- uid: Vim.Math3d.DVector2.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Equals_System_Object_
  commentId: M:Vim.Math3d.DVector2.Equals(System.Object)
  fullName: Vim.Math3d.DVector2.Equals(System.Object)
  nameWithType: DVector2.Equals(Object)
- uid: Vim.Math3d.DVector2.Equals(Vim.Math3d.DVector2)
  name: Equals(DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Equals_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.Equals(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Equals(Vim.Math3d.DVector2)
  nameWithType: DVector2.Equals(DVector2)
- uid: Vim.Math3d.DVector2.Equals*
  name: Equals
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Equals_
  commentId: Overload:Vim.Math3d.DVector2.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Equals
  nameWithType: DVector2.Equals
- uid: Vim.Math3d.DVector2.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.DVector2.GetComponent(System.Int32)
  fullName: Vim.Math3d.DVector2.GetComponent(System.Int32)
  nameWithType: DVector2.GetComponent(Int32)
- uid: Vim.Math3d.DVector2.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_GetComponent_
  commentId: Overload:Vim.Math3d.DVector2.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.GetComponent
  nameWithType: DVector2.GetComponent
- uid: Vim.Math3d.DVector2.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_GetHashCode
  commentId: M:Vim.Math3d.DVector2.GetHashCode
  fullName: Vim.Math3d.DVector2.GetHashCode()
  nameWithType: DVector2.GetHashCode()
- uid: Vim.Math3d.DVector2.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_GetHashCode_
  commentId: Overload:Vim.Math3d.DVector2.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.GetHashCode
  nameWithType: DVector2.GetHashCode
- uid: Vim.Math3d.DVector2.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_IsInfinity
  commentId: M:Vim.Math3d.DVector2.IsInfinity
  fullName: Vim.Math3d.DVector2.IsInfinity()
  nameWithType: DVector2.IsInfinity()
- uid: Vim.Math3d.DVector2.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_IsInfinity_
  commentId: Overload:Vim.Math3d.DVector2.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.IsInfinity
  nameWithType: DVector2.IsInfinity
- uid: Vim.Math3d.DVector2.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_IsNaN
  commentId: M:Vim.Math3d.DVector2.IsNaN
  fullName: Vim.Math3d.DVector2.IsNaN()
  nameWithType: DVector2.IsNaN()
- uid: Vim.Math3d.DVector2.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_IsNaN_
  commentId: Overload:Vim.Math3d.DVector2.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.IsNaN
  nameWithType: DVector2.IsNaN
- uid: Vim.Math3d.DVector2.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Magnitude
  commentId: M:Vim.Math3d.DVector2.Magnitude
  fullName: Vim.Math3d.DVector2.Magnitude()
  nameWithType: DVector2.Magnitude()
- uid: Vim.Math3d.DVector2.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Magnitude_
  commentId: Overload:Vim.Math3d.DVector2.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Magnitude
  nameWithType: DVector2.Magnitude
- uid: Vim.Math3d.DVector2.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MagnitudeSquared
  commentId: M:Vim.Math3d.DVector2.MagnitudeSquared
  fullName: Vim.Math3d.DVector2.MagnitudeSquared()
  nameWithType: DVector2.MagnitudeSquared()
- uid: Vim.Math3d.DVector2.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.DVector2.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.MagnitudeSquared
  nameWithType: DVector2.MagnitudeSquared
- uid: Vim.Math3d.DVector2.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MaxComponent
  commentId: M:Vim.Math3d.DVector2.MaxComponent
  fullName: Vim.Math3d.DVector2.MaxComponent()
  nameWithType: DVector2.MaxComponent()
- uid: Vim.Math3d.DVector2.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MaxComponent_
  commentId: Overload:Vim.Math3d.DVector2.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.MaxComponent
  nameWithType: DVector2.MaxComponent
- uid: Vim.Math3d.DVector2.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MaxValue
  commentId: F:Vim.Math3d.DVector2.MaxValue
  fullName: Vim.Math3d.DVector2.MaxValue
  nameWithType: DVector2.MaxValue
- uid: Vim.Math3d.DVector2.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MinComponent
  commentId: M:Vim.Math3d.DVector2.MinComponent
  fullName: Vim.Math3d.DVector2.MinComponent()
  nameWithType: DVector2.MinComponent()
- uid: Vim.Math3d.DVector2.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MinComponent_
  commentId: Overload:Vim.Math3d.DVector2.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.MinComponent
  nameWithType: DVector2.MinComponent
- uid: Vim.Math3d.DVector2.MinValue
  name: MinValue
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_MinValue
  commentId: F:Vim.Math3d.DVector2.MinValue
  fullName: Vim.Math3d.DVector2.MinValue
  nameWithType: DVector2.MinValue
- uid: Vim.Math3d.DVector2.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_NumComponents
  commentId: F:Vim.Math3d.DVector2.NumComponents
  fullName: Vim.Math3d.DVector2.NumComponents
  nameWithType: DVector2.NumComponents
- uid: Vim.Math3d.DVector2.One
  name: One
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_One
  commentId: F:Vim.Math3d.DVector2.One
  fullName: Vim.Math3d.DVector2.One
  nameWithType: DVector2.One
- uid: Vim.Math3d.DVector2.op_Addition(System.Double,Vim.Math3d.DVector2)
  name: Addition(Double, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Addition_System_Double_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Addition(System.Double,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Addition(System.Double, Vim.Math3d.DVector2)
  nameWithType: DVector2.Addition(Double, DVector2)
- uid: Vim.Math3d.DVector2.op_Addition(Vim.Math3d.DVector2,System.Double)
  name: Addition(DVector2, Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Addition_Vim_Math3d_DVector2_System_Double_
  commentId: M:Vim.Math3d.DVector2.op_Addition(Vim.Math3d.DVector2,System.Double)
  fullName: Vim.Math3d.DVector2.Addition(Vim.Math3d.DVector2, System.Double)
  nameWithType: DVector2.Addition(DVector2, Double)
- uid: Vim.Math3d.DVector2.op_Addition(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Addition(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Addition_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Addition(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Addition(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.Addition(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_Addition*
  name: Addition
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Addition_
  commentId: Overload:Vim.Math3d.DVector2.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Addition
  nameWithType: DVector2.Addition
- uid: Vim.Math3d.DVector2.op_Division(System.Double,Vim.Math3d.DVector2)
  name: Division(Double, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Division_System_Double_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Division(System.Double,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Division(System.Double, Vim.Math3d.DVector2)
  nameWithType: DVector2.Division(Double, DVector2)
- uid: Vim.Math3d.DVector2.op_Division(Vim.Math3d.DVector2,System.Double)
  name: Division(DVector2, Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Division_Vim_Math3d_DVector2_System_Double_
  commentId: M:Vim.Math3d.DVector2.op_Division(Vim.Math3d.DVector2,System.Double)
  fullName: Vim.Math3d.DVector2.Division(Vim.Math3d.DVector2, System.Double)
  nameWithType: DVector2.Division(DVector2, Double)
- uid: Vim.Math3d.DVector2.op_Division(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Division(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Division_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Division(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Division(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.Division(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_Division*
  name: Division
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Division_
  commentId: Overload:Vim.Math3d.DVector2.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Division
  nameWithType: DVector2.Division
- uid: Vim.Math3d.DVector2.op_Equality(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Equality(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Equality_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Equality(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Equality(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.Equality(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Equality_
  commentId: Overload:Vim.Math3d.DVector2.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Equality
  nameWithType: DVector2.Equality
- uid: Vim.Math3d.DVector2.op_GreaterThan(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: GreaterThan(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_GreaterThan_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_GreaterThan(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.GreaterThan(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.GreaterThan(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_GreaterThan_
  commentId: Overload:Vim.Math3d.DVector2.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.GreaterThan
  nameWithType: DVector2.GreaterThan
- uid: Vim.Math3d.DVector2.op_GreaterThanOrEqual(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: GreaterThanOrEqual(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_GreaterThanOrEqual_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_GreaterThanOrEqual(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.GreaterThanOrEqual(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.GreaterThanOrEqual(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.DVector2.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.GreaterThanOrEqual
  nameWithType: DVector2.GreaterThanOrEqual
- uid: Vim.Math3d.DVector2.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.DVector2
  name: Implicit((Double x, Double y) to DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Implicit_System_ValueTuple_System_Double_System_Double___Vim_Math3d_DVector2
  commentId: M:Vim.Math3d.DVector2.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.DVector2
  name.vb: Widening((x As Double, y As Double)(Of Double, Double) to DVector2)
  fullName: Vim.Math3d.DVector2.Implicit(System.ValueTuple<System.Double, System.Double> to Vim.Math3d.DVector2)
  fullName.vb: Vim.Math3d.DVector2.Widening(System.ValueTuple(Of System.Double, System.Double) to Vim.Math3d.DVector2)
  nameWithType: DVector2.Implicit((Double x, Double y) to DVector2)
  nameWithType.vb: DVector2.Widening((x As Double, y As Double)(Of Double, Double) to DVector2)
- uid: Vim.Math3d.DVector2.op_Implicit(Vim.Math3d.DVector2)~System.ValueTuple{System.Double,System.Double}
  name: Implicit(DVector2 to (Double x, Double y))
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Implicit_Vim_Math3d_DVector2__System_ValueTuple_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector2.op_Implicit(Vim.Math3d.DVector2)~System.ValueTuple{System.Double,System.Double}
  name.vb: Widening(DVector2 to (x As Double, y As Double)(Of Double, Double))
  fullName: Vim.Math3d.DVector2.Implicit(Vim.Math3d.DVector2 to System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector2.Widening(Vim.Math3d.DVector2 to System.ValueTuple(Of System.Double, System.Double))
  nameWithType: DVector2.Implicit(DVector2 to (Double x, Double y))
  nameWithType.vb: DVector2.Widening(DVector2 to (x As Double, y As Double)(Of Double, Double))
- uid: Vim.Math3d.DVector2.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Implicit_
  commentId: Overload:Vim.Math3d.DVector2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DVector2.Implicit
  fullName.vb: Vim.Math3d.DVector2.Widening
  nameWithType: DVector2.Implicit
  nameWithType.vb: DVector2.Widening
- uid: Vim.Math3d.DVector2.op_Inequality(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Inequality(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Inequality_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Inequality(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Inequality(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.Inequality(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Inequality_
  commentId: Overload:Vim.Math3d.DVector2.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Inequality
  nameWithType: DVector2.Inequality
- uid: Vim.Math3d.DVector2.op_LessThan(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: LessThan(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_LessThan_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_LessThan(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.LessThan(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.LessThan(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_LessThan_
  commentId: Overload:Vim.Math3d.DVector2.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.LessThan
  nameWithType: DVector2.LessThan
- uid: Vim.Math3d.DVector2.op_LessThanOrEqual(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: LessThanOrEqual(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_LessThanOrEqual_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_LessThanOrEqual(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.LessThanOrEqual(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.LessThanOrEqual(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.DVector2.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.LessThanOrEqual
  nameWithType: DVector2.LessThanOrEqual
- uid: Vim.Math3d.DVector2.op_Multiply(System.Double,Vim.Math3d.DVector2)
  name: Multiply(Double, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Multiply_System_Double_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Multiply(System.Double,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Multiply(System.Double, Vim.Math3d.DVector2)
  nameWithType: DVector2.Multiply(Double, DVector2)
- uid: Vim.Math3d.DVector2.op_Multiply(Vim.Math3d.DVector2,System.Double)
  name: Multiply(DVector2, Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Multiply_Vim_Math3d_DVector2_System_Double_
  commentId: M:Vim.Math3d.DVector2.op_Multiply(Vim.Math3d.DVector2,System.Double)
  fullName: Vim.Math3d.DVector2.Multiply(Vim.Math3d.DVector2, System.Double)
  nameWithType: DVector2.Multiply(DVector2, Double)
- uid: Vim.Math3d.DVector2.op_Multiply(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Multiply(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Multiply_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Multiply(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Multiply(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.Multiply(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Multiply_
  commentId: Overload:Vim.Math3d.DVector2.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Multiply
  nameWithType: DVector2.Multiply
- uid: Vim.Math3d.DVector2.op_Subtraction(System.Double,Vim.Math3d.DVector2)
  name: Subtraction(Double, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Subtraction_System_Double_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Subtraction(System.Double,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Subtraction(System.Double, Vim.Math3d.DVector2)
  nameWithType: DVector2.Subtraction(Double, DVector2)
- uid: Vim.Math3d.DVector2.op_Subtraction(Vim.Math3d.DVector2,System.Double)
  name: Subtraction(DVector2, Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Subtraction_Vim_Math3d_DVector2_System_Double_
  commentId: M:Vim.Math3d.DVector2.op_Subtraction(Vim.Math3d.DVector2,System.Double)
  fullName: Vim.Math3d.DVector2.Subtraction(Vim.Math3d.DVector2, System.Double)
  nameWithType: DVector2.Subtraction(DVector2, Double)
- uid: Vim.Math3d.DVector2.op_Subtraction(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Subtraction(DVector2, DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Subtraction_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_Subtraction(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.Subtraction(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: DVector2.Subtraction(DVector2, DVector2)
- uid: Vim.Math3d.DVector2.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_Subtraction_
  commentId: Overload:Vim.Math3d.DVector2.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Subtraction
  nameWithType: DVector2.Subtraction
- uid: Vim.Math3d.DVector2.op_UnaryNegation(Vim.Math3d.DVector2)
  name: UnaryNegation(DVector2)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_UnaryNegation_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.DVector2.op_UnaryNegation(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.DVector2.UnaryNegation(Vim.Math3d.DVector2)
  nameWithType: DVector2.UnaryNegation(DVector2)
- uid: Vim.Math3d.DVector2.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.DVector2.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.UnaryNegation
  nameWithType: DVector2.UnaryNegation
- uid: Vim.Math3d.DVector2.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_ProductComponents
  commentId: M:Vim.Math3d.DVector2.ProductComponents
  fullName: Vim.Math3d.DVector2.ProductComponents()
  nameWithType: DVector2.ProductComponents()
- uid: Vim.Math3d.DVector2.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_ProductComponents_
  commentId: Overload:Vim.Math3d.DVector2.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.ProductComponents
  nameWithType: DVector2.ProductComponents
- uid: Vim.Math3d.DVector2.SetX(System.Double)
  name: SetX(Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SetX_System_Double_
  commentId: M:Vim.Math3d.DVector2.SetX(System.Double)
  fullName: Vim.Math3d.DVector2.SetX(System.Double)
  nameWithType: DVector2.SetX(Double)
- uid: Vim.Math3d.DVector2.SetX*
  name: SetX
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SetX_
  commentId: Overload:Vim.Math3d.DVector2.SetX
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.SetX
  nameWithType: DVector2.SetX
- uid: Vim.Math3d.DVector2.SetY(System.Double)
  name: SetY(Double)
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SetY_System_Double_
  commentId: M:Vim.Math3d.DVector2.SetY(System.Double)
  fullName: Vim.Math3d.DVector2.SetY(System.Double)
  nameWithType: DVector2.SetY(Double)
- uid: Vim.Math3d.DVector2.SetY*
  name: SetY
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SetY_
  commentId: Overload:Vim.Math3d.DVector2.SetY
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.SetY
  nameWithType: DVector2.SetY
- uid: Vim.Math3d.DVector2.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SumComponents
  commentId: M:Vim.Math3d.DVector2.SumComponents
  fullName: Vim.Math3d.DVector2.SumComponents()
  nameWithType: DVector2.SumComponents()
- uid: Vim.Math3d.DVector2.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SumComponents_
  commentId: Overload:Vim.Math3d.DVector2.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.SumComponents
  nameWithType: DVector2.SumComponents
- uid: Vim.Math3d.DVector2.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SumSqrComponents
  commentId: M:Vim.Math3d.DVector2.SumSqrComponents
  fullName: Vim.Math3d.DVector2.SumSqrComponents()
  nameWithType: DVector2.SumSqrComponents()
- uid: Vim.Math3d.DVector2.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_SumSqrComponents_
  commentId: Overload:Vim.Math3d.DVector2.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.SumSqrComponents
  nameWithType: DVector2.SumSqrComponents
- uid: Vim.Math3d.DVector2.ToString
  name: ToString()
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_ToString
  commentId: M:Vim.Math3d.DVector2.ToString
  fullName: Vim.Math3d.DVector2.ToString()
  nameWithType: DVector2.ToString()
- uid: Vim.Math3d.DVector2.ToString*
  name: ToString
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_ToString_
  commentId: Overload:Vim.Math3d.DVector2.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.ToString
  nameWithType: DVector2.ToString
- uid: Vim.Math3d.DVector2.UnitX
  name: UnitX
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_UnitX
  commentId: F:Vim.Math3d.DVector2.UnitX
  fullName: Vim.Math3d.DVector2.UnitX
  nameWithType: DVector2.UnitX
- uid: Vim.Math3d.DVector2.UnitY
  name: UnitY
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_UnitY
  commentId: F:Vim.Math3d.DVector2.UnitY
  fullName: Vim.Math3d.DVector2.UnitY
  nameWithType: DVector2.UnitY
- uid: Vim.Math3d.DVector2.Vector2
  name: Vector2
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Vector2
  commentId: P:Vim.Math3d.DVector2.Vector2
  fullName: Vim.Math3d.DVector2.Vector2
  nameWithType: DVector2.Vector2
- uid: Vim.Math3d.DVector2.Vector2*
  name: Vector2
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Vector2_
  commentId: Overload:Vim.Math3d.DVector2.Vector2
  isSpec: "True"
  fullName: Vim.Math3d.DVector2.Vector2
  nameWithType: DVector2.Vector2
- uid: Vim.Math3d.DVector2.X
  name: X
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_X
  commentId: F:Vim.Math3d.DVector2.X
  fullName: Vim.Math3d.DVector2.X
  nameWithType: DVector2.X
- uid: Vim.Math3d.DVector2.Y
  name: Y
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Y
  commentId: F:Vim.Math3d.DVector2.Y
  fullName: Vim.Math3d.DVector2.Y
  nameWithType: DVector2.Y
- uid: Vim.Math3d.DVector2.Zero
  name: Zero
  href: api/Vim.Math3d.DVector2.html#Vim_Math3d_DVector2_Zero
  commentId: F:Vim.Math3d.DVector2.Zero
  fullName: Vim.Math3d.DVector2.Zero
  nameWithType: DVector2.Zero
- uid: Vim.Math3d.DVector3
  name: DVector3
  href: api/Vim.Math3d.DVector3.html
  commentId: T:Vim.Math3d.DVector3
  fullName: Vim.Math3d.DVector3
  nameWithType: DVector3
- uid: Vim.Math3d.DVector3.#ctor(System.Double)
  name: DVector3(Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3__ctor_System_Double_
  commentId: M:Vim.Math3d.DVector3.#ctor(System.Double)
  fullName: Vim.Math3d.DVector3.DVector3(System.Double)
  nameWithType: DVector3.DVector3(Double)
- uid: Vim.Math3d.DVector3.#ctor(System.Double,System.Double,System.Double)
  name: DVector3(Double, Double, Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3__ctor_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector3.#ctor(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.DVector3.DVector3(System.Double, System.Double, System.Double)
  nameWithType: DVector3.DVector3(Double, Double, Double)
- uid: Vim.Math3d.DVector3.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name: DVector3((Double x, Double y, Double z))
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3__ctor_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.DVector3.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: DVector3((x As Double, y As Double, z As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.DVector3.DVector3(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector3.DVector3(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: DVector3.DVector3((Double x, Double y, Double z))
  nameWithType.vb: DVector3.DVector3((x As Double, y As Double, z As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.DVector3.#ctor*
  name: DVector3
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3__ctor_
  commentId: Overload:Vim.Math3d.DVector3.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.DVector3
  nameWithType: DVector3.DVector3
- uid: Vim.Math3d.DVector3.AlmostEquals(Vim.Math3d.DVector3,System.Single)
  name: AlmostEquals(DVector3, Single)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_AlmostEquals_Vim_Math3d_DVector3_System_Single_
  commentId: M:Vim.Math3d.DVector3.AlmostEquals(Vim.Math3d.DVector3,System.Single)
  fullName: Vim.Math3d.DVector3.AlmostEquals(Vim.Math3d.DVector3, System.Single)
  nameWithType: DVector3.AlmostEquals(DVector3, Single)
- uid: Vim.Math3d.DVector3.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_AlmostEquals_
  commentId: Overload:Vim.Math3d.DVector3.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.AlmostEquals
  nameWithType: DVector3.AlmostEquals
- uid: Vim.Math3d.DVector3.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.DVector3.AlmostZero(System.Single)
  fullName: Vim.Math3d.DVector3.AlmostZero(System.Single)
  nameWithType: DVector3.AlmostZero(Single)
- uid: Vim.Math3d.DVector3.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_AlmostZero_
  commentId: Overload:Vim.Math3d.DVector3.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.AlmostZero
  nameWithType: DVector3.AlmostZero
- uid: Vim.Math3d.DVector3.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_AnyComponentNegative
  commentId: M:Vim.Math3d.DVector3.AnyComponentNegative
  fullName: Vim.Math3d.DVector3.AnyComponentNegative()
  nameWithType: DVector3.AnyComponentNegative()
- uid: Vim.Math3d.DVector3.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.DVector3.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.AnyComponentNegative
  nameWithType: DVector3.AnyComponentNegative
- uid: Vim.Math3d.DVector3.CompareTo(Vim.Math3d.DVector3)
  name: CompareTo(DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_CompareTo_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.CompareTo(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.CompareTo(Vim.Math3d.DVector3)
  nameWithType: DVector3.CompareTo(DVector3)
- uid: Vim.Math3d.DVector3.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_CompareTo_
  commentId: Overload:Vim.Math3d.DVector3.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.CompareTo
  nameWithType: DVector3.CompareTo
- uid: Vim.Math3d.DVector3.Create(System.Double,System.Double,System.Double)
  name: Create(Double, Double, Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Create_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector3.Create(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.DVector3.Create(System.Double, System.Double, System.Double)
  nameWithType: DVector3.Create(Double, Double, Double)
- uid: Vim.Math3d.DVector3.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name: Create((Double x, Double y, Double z))
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Create_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.DVector3.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: Create((x As Double, y As Double, z As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.DVector3.Create(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector3.Create(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: DVector3.Create((Double x, Double y, Double z))
  nameWithType.vb: DVector3.Create((x As Double, y As Double, z As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.DVector3.Create*
  name: Create
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Create_
  commentId: Overload:Vim.Math3d.DVector3.Create
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Create
  nameWithType: DVector3.Create
- uid: Vim.Math3d.DVector3.Deconstruct(System.Double@,System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double, out Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Deconstruct_System_Double__System_Double__System_Double__
  commentId: M:Vim.Math3d.DVector3.Deconstruct(System.Double@,System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double, ByRef Double)
  fullName: Vim.Math3d.DVector3.Deconstruct(out System.Double, out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.DVector3.Deconstruct(ByRef System.Double, ByRef System.Double, ByRef System.Double)
  nameWithType: DVector3.Deconstruct(out Double, out Double, out Double)
  nameWithType.vb: DVector3.Deconstruct(ByRef Double, ByRef Double, ByRef Double)
- uid: Vim.Math3d.DVector3.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Deconstruct_
  commentId: Overload:Vim.Math3d.DVector3.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Deconstruct
  nameWithType: DVector3.Deconstruct
- uid: Vim.Math3d.DVector3.Dot(Vim.Math3d.DVector3)
  name: Dot(DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Dot_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.Dot(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Dot(Vim.Math3d.DVector3)
  nameWithType: DVector3.Dot(DVector3)
- uid: Vim.Math3d.DVector3.Dot(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Dot(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Dot_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.Dot(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Dot(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.Dot(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.Dot*
  name: Dot
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Dot_
  commentId: Overload:Vim.Math3d.DVector3.Dot
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Dot
  nameWithType: DVector3.Dot
- uid: Vim.Math3d.DVector3.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Equals_System_Object_
  commentId: M:Vim.Math3d.DVector3.Equals(System.Object)
  fullName: Vim.Math3d.DVector3.Equals(System.Object)
  nameWithType: DVector3.Equals(Object)
- uid: Vim.Math3d.DVector3.Equals(Vim.Math3d.DVector3)
  name: Equals(DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Equals_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.Equals(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Equals(Vim.Math3d.DVector3)
  nameWithType: DVector3.Equals(DVector3)
- uid: Vim.Math3d.DVector3.Equals*
  name: Equals
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Equals_
  commentId: Overload:Vim.Math3d.DVector3.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Equals
  nameWithType: DVector3.Equals
- uid: Vim.Math3d.DVector3.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.DVector3.GetComponent(System.Int32)
  fullName: Vim.Math3d.DVector3.GetComponent(System.Int32)
  nameWithType: DVector3.GetComponent(Int32)
- uid: Vim.Math3d.DVector3.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_GetComponent_
  commentId: Overload:Vim.Math3d.DVector3.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.GetComponent
  nameWithType: DVector3.GetComponent
- uid: Vim.Math3d.DVector3.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_GetHashCode
  commentId: M:Vim.Math3d.DVector3.GetHashCode
  fullName: Vim.Math3d.DVector3.GetHashCode()
  nameWithType: DVector3.GetHashCode()
- uid: Vim.Math3d.DVector3.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_GetHashCode_
  commentId: Overload:Vim.Math3d.DVector3.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.GetHashCode
  nameWithType: DVector3.GetHashCode
- uid: Vim.Math3d.DVector3.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_IsInfinity
  commentId: M:Vim.Math3d.DVector3.IsInfinity
  fullName: Vim.Math3d.DVector3.IsInfinity()
  nameWithType: DVector3.IsInfinity()
- uid: Vim.Math3d.DVector3.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_IsInfinity_
  commentId: Overload:Vim.Math3d.DVector3.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.IsInfinity
  nameWithType: DVector3.IsInfinity
- uid: Vim.Math3d.DVector3.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_IsNaN
  commentId: M:Vim.Math3d.DVector3.IsNaN
  fullName: Vim.Math3d.DVector3.IsNaN()
  nameWithType: DVector3.IsNaN()
- uid: Vim.Math3d.DVector3.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_IsNaN_
  commentId: Overload:Vim.Math3d.DVector3.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.IsNaN
  nameWithType: DVector3.IsNaN
- uid: Vim.Math3d.DVector3.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Magnitude
  commentId: M:Vim.Math3d.DVector3.Magnitude
  fullName: Vim.Math3d.DVector3.Magnitude()
  nameWithType: DVector3.Magnitude()
- uid: Vim.Math3d.DVector3.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Magnitude_
  commentId: Overload:Vim.Math3d.DVector3.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Magnitude
  nameWithType: DVector3.Magnitude
- uid: Vim.Math3d.DVector3.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MagnitudeSquared
  commentId: M:Vim.Math3d.DVector3.MagnitudeSquared
  fullName: Vim.Math3d.DVector3.MagnitudeSquared()
  nameWithType: DVector3.MagnitudeSquared()
- uid: Vim.Math3d.DVector3.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.DVector3.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.MagnitudeSquared
  nameWithType: DVector3.MagnitudeSquared
- uid: Vim.Math3d.DVector3.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MaxComponent
  commentId: M:Vim.Math3d.DVector3.MaxComponent
  fullName: Vim.Math3d.DVector3.MaxComponent()
  nameWithType: DVector3.MaxComponent()
- uid: Vim.Math3d.DVector3.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MaxComponent_
  commentId: Overload:Vim.Math3d.DVector3.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.MaxComponent
  nameWithType: DVector3.MaxComponent
- uid: Vim.Math3d.DVector3.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MaxValue
  commentId: F:Vim.Math3d.DVector3.MaxValue
  fullName: Vim.Math3d.DVector3.MaxValue
  nameWithType: DVector3.MaxValue
- uid: Vim.Math3d.DVector3.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MinComponent
  commentId: M:Vim.Math3d.DVector3.MinComponent
  fullName: Vim.Math3d.DVector3.MinComponent()
  nameWithType: DVector3.MinComponent()
- uid: Vim.Math3d.DVector3.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MinComponent_
  commentId: Overload:Vim.Math3d.DVector3.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.MinComponent
  nameWithType: DVector3.MinComponent
- uid: Vim.Math3d.DVector3.MinValue
  name: MinValue
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_MinValue
  commentId: F:Vim.Math3d.DVector3.MinValue
  fullName: Vim.Math3d.DVector3.MinValue
  nameWithType: DVector3.MinValue
- uid: Vim.Math3d.DVector3.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_NumComponents
  commentId: F:Vim.Math3d.DVector3.NumComponents
  fullName: Vim.Math3d.DVector3.NumComponents
  nameWithType: DVector3.NumComponents
- uid: Vim.Math3d.DVector3.One
  name: One
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_One
  commentId: F:Vim.Math3d.DVector3.One
  fullName: Vim.Math3d.DVector3.One
  nameWithType: DVector3.One
- uid: Vim.Math3d.DVector3.op_Addition(System.Double,Vim.Math3d.DVector3)
  name: Addition(Double, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Addition_System_Double_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Addition(System.Double,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Addition(System.Double, Vim.Math3d.DVector3)
  nameWithType: DVector3.Addition(Double, DVector3)
- uid: Vim.Math3d.DVector3.op_Addition(Vim.Math3d.DVector3,System.Double)
  name: Addition(DVector3, Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Addition_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DVector3.op_Addition(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DVector3.Addition(Vim.Math3d.DVector3, System.Double)
  nameWithType: DVector3.Addition(DVector3, Double)
- uid: Vim.Math3d.DVector3.op_Addition(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Addition(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Addition_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Addition(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Addition(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.Addition(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_Addition*
  name: Addition
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Addition_
  commentId: Overload:Vim.Math3d.DVector3.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Addition
  nameWithType: DVector3.Addition
- uid: Vim.Math3d.DVector3.op_Division(System.Double,Vim.Math3d.DVector3)
  name: Division(Double, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Division_System_Double_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Division(System.Double,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Division(System.Double, Vim.Math3d.DVector3)
  nameWithType: DVector3.Division(Double, DVector3)
- uid: Vim.Math3d.DVector3.op_Division(Vim.Math3d.DVector3,System.Double)
  name: Division(DVector3, Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Division_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DVector3.op_Division(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DVector3.Division(Vim.Math3d.DVector3, System.Double)
  nameWithType: DVector3.Division(DVector3, Double)
- uid: Vim.Math3d.DVector3.op_Division(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Division(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Division_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Division(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Division(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.Division(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_Division*
  name: Division
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Division_
  commentId: Overload:Vim.Math3d.DVector3.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Division
  nameWithType: DVector3.Division
- uid: Vim.Math3d.DVector3.op_Equality(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Equality(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Equality_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Equality(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Equality(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.Equality(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Equality_
  commentId: Overload:Vim.Math3d.DVector3.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Equality
  nameWithType: DVector3.Equality
- uid: Vim.Math3d.DVector3.op_GreaterThan(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: GreaterThan(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_GreaterThan_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_GreaterThan(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.GreaterThan(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.GreaterThan(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_GreaterThan_
  commentId: Overload:Vim.Math3d.DVector3.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.GreaterThan
  nameWithType: DVector3.GreaterThan
- uid: Vim.Math3d.DVector3.op_GreaterThanOrEqual(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: GreaterThanOrEqual(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_GreaterThanOrEqual_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_GreaterThanOrEqual(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.GreaterThanOrEqual(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.GreaterThanOrEqual(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.DVector3.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.GreaterThanOrEqual
  nameWithType: DVector3.GreaterThanOrEqual
- uid: Vim.Math3d.DVector3.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.DVector3
  name: Implicit((Double x, Double y, Double z) to DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Implicit_System_ValueTuple_System_Double_System_Double_System_Double___Vim_Math3d_DVector3
  commentId: M:Vim.Math3d.DVector3.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.DVector3
  name.vb: Widening((x As Double, y As Double, z As Double)(Of Double, Double, Double) to DVector3)
  fullName: Vim.Math3d.DVector3.Implicit(System.ValueTuple<System.Double, System.Double, System.Double> to Vim.Math3d.DVector3)
  fullName.vb: Vim.Math3d.DVector3.Widening(System.ValueTuple(Of System.Double, System.Double, System.Double) to Vim.Math3d.DVector3)
  nameWithType: DVector3.Implicit((Double x, Double y, Double z) to DVector3)
  nameWithType.vb: DVector3.Widening((x As Double, y As Double, z As Double)(Of Double, Double, Double) to DVector3)
- uid: Vim.Math3d.DVector3.op_Implicit(Vim.Math3d.DVector3)~System.ValueTuple{System.Double,System.Double,System.Double}
  name: Implicit(DVector3 to (Double x, Double y, Double z))
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Implicit_Vim_Math3d_DVector3__System_ValueTuple_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector3.op_Implicit(Vim.Math3d.DVector3)~System.ValueTuple{System.Double,System.Double,System.Double}
  name.vb: Widening(DVector3 to (x As Double, y As Double, z As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.DVector3.Implicit(Vim.Math3d.DVector3 to System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector3.Widening(Vim.Math3d.DVector3 to System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: DVector3.Implicit(DVector3 to (Double x, Double y, Double z))
  nameWithType.vb: DVector3.Widening(DVector3 to (x As Double, y As Double, z As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.DVector3.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Implicit_
  commentId: Overload:Vim.Math3d.DVector3.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DVector3.Implicit
  fullName.vb: Vim.Math3d.DVector3.Widening
  nameWithType: DVector3.Implicit
  nameWithType.vb: DVector3.Widening
- uid: Vim.Math3d.DVector3.op_Inequality(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Inequality(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Inequality_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Inequality(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Inequality(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.Inequality(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Inequality_
  commentId: Overload:Vim.Math3d.DVector3.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Inequality
  nameWithType: DVector3.Inequality
- uid: Vim.Math3d.DVector3.op_LessThan(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: LessThan(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_LessThan_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_LessThan(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.LessThan(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.LessThan(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_LessThan_
  commentId: Overload:Vim.Math3d.DVector3.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.LessThan
  nameWithType: DVector3.LessThan
- uid: Vim.Math3d.DVector3.op_LessThanOrEqual(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: LessThanOrEqual(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_LessThanOrEqual_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_LessThanOrEqual(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.LessThanOrEqual(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.LessThanOrEqual(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.DVector3.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.LessThanOrEqual
  nameWithType: DVector3.LessThanOrEqual
- uid: Vim.Math3d.DVector3.op_Multiply(System.Double,Vim.Math3d.DVector3)
  name: Multiply(Double, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Multiply_System_Double_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Multiply(System.Double,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Multiply(System.Double, Vim.Math3d.DVector3)
  nameWithType: DVector3.Multiply(Double, DVector3)
- uid: Vim.Math3d.DVector3.op_Multiply(Vim.Math3d.DVector3,System.Double)
  name: Multiply(DVector3, Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Multiply_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DVector3.op_Multiply(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DVector3.Multiply(Vim.Math3d.DVector3, System.Double)
  nameWithType: DVector3.Multiply(DVector3, Double)
- uid: Vim.Math3d.DVector3.op_Multiply(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Multiply(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Multiply_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Multiply(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Multiply(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.Multiply(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Multiply_
  commentId: Overload:Vim.Math3d.DVector3.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Multiply
  nameWithType: DVector3.Multiply
- uid: Vim.Math3d.DVector3.op_Subtraction(System.Double,Vim.Math3d.DVector3)
  name: Subtraction(Double, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Subtraction_System_Double_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Subtraction(System.Double,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Subtraction(System.Double, Vim.Math3d.DVector3)
  nameWithType: DVector3.Subtraction(Double, DVector3)
- uid: Vim.Math3d.DVector3.op_Subtraction(Vim.Math3d.DVector3,System.Double)
  name: Subtraction(DVector3, Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Subtraction_Vim_Math3d_DVector3_System_Double_
  commentId: M:Vim.Math3d.DVector3.op_Subtraction(Vim.Math3d.DVector3,System.Double)
  fullName: Vim.Math3d.DVector3.Subtraction(Vim.Math3d.DVector3, System.Double)
  nameWithType: DVector3.Subtraction(DVector3, Double)
- uid: Vim.Math3d.DVector3.op_Subtraction(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Subtraction(DVector3, DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Subtraction_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_Subtraction(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.Subtraction(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: DVector3.Subtraction(DVector3, DVector3)
- uid: Vim.Math3d.DVector3.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_Subtraction_
  commentId: Overload:Vim.Math3d.DVector3.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Subtraction
  nameWithType: DVector3.Subtraction
- uid: Vim.Math3d.DVector3.op_UnaryNegation(Vim.Math3d.DVector3)
  name: UnaryNegation(DVector3)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_UnaryNegation_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.DVector3.op_UnaryNegation(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.DVector3.UnaryNegation(Vim.Math3d.DVector3)
  nameWithType: DVector3.UnaryNegation(DVector3)
- uid: Vim.Math3d.DVector3.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.DVector3.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.UnaryNegation
  nameWithType: DVector3.UnaryNegation
- uid: Vim.Math3d.DVector3.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_ProductComponents
  commentId: M:Vim.Math3d.DVector3.ProductComponents
  fullName: Vim.Math3d.DVector3.ProductComponents()
  nameWithType: DVector3.ProductComponents()
- uid: Vim.Math3d.DVector3.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_ProductComponents_
  commentId: Overload:Vim.Math3d.DVector3.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.ProductComponents
  nameWithType: DVector3.ProductComponents
- uid: Vim.Math3d.DVector3.SetX(System.Double)
  name: SetX(Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SetX_System_Double_
  commentId: M:Vim.Math3d.DVector3.SetX(System.Double)
  fullName: Vim.Math3d.DVector3.SetX(System.Double)
  nameWithType: DVector3.SetX(Double)
- uid: Vim.Math3d.DVector3.SetX*
  name: SetX
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SetX_
  commentId: Overload:Vim.Math3d.DVector3.SetX
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.SetX
  nameWithType: DVector3.SetX
- uid: Vim.Math3d.DVector3.SetY(System.Double)
  name: SetY(Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SetY_System_Double_
  commentId: M:Vim.Math3d.DVector3.SetY(System.Double)
  fullName: Vim.Math3d.DVector3.SetY(System.Double)
  nameWithType: DVector3.SetY(Double)
- uid: Vim.Math3d.DVector3.SetY*
  name: SetY
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SetY_
  commentId: Overload:Vim.Math3d.DVector3.SetY
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.SetY
  nameWithType: DVector3.SetY
- uid: Vim.Math3d.DVector3.SetZ(System.Double)
  name: SetZ(Double)
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SetZ_System_Double_
  commentId: M:Vim.Math3d.DVector3.SetZ(System.Double)
  fullName: Vim.Math3d.DVector3.SetZ(System.Double)
  nameWithType: DVector3.SetZ(Double)
- uid: Vim.Math3d.DVector3.SetZ*
  name: SetZ
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SetZ_
  commentId: Overload:Vim.Math3d.DVector3.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.SetZ
  nameWithType: DVector3.SetZ
- uid: Vim.Math3d.DVector3.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SumComponents
  commentId: M:Vim.Math3d.DVector3.SumComponents
  fullName: Vim.Math3d.DVector3.SumComponents()
  nameWithType: DVector3.SumComponents()
- uid: Vim.Math3d.DVector3.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SumComponents_
  commentId: Overload:Vim.Math3d.DVector3.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.SumComponents
  nameWithType: DVector3.SumComponents
- uid: Vim.Math3d.DVector3.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SumSqrComponents
  commentId: M:Vim.Math3d.DVector3.SumSqrComponents
  fullName: Vim.Math3d.DVector3.SumSqrComponents()
  nameWithType: DVector3.SumSqrComponents()
- uid: Vim.Math3d.DVector3.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_SumSqrComponents_
  commentId: Overload:Vim.Math3d.DVector3.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.SumSqrComponents
  nameWithType: DVector3.SumSqrComponents
- uid: Vim.Math3d.DVector3.ToString
  name: ToString()
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_ToString
  commentId: M:Vim.Math3d.DVector3.ToString
  fullName: Vim.Math3d.DVector3.ToString()
  nameWithType: DVector3.ToString()
- uid: Vim.Math3d.DVector3.ToString*
  name: ToString
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_ToString_
  commentId: Overload:Vim.Math3d.DVector3.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.ToString
  nameWithType: DVector3.ToString
- uid: Vim.Math3d.DVector3.UnitX
  name: UnitX
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_UnitX
  commentId: F:Vim.Math3d.DVector3.UnitX
  fullName: Vim.Math3d.DVector3.UnitX
  nameWithType: DVector3.UnitX
- uid: Vim.Math3d.DVector3.UnitY
  name: UnitY
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_UnitY
  commentId: F:Vim.Math3d.DVector3.UnitY
  fullName: Vim.Math3d.DVector3.UnitY
  nameWithType: DVector3.UnitY
- uid: Vim.Math3d.DVector3.UnitZ
  name: UnitZ
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_UnitZ
  commentId: F:Vim.Math3d.DVector3.UnitZ
  fullName: Vim.Math3d.DVector3.UnitZ
  nameWithType: DVector3.UnitZ
- uid: Vim.Math3d.DVector3.Vector3
  name: Vector3
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Vector3
  commentId: P:Vim.Math3d.DVector3.Vector3
  fullName: Vim.Math3d.DVector3.Vector3
  nameWithType: DVector3.Vector3
- uid: Vim.Math3d.DVector3.Vector3*
  name: Vector3
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Vector3_
  commentId: Overload:Vim.Math3d.DVector3.Vector3
  isSpec: "True"
  fullName: Vim.Math3d.DVector3.Vector3
  nameWithType: DVector3.Vector3
- uid: Vim.Math3d.DVector3.X
  name: X
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_X
  commentId: F:Vim.Math3d.DVector3.X
  fullName: Vim.Math3d.DVector3.X
  nameWithType: DVector3.X
- uid: Vim.Math3d.DVector3.Y
  name: Y
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Y
  commentId: F:Vim.Math3d.DVector3.Y
  fullName: Vim.Math3d.DVector3.Y
  nameWithType: DVector3.Y
- uid: Vim.Math3d.DVector3.Z
  name: Z
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Z
  commentId: F:Vim.Math3d.DVector3.Z
  fullName: Vim.Math3d.DVector3.Z
  nameWithType: DVector3.Z
- uid: Vim.Math3d.DVector3.Zero
  name: Zero
  href: api/Vim.Math3d.DVector3.html#Vim_Math3d_DVector3_Zero
  commentId: F:Vim.Math3d.DVector3.Zero
  fullName: Vim.Math3d.DVector3.Zero
  nameWithType: DVector3.Zero
- uid: Vim.Math3d.DVector4
  name: DVector4
  href: api/Vim.Math3d.DVector4.html
  commentId: T:Vim.Math3d.DVector4
  fullName: Vim.Math3d.DVector4
  nameWithType: DVector4
- uid: Vim.Math3d.DVector4.#ctor(System.Double)
  name: DVector4(Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4__ctor_System_Double_
  commentId: M:Vim.Math3d.DVector4.#ctor(System.Double)
  fullName: Vim.Math3d.DVector4.DVector4(System.Double)
  nameWithType: DVector4.DVector4(Double)
- uid: Vim.Math3d.DVector4.#ctor(System.Double,System.Double,System.Double,System.Double)
  name: DVector4(Double, Double, Double, Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4__ctor_System_Double_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector4.#ctor(System.Double,System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.DVector4.DVector4(System.Double, System.Double, System.Double, System.Double)
  nameWithType: DVector4.DVector4(Double, Double, Double, Double)
- uid: Vim.Math3d.DVector4.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name: DVector4((Double x, Double y, Double z, Double w))
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4__ctor_System_ValueTuple_System_Double_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.DVector4.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name.vb: DVector4((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  fullName: Vim.Math3d.DVector4.DVector4(System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector4.DVector4(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  nameWithType: DVector4.DVector4((Double x, Double y, Double z, Double w))
  nameWithType.vb: DVector4.DVector4((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DVector4.#ctor*
  name: DVector4
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4__ctor_
  commentId: Overload:Vim.Math3d.DVector4.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.DVector4
  nameWithType: DVector4.DVector4
- uid: Vim.Math3d.DVector4.AlmostEquals(Vim.Math3d.DVector4,System.Single)
  name: AlmostEquals(DVector4, Single)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_AlmostEquals_Vim_Math3d_DVector4_System_Single_
  commentId: M:Vim.Math3d.DVector4.AlmostEquals(Vim.Math3d.DVector4,System.Single)
  fullName: Vim.Math3d.DVector4.AlmostEquals(Vim.Math3d.DVector4, System.Single)
  nameWithType: DVector4.AlmostEquals(DVector4, Single)
- uid: Vim.Math3d.DVector4.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_AlmostEquals_
  commentId: Overload:Vim.Math3d.DVector4.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.AlmostEquals
  nameWithType: DVector4.AlmostEquals
- uid: Vim.Math3d.DVector4.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.DVector4.AlmostZero(System.Single)
  fullName: Vim.Math3d.DVector4.AlmostZero(System.Single)
  nameWithType: DVector4.AlmostZero(Single)
- uid: Vim.Math3d.DVector4.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_AlmostZero_
  commentId: Overload:Vim.Math3d.DVector4.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.AlmostZero
  nameWithType: DVector4.AlmostZero
- uid: Vim.Math3d.DVector4.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_AnyComponentNegative
  commentId: M:Vim.Math3d.DVector4.AnyComponentNegative
  fullName: Vim.Math3d.DVector4.AnyComponentNegative()
  nameWithType: DVector4.AnyComponentNegative()
- uid: Vim.Math3d.DVector4.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.DVector4.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.AnyComponentNegative
  nameWithType: DVector4.AnyComponentNegative
- uid: Vim.Math3d.DVector4.CompareTo(Vim.Math3d.DVector4)
  name: CompareTo(DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_CompareTo_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.CompareTo(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.CompareTo(Vim.Math3d.DVector4)
  nameWithType: DVector4.CompareTo(DVector4)
- uid: Vim.Math3d.DVector4.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_CompareTo_
  commentId: Overload:Vim.Math3d.DVector4.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.CompareTo
  nameWithType: DVector4.CompareTo
- uid: Vim.Math3d.DVector4.Create(System.Double,System.Double,System.Double,System.Double)
  name: Create(Double, Double, Double, Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Create_System_Double_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector4.Create(System.Double,System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.DVector4.Create(System.Double, System.Double, System.Double, System.Double)
  nameWithType: DVector4.Create(Double, Double, Double, Double)
- uid: Vim.Math3d.DVector4.Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name: Create((Double x, Double y, Double z, Double w))
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Create_System_ValueTuple_System_Double_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.DVector4.Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  name.vb: Create((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  fullName: Vim.Math3d.DVector4.Create(System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector4.Create(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  nameWithType: DVector4.Create((Double x, Double y, Double z, Double w))
  nameWithType.vb: DVector4.Create((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DVector4.Create*
  name: Create
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Create_
  commentId: Overload:Vim.Math3d.DVector4.Create
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Create
  nameWithType: DVector4.Create
- uid: Vim.Math3d.DVector4.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double, out Double, out Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Deconstruct_System_Double__System_Double__System_Double__System_Double__
  commentId: M:Vim.Math3d.DVector4.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double, ByRef Double, ByRef Double)
  fullName: Vim.Math3d.DVector4.Deconstruct(out System.Double, out System.Double, out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.DVector4.Deconstruct(ByRef System.Double, ByRef System.Double, ByRef System.Double, ByRef System.Double)
  nameWithType: DVector4.Deconstruct(out Double, out Double, out Double, out Double)
  nameWithType.vb: DVector4.Deconstruct(ByRef Double, ByRef Double, ByRef Double, ByRef Double)
- uid: Vim.Math3d.DVector4.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Deconstruct_
  commentId: Overload:Vim.Math3d.DVector4.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Deconstruct
  nameWithType: DVector4.Deconstruct
- uid: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4)
  name: Dot(DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Dot_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4)
  nameWithType: DVector4.Dot(DVector4)
- uid: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Dot(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Dot_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.Dot(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.Dot*
  name: Dot
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Dot_
  commentId: Overload:Vim.Math3d.DVector4.Dot
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Dot
  nameWithType: DVector4.Dot
- uid: Vim.Math3d.DVector4.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Equals_System_Object_
  commentId: M:Vim.Math3d.DVector4.Equals(System.Object)
  fullName: Vim.Math3d.DVector4.Equals(System.Object)
  nameWithType: DVector4.Equals(Object)
- uid: Vim.Math3d.DVector4.Equals(Vim.Math3d.DVector4)
  name: Equals(DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Equals_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.Equals(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Equals(Vim.Math3d.DVector4)
  nameWithType: DVector4.Equals(DVector4)
- uid: Vim.Math3d.DVector4.Equals*
  name: Equals
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Equals_
  commentId: Overload:Vim.Math3d.DVector4.Equals
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Equals
  nameWithType: DVector4.Equals
- uid: Vim.Math3d.DVector4.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.DVector4.GetComponent(System.Int32)
  fullName: Vim.Math3d.DVector4.GetComponent(System.Int32)
  nameWithType: DVector4.GetComponent(Int32)
- uid: Vim.Math3d.DVector4.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_GetComponent_
  commentId: Overload:Vim.Math3d.DVector4.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.GetComponent
  nameWithType: DVector4.GetComponent
- uid: Vim.Math3d.DVector4.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_GetHashCode
  commentId: M:Vim.Math3d.DVector4.GetHashCode
  fullName: Vim.Math3d.DVector4.GetHashCode()
  nameWithType: DVector4.GetHashCode()
- uid: Vim.Math3d.DVector4.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_GetHashCode_
  commentId: Overload:Vim.Math3d.DVector4.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.GetHashCode
  nameWithType: DVector4.GetHashCode
- uid: Vim.Math3d.DVector4.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_IsInfinity
  commentId: M:Vim.Math3d.DVector4.IsInfinity
  fullName: Vim.Math3d.DVector4.IsInfinity()
  nameWithType: DVector4.IsInfinity()
- uid: Vim.Math3d.DVector4.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_IsInfinity_
  commentId: Overload:Vim.Math3d.DVector4.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.IsInfinity
  nameWithType: DVector4.IsInfinity
- uid: Vim.Math3d.DVector4.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_IsNaN
  commentId: M:Vim.Math3d.DVector4.IsNaN
  fullName: Vim.Math3d.DVector4.IsNaN()
  nameWithType: DVector4.IsNaN()
- uid: Vim.Math3d.DVector4.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_IsNaN_
  commentId: Overload:Vim.Math3d.DVector4.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.IsNaN
  nameWithType: DVector4.IsNaN
- uid: Vim.Math3d.DVector4.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Magnitude
  commentId: M:Vim.Math3d.DVector4.Magnitude
  fullName: Vim.Math3d.DVector4.Magnitude()
  nameWithType: DVector4.Magnitude()
- uid: Vim.Math3d.DVector4.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Magnitude_
  commentId: Overload:Vim.Math3d.DVector4.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Magnitude
  nameWithType: DVector4.Magnitude
- uid: Vim.Math3d.DVector4.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MagnitudeSquared
  commentId: M:Vim.Math3d.DVector4.MagnitudeSquared
  fullName: Vim.Math3d.DVector4.MagnitudeSquared()
  nameWithType: DVector4.MagnitudeSquared()
- uid: Vim.Math3d.DVector4.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.DVector4.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.MagnitudeSquared
  nameWithType: DVector4.MagnitudeSquared
- uid: Vim.Math3d.DVector4.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MaxComponent
  commentId: M:Vim.Math3d.DVector4.MaxComponent
  fullName: Vim.Math3d.DVector4.MaxComponent()
  nameWithType: DVector4.MaxComponent()
- uid: Vim.Math3d.DVector4.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MaxComponent_
  commentId: Overload:Vim.Math3d.DVector4.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.MaxComponent
  nameWithType: DVector4.MaxComponent
- uid: Vim.Math3d.DVector4.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MaxValue
  commentId: F:Vim.Math3d.DVector4.MaxValue
  fullName: Vim.Math3d.DVector4.MaxValue
  nameWithType: DVector4.MaxValue
- uid: Vim.Math3d.DVector4.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MinComponent
  commentId: M:Vim.Math3d.DVector4.MinComponent
  fullName: Vim.Math3d.DVector4.MinComponent()
  nameWithType: DVector4.MinComponent()
- uid: Vim.Math3d.DVector4.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MinComponent_
  commentId: Overload:Vim.Math3d.DVector4.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.MinComponent
  nameWithType: DVector4.MinComponent
- uid: Vim.Math3d.DVector4.MinValue
  name: MinValue
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_MinValue
  commentId: F:Vim.Math3d.DVector4.MinValue
  fullName: Vim.Math3d.DVector4.MinValue
  nameWithType: DVector4.MinValue
- uid: Vim.Math3d.DVector4.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_NumComponents
  commentId: F:Vim.Math3d.DVector4.NumComponents
  fullName: Vim.Math3d.DVector4.NumComponents
  nameWithType: DVector4.NumComponents
- uid: Vim.Math3d.DVector4.One
  name: One
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_One
  commentId: F:Vim.Math3d.DVector4.One
  fullName: Vim.Math3d.DVector4.One
  nameWithType: DVector4.One
- uid: Vim.Math3d.DVector4.op_Addition(System.Double,Vim.Math3d.DVector4)
  name: Addition(Double, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Addition_System_Double_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Addition(System.Double,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Addition(System.Double, Vim.Math3d.DVector4)
  nameWithType: DVector4.Addition(Double, DVector4)
- uid: Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,System.Double)
  name: Addition(DVector4, Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Addition_Vim_Math3d_DVector4_System_Double_
  commentId: M:Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,System.Double)
  fullName: Vim.Math3d.DVector4.Addition(Vim.Math3d.DVector4, System.Double)
  nameWithType: DVector4.Addition(DVector4, Double)
- uid: Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Addition(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Addition_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Addition(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.Addition(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_Addition*
  name: Addition
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Addition_
  commentId: Overload:Vim.Math3d.DVector4.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Addition
  nameWithType: DVector4.Addition
- uid: Vim.Math3d.DVector4.op_Division(System.Double,Vim.Math3d.DVector4)
  name: Division(Double, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Division_System_Double_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Division(System.Double,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Division(System.Double, Vim.Math3d.DVector4)
  nameWithType: DVector4.Division(Double, DVector4)
- uid: Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,System.Double)
  name: Division(DVector4, Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Division_Vim_Math3d_DVector4_System_Double_
  commentId: M:Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,System.Double)
  fullName: Vim.Math3d.DVector4.Division(Vim.Math3d.DVector4, System.Double)
  nameWithType: DVector4.Division(DVector4, Double)
- uid: Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Division(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Division_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Division(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.Division(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_Division*
  name: Division
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Division_
  commentId: Overload:Vim.Math3d.DVector4.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Division
  nameWithType: DVector4.Division
- uid: Vim.Math3d.DVector4.op_Equality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Equality(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Equality_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Equality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Equality(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.Equality(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_Equality*
  name: Equality
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Equality_
  commentId: Overload:Vim.Math3d.DVector4.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Equality
  nameWithType: DVector4.Equality
- uid: Vim.Math3d.DVector4.op_GreaterThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: GreaterThan(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_GreaterThan_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_GreaterThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.GreaterThan(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.GreaterThan(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_GreaterThan_
  commentId: Overload:Vim.Math3d.DVector4.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.GreaterThan
  nameWithType: DVector4.GreaterThan
- uid: Vim.Math3d.DVector4.op_GreaterThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: GreaterThanOrEqual(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_GreaterThanOrEqual_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_GreaterThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.GreaterThanOrEqual(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.GreaterThanOrEqual(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.DVector4.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.GreaterThanOrEqual
  nameWithType: DVector4.GreaterThanOrEqual
- uid: Vim.Math3d.DVector4.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DVector4
  name: Implicit((Double x, Double y, Double z, Double w) to DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Implicit_System_ValueTuple_System_Double_System_Double_System_Double_System_Double___Vim_Math3d_DVector4
  commentId: M:Vim.Math3d.DVector4.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DVector4
  name.vb: Widening((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double) to DVector4)
  fullName: Vim.Math3d.DVector4.Implicit(System.ValueTuple<System.Double, System.Double, System.Double, System.Double> to Vim.Math3d.DVector4)
  fullName.vb: Vim.Math3d.DVector4.Widening(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double) to Vim.Math3d.DVector4)
  nameWithType: DVector4.Implicit((Double x, Double y, Double z, Double w) to DVector4)
  nameWithType.vb: DVector4.Widening((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double) to DVector4)
- uid: Vim.Math3d.DVector4.op_Implicit(Vim.Math3d.DVector4)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  name: Implicit(DVector4 to (Double x, Double y, Double z, Double w))
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Implicit_Vim_Math3d_DVector4__System_ValueTuple_System_Double_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.DVector4.op_Implicit(Vim.Math3d.DVector4)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  name.vb: Widening(DVector4 to (x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  fullName: Vim.Math3d.DVector4.Implicit(Vim.Math3d.DVector4 to System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.DVector4.Widening(Vim.Math3d.DVector4 to System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  nameWithType: DVector4.Implicit(DVector4 to (Double x, Double y, Double z, Double w))
  nameWithType.vb: DVector4.Widening(DVector4 to (x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DVector4.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Implicit_
  commentId: Overload:Vim.Math3d.DVector4.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.DVector4.Implicit
  fullName.vb: Vim.Math3d.DVector4.Widening
  nameWithType: DVector4.Implicit
  nameWithType.vb: DVector4.Widening
- uid: Vim.Math3d.DVector4.op_Inequality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Inequality(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Inequality_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Inequality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Inequality(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.Inequality(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Inequality_
  commentId: Overload:Vim.Math3d.DVector4.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Inequality
  nameWithType: DVector4.Inequality
- uid: Vim.Math3d.DVector4.op_LessThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: LessThan(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_LessThan_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_LessThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.LessThan(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.LessThan(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_LessThan_
  commentId: Overload:Vim.Math3d.DVector4.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.LessThan
  nameWithType: DVector4.LessThan
- uid: Vim.Math3d.DVector4.op_LessThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: LessThanOrEqual(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_LessThanOrEqual_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_LessThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.LessThanOrEqual(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.LessThanOrEqual(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.DVector4.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.LessThanOrEqual
  nameWithType: DVector4.LessThanOrEqual
- uid: Vim.Math3d.DVector4.op_Multiply(System.Double,Vim.Math3d.DVector4)
  name: Multiply(Double, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Multiply_System_Double_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Multiply(System.Double,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Multiply(System.Double, Vim.Math3d.DVector4)
  nameWithType: DVector4.Multiply(Double, DVector4)
- uid: Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,System.Double)
  name: Multiply(DVector4, Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Multiply_Vim_Math3d_DVector4_System_Double_
  commentId: M:Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,System.Double)
  fullName: Vim.Math3d.DVector4.Multiply(Vim.Math3d.DVector4, System.Double)
  nameWithType: DVector4.Multiply(DVector4, Double)
- uid: Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Multiply(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Multiply_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Multiply(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.Multiply(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Multiply_
  commentId: Overload:Vim.Math3d.DVector4.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Multiply
  nameWithType: DVector4.Multiply
- uid: Vim.Math3d.DVector4.op_Subtraction(System.Double,Vim.Math3d.DVector4)
  name: Subtraction(Double, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Subtraction_System_Double_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Subtraction(System.Double,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Subtraction(System.Double, Vim.Math3d.DVector4)
  nameWithType: DVector4.Subtraction(Double, DVector4)
- uid: Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,System.Double)
  name: Subtraction(DVector4, Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Subtraction_Vim_Math3d_DVector4_System_Double_
  commentId: M:Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,System.Double)
  fullName: Vim.Math3d.DVector4.Subtraction(Vim.Math3d.DVector4, System.Double)
  nameWithType: DVector4.Subtraction(DVector4, Double)
- uid: Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Subtraction(DVector4, DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Subtraction_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.Subtraction(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: DVector4.Subtraction(DVector4, DVector4)
- uid: Vim.Math3d.DVector4.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_Subtraction_
  commentId: Overload:Vim.Math3d.DVector4.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Subtraction
  nameWithType: DVector4.Subtraction
- uid: Vim.Math3d.DVector4.op_UnaryNegation(Vim.Math3d.DVector4)
  name: UnaryNegation(DVector4)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_UnaryNegation_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.DVector4.op_UnaryNegation(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.DVector4.UnaryNegation(Vim.Math3d.DVector4)
  nameWithType: DVector4.UnaryNegation(DVector4)
- uid: Vim.Math3d.DVector4.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.DVector4.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.UnaryNegation
  nameWithType: DVector4.UnaryNegation
- uid: Vim.Math3d.DVector4.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_ProductComponents
  commentId: M:Vim.Math3d.DVector4.ProductComponents
  fullName: Vim.Math3d.DVector4.ProductComponents()
  nameWithType: DVector4.ProductComponents()
- uid: Vim.Math3d.DVector4.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_ProductComponents_
  commentId: Overload:Vim.Math3d.DVector4.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.ProductComponents
  nameWithType: DVector4.ProductComponents
- uid: Vim.Math3d.DVector4.SetW(System.Double)
  name: SetW(Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetW_System_Double_
  commentId: M:Vim.Math3d.DVector4.SetW(System.Double)
  fullName: Vim.Math3d.DVector4.SetW(System.Double)
  nameWithType: DVector4.SetW(Double)
- uid: Vim.Math3d.DVector4.SetW*
  name: SetW
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetW_
  commentId: Overload:Vim.Math3d.DVector4.SetW
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.SetW
  nameWithType: DVector4.SetW
- uid: Vim.Math3d.DVector4.SetX(System.Double)
  name: SetX(Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetX_System_Double_
  commentId: M:Vim.Math3d.DVector4.SetX(System.Double)
  fullName: Vim.Math3d.DVector4.SetX(System.Double)
  nameWithType: DVector4.SetX(Double)
- uid: Vim.Math3d.DVector4.SetX*
  name: SetX
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetX_
  commentId: Overload:Vim.Math3d.DVector4.SetX
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.SetX
  nameWithType: DVector4.SetX
- uid: Vim.Math3d.DVector4.SetY(System.Double)
  name: SetY(Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetY_System_Double_
  commentId: M:Vim.Math3d.DVector4.SetY(System.Double)
  fullName: Vim.Math3d.DVector4.SetY(System.Double)
  nameWithType: DVector4.SetY(Double)
- uid: Vim.Math3d.DVector4.SetY*
  name: SetY
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetY_
  commentId: Overload:Vim.Math3d.DVector4.SetY
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.SetY
  nameWithType: DVector4.SetY
- uid: Vim.Math3d.DVector4.SetZ(System.Double)
  name: SetZ(Double)
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetZ_System_Double_
  commentId: M:Vim.Math3d.DVector4.SetZ(System.Double)
  fullName: Vim.Math3d.DVector4.SetZ(System.Double)
  nameWithType: DVector4.SetZ(Double)
- uid: Vim.Math3d.DVector4.SetZ*
  name: SetZ
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SetZ_
  commentId: Overload:Vim.Math3d.DVector4.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.SetZ
  nameWithType: DVector4.SetZ
- uid: Vim.Math3d.DVector4.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SumComponents
  commentId: M:Vim.Math3d.DVector4.SumComponents
  fullName: Vim.Math3d.DVector4.SumComponents()
  nameWithType: DVector4.SumComponents()
- uid: Vim.Math3d.DVector4.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SumComponents_
  commentId: Overload:Vim.Math3d.DVector4.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.SumComponents
  nameWithType: DVector4.SumComponents
- uid: Vim.Math3d.DVector4.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SumSqrComponents
  commentId: M:Vim.Math3d.DVector4.SumSqrComponents
  fullName: Vim.Math3d.DVector4.SumSqrComponents()
  nameWithType: DVector4.SumSqrComponents()
- uid: Vim.Math3d.DVector4.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_SumSqrComponents_
  commentId: Overload:Vim.Math3d.DVector4.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.SumSqrComponents
  nameWithType: DVector4.SumSqrComponents
- uid: Vim.Math3d.DVector4.ToString
  name: ToString()
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_ToString
  commentId: M:Vim.Math3d.DVector4.ToString
  fullName: Vim.Math3d.DVector4.ToString()
  nameWithType: DVector4.ToString()
- uid: Vim.Math3d.DVector4.ToString*
  name: ToString
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_ToString_
  commentId: Overload:Vim.Math3d.DVector4.ToString
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.ToString
  nameWithType: DVector4.ToString
- uid: Vim.Math3d.DVector4.UnitW
  name: UnitW
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_UnitW
  commentId: F:Vim.Math3d.DVector4.UnitW
  fullName: Vim.Math3d.DVector4.UnitW
  nameWithType: DVector4.UnitW
- uid: Vim.Math3d.DVector4.UnitX
  name: UnitX
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_UnitX
  commentId: F:Vim.Math3d.DVector4.UnitX
  fullName: Vim.Math3d.DVector4.UnitX
  nameWithType: DVector4.UnitX
- uid: Vim.Math3d.DVector4.UnitY
  name: UnitY
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_UnitY
  commentId: F:Vim.Math3d.DVector4.UnitY
  fullName: Vim.Math3d.DVector4.UnitY
  nameWithType: DVector4.UnitY
- uid: Vim.Math3d.DVector4.UnitZ
  name: UnitZ
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_UnitZ
  commentId: F:Vim.Math3d.DVector4.UnitZ
  fullName: Vim.Math3d.DVector4.UnitZ
  nameWithType: DVector4.UnitZ
- uid: Vim.Math3d.DVector4.Vector4
  name: Vector4
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Vector4
  commentId: P:Vim.Math3d.DVector4.Vector4
  fullName: Vim.Math3d.DVector4.Vector4
  nameWithType: DVector4.Vector4
- uid: Vim.Math3d.DVector4.Vector4*
  name: Vector4
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Vector4_
  commentId: Overload:Vim.Math3d.DVector4.Vector4
  isSpec: "True"
  fullName: Vim.Math3d.DVector4.Vector4
  nameWithType: DVector4.Vector4
- uid: Vim.Math3d.DVector4.W
  name: W
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_W
  commentId: F:Vim.Math3d.DVector4.W
  fullName: Vim.Math3d.DVector4.W
  nameWithType: DVector4.W
- uid: Vim.Math3d.DVector4.X
  name: X
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_X
  commentId: F:Vim.Math3d.DVector4.X
  fullName: Vim.Math3d.DVector4.X
  nameWithType: DVector4.X
- uid: Vim.Math3d.DVector4.Y
  name: Y
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Y
  commentId: F:Vim.Math3d.DVector4.Y
  fullName: Vim.Math3d.DVector4.Y
  nameWithType: DVector4.Y
- uid: Vim.Math3d.DVector4.Z
  name: Z
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Z
  commentId: F:Vim.Math3d.DVector4.Z
  fullName: Vim.Math3d.DVector4.Z
  nameWithType: DVector4.Z
- uid: Vim.Math3d.DVector4.Zero
  name: Zero
  href: api/Vim.Math3d.DVector4.html#Vim_Math3d_DVector4_Zero
  commentId: F:Vim.Math3d.DVector4.Zero
  fullName: Vim.Math3d.DVector4.Zero
  nameWithType: DVector4.Zero
- uid: Vim.Math3d.Euler
  name: Euler
  href: api/Vim.Math3d.Euler.html
  commentId: T:Vim.Math3d.Euler
  fullName: Vim.Math3d.Euler
  nameWithType: Euler
- uid: Vim.Math3d.Euler.#ctor(System.Double)
  name: Euler(Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler__ctor_System_Double_
  commentId: M:Vim.Math3d.Euler.#ctor(System.Double)
  fullName: Vim.Math3d.Euler.Euler(System.Double)
  nameWithType: Euler.Euler(Double)
- uid: Vim.Math3d.Euler.#ctor(System.Double,System.Double,System.Double)
  name: Euler(Double, Double, Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler__ctor_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.Euler.#ctor(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.Euler.Euler(System.Double, System.Double, System.Double)
  nameWithType: Euler.Euler(Double, Double, Double)
- uid: Vim.Math3d.Euler.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name: Euler((Double yaw, Double pitch, Double roll))
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler__ctor_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.Euler.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: Euler((yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.Euler.Euler(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.Euler.Euler(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: Euler.Euler((Double yaw, Double pitch, Double roll))
  nameWithType.vb: Euler.Euler((yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.Euler.#ctor*
  name: Euler
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler__ctor_
  commentId: Overload:Vim.Math3d.Euler.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Euler
  nameWithType: Euler.Euler
- uid: Vim.Math3d.Euler.AlmostEquals(Vim.Math3d.Euler,System.Single)
  name: AlmostEquals(Euler, Single)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_AlmostEquals_Vim_Math3d_Euler_System_Single_
  commentId: M:Vim.Math3d.Euler.AlmostEquals(Vim.Math3d.Euler,System.Single)
  fullName: Vim.Math3d.Euler.AlmostEquals(Vim.Math3d.Euler, System.Single)
  nameWithType: Euler.AlmostEquals(Euler, Single)
- uid: Vim.Math3d.Euler.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_AlmostEquals_
  commentId: Overload:Vim.Math3d.Euler.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Euler.AlmostEquals
  nameWithType: Euler.AlmostEquals
- uid: Vim.Math3d.Euler.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Euler.AlmostZero(System.Single)
  fullName: Vim.Math3d.Euler.AlmostZero(System.Single)
  nameWithType: Euler.AlmostZero(Single)
- uid: Vim.Math3d.Euler.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_AlmostZero_
  commentId: Overload:Vim.Math3d.Euler.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Euler.AlmostZero
  nameWithType: Euler.AlmostZero
- uid: Vim.Math3d.Euler.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_AnyComponentNegative
  commentId: M:Vim.Math3d.Euler.AnyComponentNegative
  fullName: Vim.Math3d.Euler.AnyComponentNegative()
  nameWithType: Euler.AnyComponentNegative()
- uid: Vim.Math3d.Euler.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Euler.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Euler.AnyComponentNegative
  nameWithType: Euler.AnyComponentNegative
- uid: Vim.Math3d.Euler.CompareTo(Vim.Math3d.Euler)
  name: CompareTo(Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_CompareTo_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.CompareTo(Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.CompareTo(Vim.Math3d.Euler)
  nameWithType: Euler.CompareTo(Euler)
- uid: Vim.Math3d.Euler.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_CompareTo_
  commentId: Overload:Vim.Math3d.Euler.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Euler.CompareTo
  nameWithType: Euler.CompareTo
- uid: Vim.Math3d.Euler.Create(System.Double,System.Double,System.Double)
  name: Create(Double, Double, Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Create_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.Euler.Create(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.Euler.Create(System.Double, System.Double, System.Double)
  nameWithType: Euler.Create(Double, Double, Double)
- uid: Vim.Math3d.Euler.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name: Create((Double yaw, Double pitch, Double roll))
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Create_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.Euler.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: Create((yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.Euler.Create(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.Euler.Create(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: Euler.Create((Double yaw, Double pitch, Double roll))
  nameWithType.vb: Euler.Create((yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.Euler.Create*
  name: Create
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Create_
  commentId: Overload:Vim.Math3d.Euler.Create
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Create
  nameWithType: Euler.Create
- uid: Vim.Math3d.Euler.Deconstruct(System.Double@,System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double, out Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Deconstruct_System_Double__System_Double__System_Double__
  commentId: M:Vim.Math3d.Euler.Deconstruct(System.Double@,System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double, ByRef Double)
  fullName: Vim.Math3d.Euler.Deconstruct(out System.Double, out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.Euler.Deconstruct(ByRef System.Double, ByRef System.Double, ByRef System.Double)
  nameWithType: Euler.Deconstruct(out Double, out Double, out Double)
  nameWithType.vb: Euler.Deconstruct(ByRef Double, ByRef Double, ByRef Double)
- uid: Vim.Math3d.Euler.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Deconstruct_
  commentId: Overload:Vim.Math3d.Euler.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Deconstruct
  nameWithType: Euler.Deconstruct
- uid: Vim.Math3d.Euler.Dot(Vim.Math3d.Euler)
  name: Dot(Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Dot_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.Dot(Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Dot(Vim.Math3d.Euler)
  nameWithType: Euler.Dot(Euler)
- uid: Vim.Math3d.Euler.Dot(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: Dot(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Dot_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.Dot(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Dot(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.Dot(Euler, Euler)
- uid: Vim.Math3d.Euler.Dot*
  name: Dot
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Dot_
  commentId: Overload:Vim.Math3d.Euler.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Dot
  nameWithType: Euler.Dot
- uid: Vim.Math3d.Euler.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Equals_System_Object_
  commentId: M:Vim.Math3d.Euler.Equals(System.Object)
  fullName: Vim.Math3d.Euler.Equals(System.Object)
  nameWithType: Euler.Equals(Object)
- uid: Vim.Math3d.Euler.Equals(Vim.Math3d.Euler)
  name: Equals(Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Equals_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.Equals(Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Equals(Vim.Math3d.Euler)
  nameWithType: Euler.Equals(Euler)
- uid: Vim.Math3d.Euler.Equals*
  name: Equals
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Equals_
  commentId: Overload:Vim.Math3d.Euler.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Equals
  nameWithType: Euler.Equals
- uid: Vim.Math3d.Euler.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Euler.GetComponent(System.Int32)
  fullName: Vim.Math3d.Euler.GetComponent(System.Int32)
  nameWithType: Euler.GetComponent(Int32)
- uid: Vim.Math3d.Euler.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_GetComponent_
  commentId: Overload:Vim.Math3d.Euler.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Euler.GetComponent
  nameWithType: Euler.GetComponent
- uid: Vim.Math3d.Euler.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_GetHashCode
  commentId: M:Vim.Math3d.Euler.GetHashCode
  fullName: Vim.Math3d.Euler.GetHashCode()
  nameWithType: Euler.GetHashCode()
- uid: Vim.Math3d.Euler.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_GetHashCode_
  commentId: Overload:Vim.Math3d.Euler.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Euler.GetHashCode
  nameWithType: Euler.GetHashCode
- uid: Vim.Math3d.Euler.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_IsInfinity
  commentId: M:Vim.Math3d.Euler.IsInfinity
  fullName: Vim.Math3d.Euler.IsInfinity()
  nameWithType: Euler.IsInfinity()
- uid: Vim.Math3d.Euler.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_IsInfinity_
  commentId: Overload:Vim.Math3d.Euler.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Euler.IsInfinity
  nameWithType: Euler.IsInfinity
- uid: Vim.Math3d.Euler.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_IsNaN
  commentId: M:Vim.Math3d.Euler.IsNaN
  fullName: Vim.Math3d.Euler.IsNaN()
  nameWithType: Euler.IsNaN()
- uid: Vim.Math3d.Euler.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_IsNaN_
  commentId: Overload:Vim.Math3d.Euler.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Euler.IsNaN
  nameWithType: Euler.IsNaN
- uid: Vim.Math3d.Euler.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Magnitude
  commentId: M:Vim.Math3d.Euler.Magnitude
  fullName: Vim.Math3d.Euler.Magnitude()
  nameWithType: Euler.Magnitude()
- uid: Vim.Math3d.Euler.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Magnitude_
  commentId: Overload:Vim.Math3d.Euler.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Magnitude
  nameWithType: Euler.Magnitude
- uid: Vim.Math3d.Euler.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MagnitudeSquared
  commentId: M:Vim.Math3d.Euler.MagnitudeSquared
  fullName: Vim.Math3d.Euler.MagnitudeSquared()
  nameWithType: Euler.MagnitudeSquared()
- uid: Vim.Math3d.Euler.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Euler.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Euler.MagnitudeSquared
  nameWithType: Euler.MagnitudeSquared
- uid: Vim.Math3d.Euler.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MaxComponent
  commentId: M:Vim.Math3d.Euler.MaxComponent
  fullName: Vim.Math3d.Euler.MaxComponent()
  nameWithType: Euler.MaxComponent()
- uid: Vim.Math3d.Euler.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MaxComponent_
  commentId: Overload:Vim.Math3d.Euler.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Euler.MaxComponent
  nameWithType: Euler.MaxComponent
- uid: Vim.Math3d.Euler.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MaxValue
  commentId: F:Vim.Math3d.Euler.MaxValue
  fullName: Vim.Math3d.Euler.MaxValue
  nameWithType: Euler.MaxValue
- uid: Vim.Math3d.Euler.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MinComponent
  commentId: M:Vim.Math3d.Euler.MinComponent
  fullName: Vim.Math3d.Euler.MinComponent()
  nameWithType: Euler.MinComponent()
- uid: Vim.Math3d.Euler.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MinComponent_
  commentId: Overload:Vim.Math3d.Euler.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Euler.MinComponent
  nameWithType: Euler.MinComponent
- uid: Vim.Math3d.Euler.MinValue
  name: MinValue
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_MinValue
  commentId: F:Vim.Math3d.Euler.MinValue
  fullName: Vim.Math3d.Euler.MinValue
  nameWithType: Euler.MinValue
- uid: Vim.Math3d.Euler.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_NumComponents
  commentId: F:Vim.Math3d.Euler.NumComponents
  fullName: Vim.Math3d.Euler.NumComponents
  nameWithType: Euler.NumComponents
- uid: Vim.Math3d.Euler.One
  name: One
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_One
  commentId: F:Vim.Math3d.Euler.One
  fullName: Vim.Math3d.Euler.One
  nameWithType: Euler.One
- uid: Vim.Math3d.Euler.op_Addition(System.Double,Vim.Math3d.Euler)
  name: Addition(Double, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Addition_System_Double_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Addition(System.Double,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Addition(System.Double, Vim.Math3d.Euler)
  nameWithType: Euler.Addition(Double, Euler)
- uid: Vim.Math3d.Euler.op_Addition(Vim.Math3d.Euler,System.Double)
  name: Addition(Euler, Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Addition_Vim_Math3d_Euler_System_Double_
  commentId: M:Vim.Math3d.Euler.op_Addition(Vim.Math3d.Euler,System.Double)
  fullName: Vim.Math3d.Euler.Addition(Vim.Math3d.Euler, System.Double)
  nameWithType: Euler.Addition(Euler, Double)
- uid: Vim.Math3d.Euler.op_Addition(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: Addition(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Addition_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Addition(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Addition(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.Addition(Euler, Euler)
- uid: Vim.Math3d.Euler.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Addition_
  commentId: Overload:Vim.Math3d.Euler.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Addition
  nameWithType: Euler.Addition
- uid: Vim.Math3d.Euler.op_Division(System.Double,Vim.Math3d.Euler)
  name: Division(Double, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Division_System_Double_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Division(System.Double,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Division(System.Double, Vim.Math3d.Euler)
  nameWithType: Euler.Division(Double, Euler)
- uid: Vim.Math3d.Euler.op_Division(Vim.Math3d.Euler,System.Double)
  name: Division(Euler, Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Division_Vim_Math3d_Euler_System_Double_
  commentId: M:Vim.Math3d.Euler.op_Division(Vim.Math3d.Euler,System.Double)
  fullName: Vim.Math3d.Euler.Division(Vim.Math3d.Euler, System.Double)
  nameWithType: Euler.Division(Euler, Double)
- uid: Vim.Math3d.Euler.op_Division(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: Division(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Division_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Division(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Division(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.Division(Euler, Euler)
- uid: Vim.Math3d.Euler.op_Division*
  name: Division
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Division_
  commentId: Overload:Vim.Math3d.Euler.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Division
  nameWithType: Euler.Division
- uid: Vim.Math3d.Euler.op_Equality(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: Equality(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Equality_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Equality(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Equality(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.Equality(Euler, Euler)
- uid: Vim.Math3d.Euler.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Equality_
  commentId: Overload:Vim.Math3d.Euler.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Equality
  nameWithType: Euler.Equality
- uid: Vim.Math3d.Euler.op_GreaterThan(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: GreaterThan(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_GreaterThan_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_GreaterThan(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.GreaterThan(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.GreaterThan(Euler, Euler)
- uid: Vim.Math3d.Euler.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Euler.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Euler.GreaterThan
  nameWithType: Euler.GreaterThan
- uid: Vim.Math3d.Euler.op_GreaterThanOrEqual(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: GreaterThanOrEqual(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_GreaterThanOrEqual_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_GreaterThanOrEqual(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.GreaterThanOrEqual(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.GreaterThanOrEqual(Euler, Euler)
- uid: Vim.Math3d.Euler.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Euler.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Euler.GreaterThanOrEqual
  nameWithType: Euler.GreaterThanOrEqual
- uid: Vim.Math3d.Euler.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.Euler
  name: Implicit((Double yaw, Double pitch, Double roll) to Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Implicit_System_ValueTuple_System_Double_System_Double_System_Double___Vim_Math3d_Euler
  commentId: M:Vim.Math3d.Euler.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.Euler
  name.vb: Widening((yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double) to Euler)
  fullName: Vim.Math3d.Euler.Implicit(System.ValueTuple<System.Double, System.Double, System.Double> to Vim.Math3d.Euler)
  fullName.vb: Vim.Math3d.Euler.Widening(System.ValueTuple(Of System.Double, System.Double, System.Double) to Vim.Math3d.Euler)
  nameWithType: Euler.Implicit((Double yaw, Double pitch, Double roll) to Euler)
  nameWithType.vb: Euler.Widening((yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double) to Euler)
- uid: Vim.Math3d.Euler.op_Implicit(Vim.Math3d.Euler)~System.ValueTuple{System.Double,System.Double,System.Double}
  name: Implicit(Euler to (Double yaw, Double pitch, Double roll))
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Implicit_Vim_Math3d_Euler__System_ValueTuple_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.Euler.op_Implicit(Vim.Math3d.Euler)~System.ValueTuple{System.Double,System.Double,System.Double}
  name.vb: Widening(Euler to (yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.Euler.Implicit(Vim.Math3d.Euler to System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.Euler.Widening(Vim.Math3d.Euler to System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: Euler.Implicit(Euler to (Double yaw, Double pitch, Double roll))
  nameWithType.vb: Euler.Widening(Euler to (yaw As Double, pitch As Double, roll As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.Euler.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Implicit_
  commentId: Overload:Vim.Math3d.Euler.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Euler.Implicit
  fullName.vb: Vim.Math3d.Euler.Widening
  nameWithType: Euler.Implicit
  nameWithType.vb: Euler.Widening
- uid: Vim.Math3d.Euler.op_Inequality(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: Inequality(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Inequality_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Inequality(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Inequality(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.Inequality(Euler, Euler)
- uid: Vim.Math3d.Euler.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Inequality_
  commentId: Overload:Vim.Math3d.Euler.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Inequality
  nameWithType: Euler.Inequality
- uid: Vim.Math3d.Euler.op_LessThan(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: LessThan(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_LessThan_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_LessThan(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.LessThan(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.LessThan(Euler, Euler)
- uid: Vim.Math3d.Euler.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_LessThan_
  commentId: Overload:Vim.Math3d.Euler.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Euler.LessThan
  nameWithType: Euler.LessThan
- uid: Vim.Math3d.Euler.op_LessThanOrEqual(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: LessThanOrEqual(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_LessThanOrEqual_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_LessThanOrEqual(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.LessThanOrEqual(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.LessThanOrEqual(Euler, Euler)
- uid: Vim.Math3d.Euler.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Euler.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Euler.LessThanOrEqual
  nameWithType: Euler.LessThanOrEqual
- uid: Vim.Math3d.Euler.op_Multiply(System.Double,Vim.Math3d.Euler)
  name: Multiply(Double, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Multiply_System_Double_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Multiply(System.Double,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Multiply(System.Double, Vim.Math3d.Euler)
  nameWithType: Euler.Multiply(Double, Euler)
- uid: Vim.Math3d.Euler.op_Multiply(Vim.Math3d.Euler,System.Double)
  name: Multiply(Euler, Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Multiply_Vim_Math3d_Euler_System_Double_
  commentId: M:Vim.Math3d.Euler.op_Multiply(Vim.Math3d.Euler,System.Double)
  fullName: Vim.Math3d.Euler.Multiply(Vim.Math3d.Euler, System.Double)
  nameWithType: Euler.Multiply(Euler, Double)
- uid: Vim.Math3d.Euler.op_Multiply(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: Multiply(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Multiply_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Multiply(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Multiply(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.Multiply(Euler, Euler)
- uid: Vim.Math3d.Euler.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Multiply_
  commentId: Overload:Vim.Math3d.Euler.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Multiply
  nameWithType: Euler.Multiply
- uid: Vim.Math3d.Euler.op_Subtraction(System.Double,Vim.Math3d.Euler)
  name: Subtraction(Double, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Subtraction_System_Double_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Subtraction(System.Double,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Subtraction(System.Double, Vim.Math3d.Euler)
  nameWithType: Euler.Subtraction(Double, Euler)
- uid: Vim.Math3d.Euler.op_Subtraction(Vim.Math3d.Euler,System.Double)
  name: Subtraction(Euler, Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Subtraction_Vim_Math3d_Euler_System_Double_
  commentId: M:Vim.Math3d.Euler.op_Subtraction(Vim.Math3d.Euler,System.Double)
  fullName: Vim.Math3d.Euler.Subtraction(Vim.Math3d.Euler, System.Double)
  nameWithType: Euler.Subtraction(Euler, Double)
- uid: Vim.Math3d.Euler.op_Subtraction(Vim.Math3d.Euler,Vim.Math3d.Euler)
  name: Subtraction(Euler, Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Subtraction_Vim_Math3d_Euler_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_Subtraction(Vim.Math3d.Euler,Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.Subtraction(Vim.Math3d.Euler, Vim.Math3d.Euler)
  nameWithType: Euler.Subtraction(Euler, Euler)
- uid: Vim.Math3d.Euler.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_Subtraction_
  commentId: Overload:Vim.Math3d.Euler.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Euler.Subtraction
  nameWithType: Euler.Subtraction
- uid: Vim.Math3d.Euler.op_UnaryNegation(Vim.Math3d.Euler)
  name: UnaryNegation(Euler)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_UnaryNegation_Vim_Math3d_Euler_
  commentId: M:Vim.Math3d.Euler.op_UnaryNegation(Vim.Math3d.Euler)
  fullName: Vim.Math3d.Euler.UnaryNegation(Vim.Math3d.Euler)
  nameWithType: Euler.UnaryNegation(Euler)
- uid: Vim.Math3d.Euler.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Euler.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Euler.UnaryNegation
  nameWithType: Euler.UnaryNegation
- uid: Vim.Math3d.Euler.Pitch
  name: Pitch
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Pitch
  commentId: F:Vim.Math3d.Euler.Pitch
  fullName: Vim.Math3d.Euler.Pitch
  nameWithType: Euler.Pitch
- uid: Vim.Math3d.Euler.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_ProductComponents
  commentId: M:Vim.Math3d.Euler.ProductComponents
  fullName: Vim.Math3d.Euler.ProductComponents()
  nameWithType: Euler.ProductComponents()
- uid: Vim.Math3d.Euler.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_ProductComponents_
  commentId: Overload:Vim.Math3d.Euler.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Euler.ProductComponents
  nameWithType: Euler.ProductComponents
- uid: Vim.Math3d.Euler.Roll
  name: Roll
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Roll
  commentId: F:Vim.Math3d.Euler.Roll
  fullName: Vim.Math3d.Euler.Roll
  nameWithType: Euler.Roll
- uid: Vim.Math3d.Euler.SetPitch(System.Double)
  name: SetPitch(Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SetPitch_System_Double_
  commentId: M:Vim.Math3d.Euler.SetPitch(System.Double)
  fullName: Vim.Math3d.Euler.SetPitch(System.Double)
  nameWithType: Euler.SetPitch(Double)
- uid: Vim.Math3d.Euler.SetPitch*
  name: SetPitch
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SetPitch_
  commentId: Overload:Vim.Math3d.Euler.SetPitch
  isSpec: "True"
  fullName: Vim.Math3d.Euler.SetPitch
  nameWithType: Euler.SetPitch
- uid: Vim.Math3d.Euler.SetRoll(System.Double)
  name: SetRoll(Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SetRoll_System_Double_
  commentId: M:Vim.Math3d.Euler.SetRoll(System.Double)
  fullName: Vim.Math3d.Euler.SetRoll(System.Double)
  nameWithType: Euler.SetRoll(Double)
- uid: Vim.Math3d.Euler.SetRoll*
  name: SetRoll
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SetRoll_
  commentId: Overload:Vim.Math3d.Euler.SetRoll
  isSpec: "True"
  fullName: Vim.Math3d.Euler.SetRoll
  nameWithType: Euler.SetRoll
- uid: Vim.Math3d.Euler.SetYaw(System.Double)
  name: SetYaw(Double)
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SetYaw_System_Double_
  commentId: M:Vim.Math3d.Euler.SetYaw(System.Double)
  fullName: Vim.Math3d.Euler.SetYaw(System.Double)
  nameWithType: Euler.SetYaw(Double)
- uid: Vim.Math3d.Euler.SetYaw*
  name: SetYaw
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SetYaw_
  commentId: Overload:Vim.Math3d.Euler.SetYaw
  isSpec: "True"
  fullName: Vim.Math3d.Euler.SetYaw
  nameWithType: Euler.SetYaw
- uid: Vim.Math3d.Euler.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SumComponents
  commentId: M:Vim.Math3d.Euler.SumComponents
  fullName: Vim.Math3d.Euler.SumComponents()
  nameWithType: Euler.SumComponents()
- uid: Vim.Math3d.Euler.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SumComponents_
  commentId: Overload:Vim.Math3d.Euler.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Euler.SumComponents
  nameWithType: Euler.SumComponents
- uid: Vim.Math3d.Euler.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SumSqrComponents
  commentId: M:Vim.Math3d.Euler.SumSqrComponents
  fullName: Vim.Math3d.Euler.SumSqrComponents()
  nameWithType: Euler.SumSqrComponents()
- uid: Vim.Math3d.Euler.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Euler.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Euler.SumSqrComponents
  nameWithType: Euler.SumSqrComponents
- uid: Vim.Math3d.Euler.ToString
  name: ToString()
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_ToString
  commentId: M:Vim.Math3d.Euler.ToString
  fullName: Vim.Math3d.Euler.ToString()
  nameWithType: Euler.ToString()
- uid: Vim.Math3d.Euler.ToString*
  name: ToString
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_ToString_
  commentId: Overload:Vim.Math3d.Euler.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Euler.ToString
  nameWithType: Euler.ToString
- uid: Vim.Math3d.Euler.UnitPitch
  name: UnitPitch
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_UnitPitch
  commentId: F:Vim.Math3d.Euler.UnitPitch
  fullName: Vim.Math3d.Euler.UnitPitch
  nameWithType: Euler.UnitPitch
- uid: Vim.Math3d.Euler.UnitRoll
  name: UnitRoll
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_UnitRoll
  commentId: F:Vim.Math3d.Euler.UnitRoll
  fullName: Vim.Math3d.Euler.UnitRoll
  nameWithType: Euler.UnitRoll
- uid: Vim.Math3d.Euler.UnitYaw
  name: UnitYaw
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_UnitYaw
  commentId: F:Vim.Math3d.Euler.UnitYaw
  fullName: Vim.Math3d.Euler.UnitYaw
  nameWithType: Euler.UnitYaw
- uid: Vim.Math3d.Euler.Yaw
  name: Yaw
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Yaw
  commentId: F:Vim.Math3d.Euler.Yaw
  fullName: Vim.Math3d.Euler.Yaw
  nameWithType: Euler.Yaw
- uid: Vim.Math3d.Euler.Zero
  name: Zero
  href: api/Vim.Math3d.Euler.html#Vim_Math3d_Euler_Zero
  commentId: F:Vim.Math3d.Euler.Zero
  fullName: Vim.Math3d.Euler.Zero
  nameWithType: Euler.Zero
- uid: Vim.Math3d.GeoCoordinate
  name: GeoCoordinate
  href: api/Vim.Math3d.GeoCoordinate.html
  commentId: T:Vim.Math3d.GeoCoordinate
  fullName: Vim.Math3d.GeoCoordinate
  nameWithType: GeoCoordinate
- uid: Vim.Math3d.GeoCoordinate.#ctor(System.Double)
  name: GeoCoordinate(Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate__ctor_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.#ctor(System.Double)
  fullName: Vim.Math3d.GeoCoordinate.GeoCoordinate(System.Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double)
- uid: Vim.Math3d.GeoCoordinate.#ctor(System.Double,System.Double)
  name: GeoCoordinate(Double, Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate__ctor_System_Double_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.#ctor(System.Double,System.Double)
  fullName: Vim.Math3d.GeoCoordinate.GeoCoordinate(System.Double, System.Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double, Double)
- uid: Vim.Math3d.GeoCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name: GeoCoordinate((Double latitude, Double longitude))
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate__ctor_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.GeoCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name.vb: GeoCoordinate((latitude As Double, longitude As Double)(Of Double, Double))
  fullName: Vim.Math3d.GeoCoordinate.GeoCoordinate(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.GeoCoordinate.GeoCoordinate(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: GeoCoordinate.GeoCoordinate((Double latitude, Double longitude))
  nameWithType.vb: GeoCoordinate.GeoCoordinate((latitude As Double, longitude As Double)(Of Double, Double))
- uid: Vim.Math3d.GeoCoordinate.#ctor*
  name: GeoCoordinate
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate__ctor_
  commentId: Overload:Vim.Math3d.GeoCoordinate.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.GeoCoordinate
  nameWithType: GeoCoordinate.GeoCoordinate
- uid: Vim.Math3d.GeoCoordinate.AlmostEquals(Vim.Math3d.GeoCoordinate,System.Single)
  name: AlmostEquals(GeoCoordinate, Single)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_AlmostEquals_Vim_Math3d_GeoCoordinate_System_Single_
  commentId: M:Vim.Math3d.GeoCoordinate.AlmostEquals(Vim.Math3d.GeoCoordinate,System.Single)
  fullName: Vim.Math3d.GeoCoordinate.AlmostEquals(Vim.Math3d.GeoCoordinate, System.Single)
  nameWithType: GeoCoordinate.AlmostEquals(GeoCoordinate, Single)
- uid: Vim.Math3d.GeoCoordinate.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_AlmostEquals_
  commentId: Overload:Vim.Math3d.GeoCoordinate.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.AlmostEquals
  nameWithType: GeoCoordinate.AlmostEquals
- uid: Vim.Math3d.GeoCoordinate.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.GeoCoordinate.AlmostZero(System.Single)
  fullName: Vim.Math3d.GeoCoordinate.AlmostZero(System.Single)
  nameWithType: GeoCoordinate.AlmostZero(Single)
- uid: Vim.Math3d.GeoCoordinate.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_AlmostZero_
  commentId: Overload:Vim.Math3d.GeoCoordinate.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.AlmostZero
  nameWithType: GeoCoordinate.AlmostZero
- uid: Vim.Math3d.GeoCoordinate.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_AnyComponentNegative
  commentId: M:Vim.Math3d.GeoCoordinate.AnyComponentNegative
  fullName: Vim.Math3d.GeoCoordinate.AnyComponentNegative()
  nameWithType: GeoCoordinate.AnyComponentNegative()
- uid: Vim.Math3d.GeoCoordinate.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.GeoCoordinate.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.AnyComponentNegative
  nameWithType: GeoCoordinate.AnyComponentNegative
- uid: Vim.Math3d.GeoCoordinate.CompareTo(Vim.Math3d.GeoCoordinate)
  name: CompareTo(GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_CompareTo_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.CompareTo(Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.CompareTo(Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.CompareTo(GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_CompareTo_
  commentId: Overload:Vim.Math3d.GeoCoordinate.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.CompareTo
  nameWithType: GeoCoordinate.CompareTo
- uid: Vim.Math3d.GeoCoordinate.Create(System.Double,System.Double)
  name: Create(Double, Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Create_System_Double_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.Create(System.Double,System.Double)
  fullName: Vim.Math3d.GeoCoordinate.Create(System.Double, System.Double)
  nameWithType: GeoCoordinate.Create(Double, Double)
- uid: Vim.Math3d.GeoCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name: Create((Double latitude, Double longitude))
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Create_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.GeoCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name.vb: Create((latitude As Double, longitude As Double)(Of Double, Double))
  fullName: Vim.Math3d.GeoCoordinate.Create(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.GeoCoordinate.Create(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: GeoCoordinate.Create((Double latitude, Double longitude))
  nameWithType.vb: GeoCoordinate.Create((latitude As Double, longitude As Double)(Of Double, Double))
- uid: Vim.Math3d.GeoCoordinate.Create*
  name: Create
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Create_
  commentId: Overload:Vim.Math3d.GeoCoordinate.Create
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Create
  nameWithType: GeoCoordinate.Create
- uid: Vim.Math3d.GeoCoordinate.Deconstruct(System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Deconstruct_System_Double__System_Double__
  commentId: M:Vim.Math3d.GeoCoordinate.Deconstruct(System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
  fullName: Vim.Math3d.GeoCoordinate.Deconstruct(out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.GeoCoordinate.Deconstruct(ByRef System.Double, ByRef System.Double)
  nameWithType: GeoCoordinate.Deconstruct(out Double, out Double)
  nameWithType.vb: GeoCoordinate.Deconstruct(ByRef Double, ByRef Double)
- uid: Vim.Math3d.GeoCoordinate.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Deconstruct_
  commentId: Overload:Vim.Math3d.GeoCoordinate.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Deconstruct
  nameWithType: GeoCoordinate.Deconstruct
- uid: Vim.Math3d.GeoCoordinate.Dot(Vim.Math3d.GeoCoordinate)
  name: Dot(GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Dot_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.Dot(Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Dot(Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Dot(GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.Dot(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: Dot(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Dot_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.Dot(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Dot(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Dot(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.Dot*
  name: Dot
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Dot_
  commentId: Overload:Vim.Math3d.GeoCoordinate.Dot
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Dot
  nameWithType: GeoCoordinate.Dot
- uid: Vim.Math3d.GeoCoordinate.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Equals_System_Object_
  commentId: M:Vim.Math3d.GeoCoordinate.Equals(System.Object)
  fullName: Vim.Math3d.GeoCoordinate.Equals(System.Object)
  nameWithType: GeoCoordinate.Equals(Object)
- uid: Vim.Math3d.GeoCoordinate.Equals(Vim.Math3d.GeoCoordinate)
  name: Equals(GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Equals_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.Equals(Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Equals(Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Equals(GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.Equals*
  name: Equals
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Equals_
  commentId: Overload:Vim.Math3d.GeoCoordinate.Equals
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Equals
  nameWithType: GeoCoordinate.Equals
- uid: Vim.Math3d.GeoCoordinate.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.GeoCoordinate.GetComponent(System.Int32)
  fullName: Vim.Math3d.GeoCoordinate.GetComponent(System.Int32)
  nameWithType: GeoCoordinate.GetComponent(Int32)
- uid: Vim.Math3d.GeoCoordinate.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_GetComponent_
  commentId: Overload:Vim.Math3d.GeoCoordinate.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.GetComponent
  nameWithType: GeoCoordinate.GetComponent
- uid: Vim.Math3d.GeoCoordinate.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_GetHashCode
  commentId: M:Vim.Math3d.GeoCoordinate.GetHashCode
  fullName: Vim.Math3d.GeoCoordinate.GetHashCode()
  nameWithType: GeoCoordinate.GetHashCode()
- uid: Vim.Math3d.GeoCoordinate.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_GetHashCode_
  commentId: Overload:Vim.Math3d.GeoCoordinate.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.GetHashCode
  nameWithType: GeoCoordinate.GetHashCode
- uid: Vim.Math3d.GeoCoordinate.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_IsInfinity
  commentId: M:Vim.Math3d.GeoCoordinate.IsInfinity
  fullName: Vim.Math3d.GeoCoordinate.IsInfinity()
  nameWithType: GeoCoordinate.IsInfinity()
- uid: Vim.Math3d.GeoCoordinate.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_IsInfinity_
  commentId: Overload:Vim.Math3d.GeoCoordinate.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.IsInfinity
  nameWithType: GeoCoordinate.IsInfinity
- uid: Vim.Math3d.GeoCoordinate.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_IsNaN
  commentId: M:Vim.Math3d.GeoCoordinate.IsNaN
  fullName: Vim.Math3d.GeoCoordinate.IsNaN()
  nameWithType: GeoCoordinate.IsNaN()
- uid: Vim.Math3d.GeoCoordinate.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_IsNaN_
  commentId: Overload:Vim.Math3d.GeoCoordinate.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.IsNaN
  nameWithType: GeoCoordinate.IsNaN
- uid: Vim.Math3d.GeoCoordinate.Latitude
  name: Latitude
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Latitude
  commentId: F:Vim.Math3d.GeoCoordinate.Latitude
  fullName: Vim.Math3d.GeoCoordinate.Latitude
  nameWithType: GeoCoordinate.Latitude
- uid: Vim.Math3d.GeoCoordinate.Longitude
  name: Longitude
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Longitude
  commentId: F:Vim.Math3d.GeoCoordinate.Longitude
  fullName: Vim.Math3d.GeoCoordinate.Longitude
  nameWithType: GeoCoordinate.Longitude
- uid: Vim.Math3d.GeoCoordinate.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Magnitude
  commentId: M:Vim.Math3d.GeoCoordinate.Magnitude
  fullName: Vim.Math3d.GeoCoordinate.Magnitude()
  nameWithType: GeoCoordinate.Magnitude()
- uid: Vim.Math3d.GeoCoordinate.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Magnitude_
  commentId: Overload:Vim.Math3d.GeoCoordinate.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Magnitude
  nameWithType: GeoCoordinate.Magnitude
- uid: Vim.Math3d.GeoCoordinate.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MagnitudeSquared
  commentId: M:Vim.Math3d.GeoCoordinate.MagnitudeSquared
  fullName: Vim.Math3d.GeoCoordinate.MagnitudeSquared()
  nameWithType: GeoCoordinate.MagnitudeSquared()
- uid: Vim.Math3d.GeoCoordinate.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.GeoCoordinate.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.MagnitudeSquared
  nameWithType: GeoCoordinate.MagnitudeSquared
- uid: Vim.Math3d.GeoCoordinate.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MaxComponent
  commentId: M:Vim.Math3d.GeoCoordinate.MaxComponent
  fullName: Vim.Math3d.GeoCoordinate.MaxComponent()
  nameWithType: GeoCoordinate.MaxComponent()
- uid: Vim.Math3d.GeoCoordinate.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MaxComponent_
  commentId: Overload:Vim.Math3d.GeoCoordinate.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.MaxComponent
  nameWithType: GeoCoordinate.MaxComponent
- uid: Vim.Math3d.GeoCoordinate.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MaxValue
  commentId: F:Vim.Math3d.GeoCoordinate.MaxValue
  fullName: Vim.Math3d.GeoCoordinate.MaxValue
  nameWithType: GeoCoordinate.MaxValue
- uid: Vim.Math3d.GeoCoordinate.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MinComponent
  commentId: M:Vim.Math3d.GeoCoordinate.MinComponent
  fullName: Vim.Math3d.GeoCoordinate.MinComponent()
  nameWithType: GeoCoordinate.MinComponent()
- uid: Vim.Math3d.GeoCoordinate.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MinComponent_
  commentId: Overload:Vim.Math3d.GeoCoordinate.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.MinComponent
  nameWithType: GeoCoordinate.MinComponent
- uid: Vim.Math3d.GeoCoordinate.MinValue
  name: MinValue
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_MinValue
  commentId: F:Vim.Math3d.GeoCoordinate.MinValue
  fullName: Vim.Math3d.GeoCoordinate.MinValue
  nameWithType: GeoCoordinate.MinValue
- uid: Vim.Math3d.GeoCoordinate.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_NumComponents
  commentId: F:Vim.Math3d.GeoCoordinate.NumComponents
  fullName: Vim.Math3d.GeoCoordinate.NumComponents
  nameWithType: GeoCoordinate.NumComponents
- uid: Vim.Math3d.GeoCoordinate.One
  name: One
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_One
  commentId: F:Vim.Math3d.GeoCoordinate.One
  fullName: Vim.Math3d.GeoCoordinate.One
  nameWithType: GeoCoordinate.One
- uid: Vim.Math3d.GeoCoordinate.op_Addition(System.Double,Vim.Math3d.GeoCoordinate)
  name: Addition(Double, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Addition_System_Double_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Addition(System.Double,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Addition(System.Double, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Addition(Double, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Addition(Vim.Math3d.GeoCoordinate,System.Double)
  name: Addition(GeoCoordinate, Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Addition_Vim_Math3d_GeoCoordinate_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Addition(Vim.Math3d.GeoCoordinate,System.Double)
  fullName: Vim.Math3d.GeoCoordinate.Addition(Vim.Math3d.GeoCoordinate, System.Double)
  nameWithType: GeoCoordinate.Addition(GeoCoordinate, Double)
- uid: Vim.Math3d.GeoCoordinate.op_Addition(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: Addition(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Addition_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Addition(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Addition(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Addition(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Addition*
  name: Addition
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Addition_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Addition
  nameWithType: GeoCoordinate.Addition
- uid: Vim.Math3d.GeoCoordinate.op_Division(System.Double,Vim.Math3d.GeoCoordinate)
  name: Division(Double, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Division_System_Double_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Division(System.Double,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Division(System.Double, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Division(Double, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Division(Vim.Math3d.GeoCoordinate,System.Double)
  name: Division(GeoCoordinate, Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Division_Vim_Math3d_GeoCoordinate_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Division(Vim.Math3d.GeoCoordinate,System.Double)
  fullName: Vim.Math3d.GeoCoordinate.Division(Vim.Math3d.GeoCoordinate, System.Double)
  nameWithType: GeoCoordinate.Division(GeoCoordinate, Double)
- uid: Vim.Math3d.GeoCoordinate.op_Division(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: Division(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Division_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Division(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Division(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Division(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Division*
  name: Division
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Division_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Division
  nameWithType: GeoCoordinate.Division
- uid: Vim.Math3d.GeoCoordinate.op_Equality(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: Equality(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Equality_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Equality(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Equality(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Equality(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Equality*
  name: Equality
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Equality_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Equality
  nameWithType: GeoCoordinate.Equality
- uid: Vim.Math3d.GeoCoordinate.op_GreaterThan(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: GreaterThan(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_GreaterThan_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_GreaterThan(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.GreaterThan(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.GreaterThan(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_GreaterThan_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.GreaterThan
  nameWithType: GeoCoordinate.GreaterThan
- uid: Vim.Math3d.GeoCoordinate.op_GreaterThanOrEqual(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: GreaterThanOrEqual(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_GreaterThanOrEqual_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_GreaterThanOrEqual(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.GreaterThanOrEqual(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.GreaterThanOrEqual(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.GreaterThanOrEqual
  nameWithType: GeoCoordinate.GreaterThanOrEqual
- uid: Vim.Math3d.GeoCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.GeoCoordinate
  name: Implicit((Double latitude, Double longitude) to GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Implicit_System_ValueTuple_System_Double_System_Double___Vim_Math3d_GeoCoordinate
  commentId: M:Vim.Math3d.GeoCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.GeoCoordinate
  name.vb: Widening((latitude As Double, longitude As Double)(Of Double, Double) to GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Implicit(System.ValueTuple<System.Double, System.Double> to Vim.Math3d.GeoCoordinate)
  fullName.vb: Vim.Math3d.GeoCoordinate.Widening(System.ValueTuple(Of System.Double, System.Double) to Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Implicit((Double latitude, Double longitude) to GeoCoordinate)
  nameWithType.vb: GeoCoordinate.Widening((latitude As Double, longitude As Double)(Of Double, Double) to GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Implicit(Vim.Math3d.GeoCoordinate)~System.ValueTuple{System.Double,System.Double}
  name: Implicit(GeoCoordinate to (Double latitude, Double longitude))
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Implicit_Vim_Math3d_GeoCoordinate__System_ValueTuple_System_Double_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Implicit(Vim.Math3d.GeoCoordinate)~System.ValueTuple{System.Double,System.Double}
  name.vb: Widening(GeoCoordinate to (latitude As Double, longitude As Double)(Of Double, Double))
  fullName: Vim.Math3d.GeoCoordinate.Implicit(Vim.Math3d.GeoCoordinate to System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.GeoCoordinate.Widening(Vim.Math3d.GeoCoordinate to System.ValueTuple(Of System.Double, System.Double))
  nameWithType: GeoCoordinate.Implicit(GeoCoordinate to (Double latitude, Double longitude))
  nameWithType.vb: GeoCoordinate.Widening(GeoCoordinate to (latitude As Double, longitude As Double)(Of Double, Double))
- uid: Vim.Math3d.GeoCoordinate.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Implicit_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.GeoCoordinate.Implicit
  fullName.vb: Vim.Math3d.GeoCoordinate.Widening
  nameWithType: GeoCoordinate.Implicit
  nameWithType.vb: GeoCoordinate.Widening
- uid: Vim.Math3d.GeoCoordinate.op_Inequality(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: Inequality(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Inequality_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Inequality(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Inequality(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Inequality(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Inequality_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Inequality
  nameWithType: GeoCoordinate.Inequality
- uid: Vim.Math3d.GeoCoordinate.op_LessThan(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: LessThan(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_LessThan_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_LessThan(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.LessThan(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.LessThan(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_LessThan_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.LessThan
  nameWithType: GeoCoordinate.LessThan
- uid: Vim.Math3d.GeoCoordinate.op_LessThanOrEqual(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: LessThanOrEqual(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_LessThanOrEqual_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_LessThanOrEqual(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.LessThanOrEqual(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.LessThanOrEqual(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.LessThanOrEqual
  nameWithType: GeoCoordinate.LessThanOrEqual
- uid: Vim.Math3d.GeoCoordinate.op_Multiply(System.Double,Vim.Math3d.GeoCoordinate)
  name: Multiply(Double, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Multiply_System_Double_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Multiply(System.Double,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Multiply(System.Double, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Multiply(Double, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Multiply(Vim.Math3d.GeoCoordinate,System.Double)
  name: Multiply(GeoCoordinate, Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Multiply_Vim_Math3d_GeoCoordinate_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Multiply(Vim.Math3d.GeoCoordinate,System.Double)
  fullName: Vim.Math3d.GeoCoordinate.Multiply(Vim.Math3d.GeoCoordinate, System.Double)
  nameWithType: GeoCoordinate.Multiply(GeoCoordinate, Double)
- uid: Vim.Math3d.GeoCoordinate.op_Multiply(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: Multiply(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Multiply_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Multiply(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Multiply(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Multiply(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Multiply_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Multiply
  nameWithType: GeoCoordinate.Multiply
- uid: Vim.Math3d.GeoCoordinate.op_Subtraction(System.Double,Vim.Math3d.GeoCoordinate)
  name: Subtraction(Double, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Subtraction_System_Double_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Subtraction(System.Double,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Subtraction(System.Double, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Subtraction(Double, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Subtraction(Vim.Math3d.GeoCoordinate,System.Double)
  name: Subtraction(GeoCoordinate, Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Subtraction_Vim_Math3d_GeoCoordinate_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Subtraction(Vim.Math3d.GeoCoordinate,System.Double)
  fullName: Vim.Math3d.GeoCoordinate.Subtraction(Vim.Math3d.GeoCoordinate, System.Double)
  nameWithType: GeoCoordinate.Subtraction(GeoCoordinate, Double)
- uid: Vim.Math3d.GeoCoordinate.op_Subtraction(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  name: Subtraction(GeoCoordinate, GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Subtraction_Vim_Math3d_GeoCoordinate_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_Subtraction(Vim.Math3d.GeoCoordinate,Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.Subtraction(Vim.Math3d.GeoCoordinate, Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.Subtraction(GeoCoordinate, GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_Subtraction_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.Subtraction
  nameWithType: GeoCoordinate.Subtraction
- uid: Vim.Math3d.GeoCoordinate.op_UnaryNegation(Vim.Math3d.GeoCoordinate)
  name: UnaryNegation(GeoCoordinate)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_UnaryNegation_Vim_Math3d_GeoCoordinate_
  commentId: M:Vim.Math3d.GeoCoordinate.op_UnaryNegation(Vim.Math3d.GeoCoordinate)
  fullName: Vim.Math3d.GeoCoordinate.UnaryNegation(Vim.Math3d.GeoCoordinate)
  nameWithType: GeoCoordinate.UnaryNegation(GeoCoordinate)
- uid: Vim.Math3d.GeoCoordinate.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.GeoCoordinate.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.UnaryNegation
  nameWithType: GeoCoordinate.UnaryNegation
- uid: Vim.Math3d.GeoCoordinate.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_ProductComponents
  commentId: M:Vim.Math3d.GeoCoordinate.ProductComponents
  fullName: Vim.Math3d.GeoCoordinate.ProductComponents()
  nameWithType: GeoCoordinate.ProductComponents()
- uid: Vim.Math3d.GeoCoordinate.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_ProductComponents_
  commentId: Overload:Vim.Math3d.GeoCoordinate.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.ProductComponents
  nameWithType: GeoCoordinate.ProductComponents
- uid: Vim.Math3d.GeoCoordinate.SetLatitude(System.Double)
  name: SetLatitude(Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SetLatitude_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.SetLatitude(System.Double)
  fullName: Vim.Math3d.GeoCoordinate.SetLatitude(System.Double)
  nameWithType: GeoCoordinate.SetLatitude(Double)
- uid: Vim.Math3d.GeoCoordinate.SetLatitude*
  name: SetLatitude
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SetLatitude_
  commentId: Overload:Vim.Math3d.GeoCoordinate.SetLatitude
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.SetLatitude
  nameWithType: GeoCoordinate.SetLatitude
- uid: Vim.Math3d.GeoCoordinate.SetLongitude(System.Double)
  name: SetLongitude(Double)
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SetLongitude_System_Double_
  commentId: M:Vim.Math3d.GeoCoordinate.SetLongitude(System.Double)
  fullName: Vim.Math3d.GeoCoordinate.SetLongitude(System.Double)
  nameWithType: GeoCoordinate.SetLongitude(Double)
- uid: Vim.Math3d.GeoCoordinate.SetLongitude*
  name: SetLongitude
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SetLongitude_
  commentId: Overload:Vim.Math3d.GeoCoordinate.SetLongitude
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.SetLongitude
  nameWithType: GeoCoordinate.SetLongitude
- uid: Vim.Math3d.GeoCoordinate.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SumComponents
  commentId: M:Vim.Math3d.GeoCoordinate.SumComponents
  fullName: Vim.Math3d.GeoCoordinate.SumComponents()
  nameWithType: GeoCoordinate.SumComponents()
- uid: Vim.Math3d.GeoCoordinate.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SumComponents_
  commentId: Overload:Vim.Math3d.GeoCoordinate.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.SumComponents
  nameWithType: GeoCoordinate.SumComponents
- uid: Vim.Math3d.GeoCoordinate.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SumSqrComponents
  commentId: M:Vim.Math3d.GeoCoordinate.SumSqrComponents
  fullName: Vim.Math3d.GeoCoordinate.SumSqrComponents()
  nameWithType: GeoCoordinate.SumSqrComponents()
- uid: Vim.Math3d.GeoCoordinate.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_SumSqrComponents_
  commentId: Overload:Vim.Math3d.GeoCoordinate.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.SumSqrComponents
  nameWithType: GeoCoordinate.SumSqrComponents
- uid: Vim.Math3d.GeoCoordinate.ToString
  name: ToString()
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_ToString
  commentId: M:Vim.Math3d.GeoCoordinate.ToString
  fullName: Vim.Math3d.GeoCoordinate.ToString()
  nameWithType: GeoCoordinate.ToString()
- uid: Vim.Math3d.GeoCoordinate.ToString*
  name: ToString
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_ToString_
  commentId: Overload:Vim.Math3d.GeoCoordinate.ToString
  isSpec: "True"
  fullName: Vim.Math3d.GeoCoordinate.ToString
  nameWithType: GeoCoordinate.ToString
- uid: Vim.Math3d.GeoCoordinate.UnitLatitude
  name: UnitLatitude
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_UnitLatitude
  commentId: F:Vim.Math3d.GeoCoordinate.UnitLatitude
  fullName: Vim.Math3d.GeoCoordinate.UnitLatitude
  nameWithType: GeoCoordinate.UnitLatitude
- uid: Vim.Math3d.GeoCoordinate.UnitLongitude
  name: UnitLongitude
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_UnitLongitude
  commentId: F:Vim.Math3d.GeoCoordinate.UnitLongitude
  fullName: Vim.Math3d.GeoCoordinate.UnitLongitude
  nameWithType: GeoCoordinate.UnitLongitude
- uid: Vim.Math3d.GeoCoordinate.Zero
  name: Zero
  href: api/Vim.Math3d.GeoCoordinate.html#Vim_Math3d_GeoCoordinate_Zero
  commentId: F:Vim.Math3d.GeoCoordinate.Zero
  fullName: Vim.Math3d.GeoCoordinate.Zero
  nameWithType: GeoCoordinate.Zero
- uid: Vim.Math3d.Hash
  name: Hash
  href: api/Vim.Math3d.Hash.html
  commentId: T:Vim.Math3d.Hash
  fullName: Vim.Math3d.Hash
  nameWithType: Hash
- uid: Vim.Math3d.Hash.Combine(System.Collections.Generic.IList{System.Int32})
  name: Combine(IList<Int32>)
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_Combine_System_Collections_Generic_IList_System_Int32__
  commentId: M:Vim.Math3d.Hash.Combine(System.Collections.Generic.IList{System.Int32})
  name.vb: Combine(IList(Of Int32))
  fullName: Vim.Math3d.Hash.Combine(System.Collections.Generic.IList<System.Int32>)
  fullName.vb: Vim.Math3d.Hash.Combine(System.Collections.Generic.IList(Of System.Int32))
  nameWithType: Hash.Combine(IList<Int32>)
  nameWithType.vb: Hash.Combine(IList(Of Int32))
- uid: Vim.Math3d.Hash.Combine(System.Int32,System.Int32)
  name: Combine(Int32, Int32)
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_Combine_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Hash.Combine(System.Int32,System.Int32)
  fullName: Vim.Math3d.Hash.Combine(System.Int32, System.Int32)
  nameWithType: Hash.Combine(Int32, Int32)
- uid: Vim.Math3d.Hash.Combine(System.Int32,System.Int32,System.Int32)
  name: Combine(Int32, Int32, Int32)
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_Combine_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Hash.Combine(System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.Hash.Combine(System.Int32, System.Int32, System.Int32)
  nameWithType: Hash.Combine(Int32, Int32, Int32)
- uid: Vim.Math3d.Hash.Combine(System.Int32,System.Int32,System.Int32,System.Int32)
  name: Combine(Int32, Int32, Int32, Int32)
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_Combine_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Hash.Combine(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.Hash.Combine(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: Hash.Combine(Int32, Int32, Int32, Int32)
- uid: Vim.Math3d.Hash.Combine(System.Int32[])
  name: Combine(Int32[])
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_Combine_System_Int32___
  commentId: M:Vim.Math3d.Hash.Combine(System.Int32[])
  name.vb: Combine(Int32())
  fullName: Vim.Math3d.Hash.Combine(System.Int32[])
  fullName.vb: Vim.Math3d.Hash.Combine(System.Int32())
  nameWithType: Hash.Combine(Int32[])
  nameWithType.vb: Hash.Combine(Int32())
- uid: Vim.Math3d.Hash.Combine*
  name: Combine
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_Combine_
  commentId: Overload:Vim.Math3d.Hash.Combine
  isSpec: "True"
  fullName: Vim.Math3d.Hash.Combine
  nameWithType: Hash.Combine
- uid: Vim.Math3d.Hash.HashCodes*
  name: HashCodes
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_HashCodes_
  commentId: Overload:Vim.Math3d.Hash.HashCodes
  isSpec: "True"
  fullName: Vim.Math3d.Hash.HashCodes
  nameWithType: Hash.HashCodes
- uid: Vim.Math3d.Hash.HashCodes``1(System.Collections.Generic.IEnumerable{``0})
  name: HashCodes<T>(IEnumerable<T>)
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_HashCodes__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Vim.Math3d.Hash.HashCodes``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: HashCodes(Of T)(IEnumerable(Of T))
  fullName: Vim.Math3d.Hash.HashCodes<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Vim.Math3d.Hash.HashCodes(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Hash.HashCodes<T>(IEnumerable<T>)
  nameWithType.vb: Hash.HashCodes(Of T)(IEnumerable(Of T))
- uid: Vim.Math3d.Hash.HashValues(System.Collections.Generic.IEnumerable{System.Int32})
  name: HashValues(IEnumerable<Int32>)
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_HashValues_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Vim.Math3d.Hash.HashValues(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: HashValues(IEnumerable(Of Int32))
  fullName: Vim.Math3d.Hash.HashValues(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Vim.Math3d.Hash.HashValues(System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: Hash.HashValues(IEnumerable<Int32>)
  nameWithType.vb: Hash.HashValues(IEnumerable(Of Int32))
- uid: Vim.Math3d.Hash.HashValues*
  name: HashValues
  href: api/Vim.Math3d.Hash.html#Vim_Math3d_Hash_HashValues_
  commentId: Overload:Vim.Math3d.Hash.HashValues
  isSpec: "True"
  fullName: Vim.Math3d.Hash.HashValues
  nameWithType: Hash.HashValues
- uid: Vim.Math3d.HorizontalCoordinate
  name: HorizontalCoordinate
  href: api/Vim.Math3d.HorizontalCoordinate.html
  commentId: T:Vim.Math3d.HorizontalCoordinate
  fullName: Vim.Math3d.HorizontalCoordinate
  nameWithType: HorizontalCoordinate
- uid: Vim.Math3d.HorizontalCoordinate.#ctor(System.Double)
  name: HorizontalCoordinate(Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate__ctor_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.#ctor(System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.HorizontalCoordinate(System.Double)
  nameWithType: HorizontalCoordinate.HorizontalCoordinate(Double)
- uid: Vim.Math3d.HorizontalCoordinate.#ctor(System.Double,System.Double)
  name: HorizontalCoordinate(Double, Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate__ctor_System_Double_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.#ctor(System.Double,System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.HorizontalCoordinate(System.Double, System.Double)
  nameWithType: HorizontalCoordinate.HorizontalCoordinate(Double, Double)
- uid: Vim.Math3d.HorizontalCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name: HorizontalCoordinate((Double azimuth, Double inclination))
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate__ctor_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.HorizontalCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name.vb: HorizontalCoordinate((azimuth As Double, inclination As Double)(Of Double, Double))
  fullName: Vim.Math3d.HorizontalCoordinate.HorizontalCoordinate(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.HorizontalCoordinate.HorizontalCoordinate(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: HorizontalCoordinate.HorizontalCoordinate((Double azimuth, Double inclination))
  nameWithType.vb: HorizontalCoordinate.HorizontalCoordinate((azimuth As Double, inclination As Double)(Of Double, Double))
- uid: Vim.Math3d.HorizontalCoordinate.#ctor*
  name: HorizontalCoordinate
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate__ctor_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.HorizontalCoordinate
  nameWithType: HorizontalCoordinate.HorizontalCoordinate
- uid: Vim.Math3d.HorizontalCoordinate.AlmostEquals(Vim.Math3d.HorizontalCoordinate,System.Single)
  name: AlmostEquals(HorizontalCoordinate, Single)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_AlmostEquals_Vim_Math3d_HorizontalCoordinate_System_Single_
  commentId: M:Vim.Math3d.HorizontalCoordinate.AlmostEquals(Vim.Math3d.HorizontalCoordinate,System.Single)
  fullName: Vim.Math3d.HorizontalCoordinate.AlmostEquals(Vim.Math3d.HorizontalCoordinate, System.Single)
  nameWithType: HorizontalCoordinate.AlmostEquals(HorizontalCoordinate, Single)
- uid: Vim.Math3d.HorizontalCoordinate.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_AlmostEquals_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.AlmostEquals
  nameWithType: HorizontalCoordinate.AlmostEquals
- uid: Vim.Math3d.HorizontalCoordinate.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.HorizontalCoordinate.AlmostZero(System.Single)
  fullName: Vim.Math3d.HorizontalCoordinate.AlmostZero(System.Single)
  nameWithType: HorizontalCoordinate.AlmostZero(Single)
- uid: Vim.Math3d.HorizontalCoordinate.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_AlmostZero_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.AlmostZero
  nameWithType: HorizontalCoordinate.AlmostZero
- uid: Vim.Math3d.HorizontalCoordinate.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_AnyComponentNegative
  commentId: M:Vim.Math3d.HorizontalCoordinate.AnyComponentNegative
  fullName: Vim.Math3d.HorizontalCoordinate.AnyComponentNegative()
  nameWithType: HorizontalCoordinate.AnyComponentNegative()
- uid: Vim.Math3d.HorizontalCoordinate.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.AnyComponentNegative
  nameWithType: HorizontalCoordinate.AnyComponentNegative
- uid: Vim.Math3d.HorizontalCoordinate.Azimuth
  name: Azimuth
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Azimuth
  commentId: F:Vim.Math3d.HorizontalCoordinate.Azimuth
  fullName: Vim.Math3d.HorizontalCoordinate.Azimuth
  nameWithType: HorizontalCoordinate.Azimuth
- uid: Vim.Math3d.HorizontalCoordinate.CompareTo(Vim.Math3d.HorizontalCoordinate)
  name: CompareTo(HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_CompareTo_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.CompareTo(Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.CompareTo(Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.CompareTo(HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_CompareTo_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.CompareTo
  nameWithType: HorizontalCoordinate.CompareTo
- uid: Vim.Math3d.HorizontalCoordinate.Create(System.Double,System.Double)
  name: Create(Double, Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Create_System_Double_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.Create(System.Double,System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.Create(System.Double, System.Double)
  nameWithType: HorizontalCoordinate.Create(Double, Double)
- uid: Vim.Math3d.HorizontalCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name: Create((Double azimuth, Double inclination))
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Create_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.HorizontalCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name.vb: Create((azimuth As Double, inclination As Double)(Of Double, Double))
  fullName: Vim.Math3d.HorizontalCoordinate.Create(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.HorizontalCoordinate.Create(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: HorizontalCoordinate.Create((Double azimuth, Double inclination))
  nameWithType.vb: HorizontalCoordinate.Create((azimuth As Double, inclination As Double)(Of Double, Double))
- uid: Vim.Math3d.HorizontalCoordinate.Create*
  name: Create
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Create_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.Create
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Create
  nameWithType: HorizontalCoordinate.Create
- uid: Vim.Math3d.HorizontalCoordinate.Deconstruct(System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Deconstruct_System_Double__System_Double__
  commentId: M:Vim.Math3d.HorizontalCoordinate.Deconstruct(System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
  fullName: Vim.Math3d.HorizontalCoordinate.Deconstruct(out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.HorizontalCoordinate.Deconstruct(ByRef System.Double, ByRef System.Double)
  nameWithType: HorizontalCoordinate.Deconstruct(out Double, out Double)
  nameWithType.vb: HorizontalCoordinate.Deconstruct(ByRef Double, ByRef Double)
- uid: Vim.Math3d.HorizontalCoordinate.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Deconstruct_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Deconstruct
  nameWithType: HorizontalCoordinate.Deconstruct
- uid: Vim.Math3d.HorizontalCoordinate.Dot(Vim.Math3d.HorizontalCoordinate)
  name: Dot(HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Dot_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.Dot(Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Dot(Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Dot(HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.Dot(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: Dot(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Dot_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.Dot(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Dot(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Dot(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.Dot*
  name: Dot
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Dot_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.Dot
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Dot
  nameWithType: HorizontalCoordinate.Dot
- uid: Vim.Math3d.HorizontalCoordinate.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Equals_System_Object_
  commentId: M:Vim.Math3d.HorizontalCoordinate.Equals(System.Object)
  fullName: Vim.Math3d.HorizontalCoordinate.Equals(System.Object)
  nameWithType: HorizontalCoordinate.Equals(Object)
- uid: Vim.Math3d.HorizontalCoordinate.Equals(Vim.Math3d.HorizontalCoordinate)
  name: Equals(HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Equals_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.Equals(Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Equals(Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Equals(HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.Equals*
  name: Equals
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Equals_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.Equals
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Equals
  nameWithType: HorizontalCoordinate.Equals
- uid: Vim.Math3d.HorizontalCoordinate.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.HorizontalCoordinate.GetComponent(System.Int32)
  fullName: Vim.Math3d.HorizontalCoordinate.GetComponent(System.Int32)
  nameWithType: HorizontalCoordinate.GetComponent(Int32)
- uid: Vim.Math3d.HorizontalCoordinate.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_GetComponent_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.GetComponent
  nameWithType: HorizontalCoordinate.GetComponent
- uid: Vim.Math3d.HorizontalCoordinate.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_GetHashCode
  commentId: M:Vim.Math3d.HorizontalCoordinate.GetHashCode
  fullName: Vim.Math3d.HorizontalCoordinate.GetHashCode()
  nameWithType: HorizontalCoordinate.GetHashCode()
- uid: Vim.Math3d.HorizontalCoordinate.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_GetHashCode_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.GetHashCode
  nameWithType: HorizontalCoordinate.GetHashCode
- uid: Vim.Math3d.HorizontalCoordinate.Inclination
  name: Inclination
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Inclination
  commentId: F:Vim.Math3d.HorizontalCoordinate.Inclination
  fullName: Vim.Math3d.HorizontalCoordinate.Inclination
  nameWithType: HorizontalCoordinate.Inclination
- uid: Vim.Math3d.HorizontalCoordinate.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_IsInfinity
  commentId: M:Vim.Math3d.HorizontalCoordinate.IsInfinity
  fullName: Vim.Math3d.HorizontalCoordinate.IsInfinity()
  nameWithType: HorizontalCoordinate.IsInfinity()
- uid: Vim.Math3d.HorizontalCoordinate.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_IsInfinity_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.IsInfinity
  nameWithType: HorizontalCoordinate.IsInfinity
- uid: Vim.Math3d.HorizontalCoordinate.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_IsNaN
  commentId: M:Vim.Math3d.HorizontalCoordinate.IsNaN
  fullName: Vim.Math3d.HorizontalCoordinate.IsNaN()
  nameWithType: HorizontalCoordinate.IsNaN()
- uid: Vim.Math3d.HorizontalCoordinate.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_IsNaN_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.IsNaN
  nameWithType: HorizontalCoordinate.IsNaN
- uid: Vim.Math3d.HorizontalCoordinate.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Magnitude
  commentId: M:Vim.Math3d.HorizontalCoordinate.Magnitude
  fullName: Vim.Math3d.HorizontalCoordinate.Magnitude()
  nameWithType: HorizontalCoordinate.Magnitude()
- uid: Vim.Math3d.HorizontalCoordinate.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Magnitude_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Magnitude
  nameWithType: HorizontalCoordinate.Magnitude
- uid: Vim.Math3d.HorizontalCoordinate.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MagnitudeSquared
  commentId: M:Vim.Math3d.HorizontalCoordinate.MagnitudeSquared
  fullName: Vim.Math3d.HorizontalCoordinate.MagnitudeSquared()
  nameWithType: HorizontalCoordinate.MagnitudeSquared()
- uid: Vim.Math3d.HorizontalCoordinate.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.MagnitudeSquared
  nameWithType: HorizontalCoordinate.MagnitudeSquared
- uid: Vim.Math3d.HorizontalCoordinate.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MaxComponent
  commentId: M:Vim.Math3d.HorizontalCoordinate.MaxComponent
  fullName: Vim.Math3d.HorizontalCoordinate.MaxComponent()
  nameWithType: HorizontalCoordinate.MaxComponent()
- uid: Vim.Math3d.HorizontalCoordinate.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MaxComponent_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.MaxComponent
  nameWithType: HorizontalCoordinate.MaxComponent
- uid: Vim.Math3d.HorizontalCoordinate.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MaxValue
  commentId: F:Vim.Math3d.HorizontalCoordinate.MaxValue
  fullName: Vim.Math3d.HorizontalCoordinate.MaxValue
  nameWithType: HorizontalCoordinate.MaxValue
- uid: Vim.Math3d.HorizontalCoordinate.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MinComponent
  commentId: M:Vim.Math3d.HorizontalCoordinate.MinComponent
  fullName: Vim.Math3d.HorizontalCoordinate.MinComponent()
  nameWithType: HorizontalCoordinate.MinComponent()
- uid: Vim.Math3d.HorizontalCoordinate.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MinComponent_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.MinComponent
  nameWithType: HorizontalCoordinate.MinComponent
- uid: Vim.Math3d.HorizontalCoordinate.MinValue
  name: MinValue
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_MinValue
  commentId: F:Vim.Math3d.HorizontalCoordinate.MinValue
  fullName: Vim.Math3d.HorizontalCoordinate.MinValue
  nameWithType: HorizontalCoordinate.MinValue
- uid: Vim.Math3d.HorizontalCoordinate.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_NumComponents
  commentId: F:Vim.Math3d.HorizontalCoordinate.NumComponents
  fullName: Vim.Math3d.HorizontalCoordinate.NumComponents
  nameWithType: HorizontalCoordinate.NumComponents
- uid: Vim.Math3d.HorizontalCoordinate.One
  name: One
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_One
  commentId: F:Vim.Math3d.HorizontalCoordinate.One
  fullName: Vim.Math3d.HorizontalCoordinate.One
  nameWithType: HorizontalCoordinate.One
- uid: Vim.Math3d.HorizontalCoordinate.op_Addition(System.Double,Vim.Math3d.HorizontalCoordinate)
  name: Addition(Double, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Addition_System_Double_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Addition(System.Double,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Addition(System.Double, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Addition(Double, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Addition(Vim.Math3d.HorizontalCoordinate,System.Double)
  name: Addition(HorizontalCoordinate, Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Addition_Vim_Math3d_HorizontalCoordinate_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Addition(Vim.Math3d.HorizontalCoordinate,System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.Addition(Vim.Math3d.HorizontalCoordinate, System.Double)
  nameWithType: HorizontalCoordinate.Addition(HorizontalCoordinate, Double)
- uid: Vim.Math3d.HorizontalCoordinate.op_Addition(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: Addition(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Addition_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Addition(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Addition(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Addition(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Addition*
  name: Addition
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Addition_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Addition
  nameWithType: HorizontalCoordinate.Addition
- uid: Vim.Math3d.HorizontalCoordinate.op_Division(System.Double,Vim.Math3d.HorizontalCoordinate)
  name: Division(Double, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Division_System_Double_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Division(System.Double,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Division(System.Double, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Division(Double, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Division(Vim.Math3d.HorizontalCoordinate,System.Double)
  name: Division(HorizontalCoordinate, Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Division_Vim_Math3d_HorizontalCoordinate_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Division(Vim.Math3d.HorizontalCoordinate,System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.Division(Vim.Math3d.HorizontalCoordinate, System.Double)
  nameWithType: HorizontalCoordinate.Division(HorizontalCoordinate, Double)
- uid: Vim.Math3d.HorizontalCoordinate.op_Division(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: Division(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Division_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Division(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Division(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Division(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Division*
  name: Division
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Division_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Division
  nameWithType: HorizontalCoordinate.Division
- uid: Vim.Math3d.HorizontalCoordinate.op_Equality(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: Equality(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Equality_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Equality(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Equality(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Equality(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Equality*
  name: Equality
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Equality_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Equality
  nameWithType: HorizontalCoordinate.Equality
- uid: Vim.Math3d.HorizontalCoordinate.op_GreaterThan(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: GreaterThan(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_GreaterThan_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_GreaterThan(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.GreaterThan(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.GreaterThan(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_GreaterThan_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.GreaterThan
  nameWithType: HorizontalCoordinate.GreaterThan
- uid: Vim.Math3d.HorizontalCoordinate.op_GreaterThanOrEqual(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: GreaterThanOrEqual(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_GreaterThanOrEqual_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_GreaterThanOrEqual(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.GreaterThanOrEqual(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.GreaterThanOrEqual(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.GreaterThanOrEqual
  nameWithType: HorizontalCoordinate.GreaterThanOrEqual
- uid: Vim.Math3d.HorizontalCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.HorizontalCoordinate
  name: Implicit((Double azimuth, Double inclination) to HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Implicit_System_ValueTuple_System_Double_System_Double___Vim_Math3d_HorizontalCoordinate
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.HorizontalCoordinate
  name.vb: Widening((azimuth As Double, inclination As Double)(Of Double, Double) to HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Implicit(System.ValueTuple<System.Double, System.Double> to Vim.Math3d.HorizontalCoordinate)
  fullName.vb: Vim.Math3d.HorizontalCoordinate.Widening(System.ValueTuple(Of System.Double, System.Double) to Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Implicit((Double azimuth, Double inclination) to HorizontalCoordinate)
  nameWithType.vb: HorizontalCoordinate.Widening((azimuth As Double, inclination As Double)(Of Double, Double) to HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Implicit(Vim.Math3d.HorizontalCoordinate)~System.ValueTuple{System.Double,System.Double}
  name: Implicit(HorizontalCoordinate to (Double azimuth, Double inclination))
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Implicit_Vim_Math3d_HorizontalCoordinate__System_ValueTuple_System_Double_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Implicit(Vim.Math3d.HorizontalCoordinate)~System.ValueTuple{System.Double,System.Double}
  name.vb: Widening(HorizontalCoordinate to (azimuth As Double, inclination As Double)(Of Double, Double))
  fullName: Vim.Math3d.HorizontalCoordinate.Implicit(Vim.Math3d.HorizontalCoordinate to System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.HorizontalCoordinate.Widening(Vim.Math3d.HorizontalCoordinate to System.ValueTuple(Of System.Double, System.Double))
  nameWithType: HorizontalCoordinate.Implicit(HorizontalCoordinate to (Double azimuth, Double inclination))
  nameWithType.vb: HorizontalCoordinate.Widening(HorizontalCoordinate to (azimuth As Double, inclination As Double)(Of Double, Double))
- uid: Vim.Math3d.HorizontalCoordinate.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Implicit_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.HorizontalCoordinate.Implicit
  fullName.vb: Vim.Math3d.HorizontalCoordinate.Widening
  nameWithType: HorizontalCoordinate.Implicit
  nameWithType.vb: HorizontalCoordinate.Widening
- uid: Vim.Math3d.HorizontalCoordinate.op_Inequality(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: Inequality(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Inequality_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Inequality(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Inequality(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Inequality(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Inequality_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Inequality
  nameWithType: HorizontalCoordinate.Inequality
- uid: Vim.Math3d.HorizontalCoordinate.op_LessThan(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: LessThan(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_LessThan_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_LessThan(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.LessThan(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.LessThan(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_LessThan_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.LessThan
  nameWithType: HorizontalCoordinate.LessThan
- uid: Vim.Math3d.HorizontalCoordinate.op_LessThanOrEqual(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: LessThanOrEqual(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_LessThanOrEqual_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_LessThanOrEqual(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.LessThanOrEqual(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.LessThanOrEqual(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.LessThanOrEqual
  nameWithType: HorizontalCoordinate.LessThanOrEqual
- uid: Vim.Math3d.HorizontalCoordinate.op_Multiply(System.Double,Vim.Math3d.HorizontalCoordinate)
  name: Multiply(Double, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Multiply_System_Double_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Multiply(System.Double,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Multiply(System.Double, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Multiply(Double, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Multiply(Vim.Math3d.HorizontalCoordinate,System.Double)
  name: Multiply(HorizontalCoordinate, Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Multiply_Vim_Math3d_HorizontalCoordinate_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Multiply(Vim.Math3d.HorizontalCoordinate,System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.Multiply(Vim.Math3d.HorizontalCoordinate, System.Double)
  nameWithType: HorizontalCoordinate.Multiply(HorizontalCoordinate, Double)
- uid: Vim.Math3d.HorizontalCoordinate.op_Multiply(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: Multiply(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Multiply_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Multiply(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Multiply(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Multiply(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Multiply_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Multiply
  nameWithType: HorizontalCoordinate.Multiply
- uid: Vim.Math3d.HorizontalCoordinate.op_Subtraction(System.Double,Vim.Math3d.HorizontalCoordinate)
  name: Subtraction(Double, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Subtraction_System_Double_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Subtraction(System.Double,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Subtraction(System.Double, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Subtraction(Double, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Subtraction(Vim.Math3d.HorizontalCoordinate,System.Double)
  name: Subtraction(HorizontalCoordinate, Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Subtraction_Vim_Math3d_HorizontalCoordinate_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Subtraction(Vim.Math3d.HorizontalCoordinate,System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.Subtraction(Vim.Math3d.HorizontalCoordinate, System.Double)
  nameWithType: HorizontalCoordinate.Subtraction(HorizontalCoordinate, Double)
- uid: Vim.Math3d.HorizontalCoordinate.op_Subtraction(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  name: Subtraction(HorizontalCoordinate, HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Subtraction_Vim_Math3d_HorizontalCoordinate_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_Subtraction(Vim.Math3d.HorizontalCoordinate,Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.Subtraction(Vim.Math3d.HorizontalCoordinate, Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.Subtraction(HorizontalCoordinate, HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_Subtraction_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.Subtraction
  nameWithType: HorizontalCoordinate.Subtraction
- uid: Vim.Math3d.HorizontalCoordinate.op_UnaryNegation(Vim.Math3d.HorizontalCoordinate)
  name: UnaryNegation(HorizontalCoordinate)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_UnaryNegation_Vim_Math3d_HorizontalCoordinate_
  commentId: M:Vim.Math3d.HorizontalCoordinate.op_UnaryNegation(Vim.Math3d.HorizontalCoordinate)
  fullName: Vim.Math3d.HorizontalCoordinate.UnaryNegation(Vim.Math3d.HorizontalCoordinate)
  nameWithType: HorizontalCoordinate.UnaryNegation(HorizontalCoordinate)
- uid: Vim.Math3d.HorizontalCoordinate.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.UnaryNegation
  nameWithType: HorizontalCoordinate.UnaryNegation
- uid: Vim.Math3d.HorizontalCoordinate.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_ProductComponents
  commentId: M:Vim.Math3d.HorizontalCoordinate.ProductComponents
  fullName: Vim.Math3d.HorizontalCoordinate.ProductComponents()
  nameWithType: HorizontalCoordinate.ProductComponents()
- uid: Vim.Math3d.HorizontalCoordinate.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_ProductComponents_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.ProductComponents
  nameWithType: HorizontalCoordinate.ProductComponents
- uid: Vim.Math3d.HorizontalCoordinate.SetAzimuth(System.Double)
  name: SetAzimuth(Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SetAzimuth_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.SetAzimuth(System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.SetAzimuth(System.Double)
  nameWithType: HorizontalCoordinate.SetAzimuth(Double)
- uid: Vim.Math3d.HorizontalCoordinate.SetAzimuth*
  name: SetAzimuth
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SetAzimuth_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.SetAzimuth
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.SetAzimuth
  nameWithType: HorizontalCoordinate.SetAzimuth
- uid: Vim.Math3d.HorizontalCoordinate.SetInclination(System.Double)
  name: SetInclination(Double)
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SetInclination_System_Double_
  commentId: M:Vim.Math3d.HorizontalCoordinate.SetInclination(System.Double)
  fullName: Vim.Math3d.HorizontalCoordinate.SetInclination(System.Double)
  nameWithType: HorizontalCoordinate.SetInclination(Double)
- uid: Vim.Math3d.HorizontalCoordinate.SetInclination*
  name: SetInclination
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SetInclination_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.SetInclination
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.SetInclination
  nameWithType: HorizontalCoordinate.SetInclination
- uid: Vim.Math3d.HorizontalCoordinate.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SumComponents
  commentId: M:Vim.Math3d.HorizontalCoordinate.SumComponents
  fullName: Vim.Math3d.HorizontalCoordinate.SumComponents()
  nameWithType: HorizontalCoordinate.SumComponents()
- uid: Vim.Math3d.HorizontalCoordinate.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SumComponents_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.SumComponents
  nameWithType: HorizontalCoordinate.SumComponents
- uid: Vim.Math3d.HorizontalCoordinate.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SumSqrComponents
  commentId: M:Vim.Math3d.HorizontalCoordinate.SumSqrComponents
  fullName: Vim.Math3d.HorizontalCoordinate.SumSqrComponents()
  nameWithType: HorizontalCoordinate.SumSqrComponents()
- uid: Vim.Math3d.HorizontalCoordinate.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_SumSqrComponents_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.SumSqrComponents
  nameWithType: HorizontalCoordinate.SumSqrComponents
- uid: Vim.Math3d.HorizontalCoordinate.ToString
  name: ToString()
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_ToString
  commentId: M:Vim.Math3d.HorizontalCoordinate.ToString
  fullName: Vim.Math3d.HorizontalCoordinate.ToString()
  nameWithType: HorizontalCoordinate.ToString()
- uid: Vim.Math3d.HorizontalCoordinate.ToString*
  name: ToString
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_ToString_
  commentId: Overload:Vim.Math3d.HorizontalCoordinate.ToString
  isSpec: "True"
  fullName: Vim.Math3d.HorizontalCoordinate.ToString
  nameWithType: HorizontalCoordinate.ToString
- uid: Vim.Math3d.HorizontalCoordinate.UnitAzimuth
  name: UnitAzimuth
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_UnitAzimuth
  commentId: F:Vim.Math3d.HorizontalCoordinate.UnitAzimuth
  fullName: Vim.Math3d.HorizontalCoordinate.UnitAzimuth
  nameWithType: HorizontalCoordinate.UnitAzimuth
- uid: Vim.Math3d.HorizontalCoordinate.UnitInclination
  name: UnitInclination
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_UnitInclination
  commentId: F:Vim.Math3d.HorizontalCoordinate.UnitInclination
  fullName: Vim.Math3d.HorizontalCoordinate.UnitInclination
  nameWithType: HorizontalCoordinate.UnitInclination
- uid: Vim.Math3d.HorizontalCoordinate.Zero
  name: Zero
  href: api/Vim.Math3d.HorizontalCoordinate.html#Vim_Math3d_HorizontalCoordinate_Zero
  commentId: F:Vim.Math3d.HorizontalCoordinate.Zero
  fullName: Vim.Math3d.HorizontalCoordinate.Zero
  nameWithType: HorizontalCoordinate.Zero
- uid: Vim.Math3d.IMappable`2
  name: IMappable<TContainer, TPart>
  href: api/Vim.Math3d.IMappable-2.html
  commentId: T:Vim.Math3d.IMappable`2
  name.vb: IMappable(Of TContainer, TPart)
  fullName: Vim.Math3d.IMappable<TContainer, TPart>
  fullName.vb: Vim.Math3d.IMappable(Of TContainer, TPart)
  nameWithType: IMappable<TContainer, TPart>
  nameWithType.vb: IMappable(Of TContainer, TPart)
- uid: Vim.Math3d.IMappable`2.Map(System.Func{`1,`1})
  name: Map(Func<TPart, TPart>)
  href: api/Vim.Math3d.IMappable-2.html#Vim_Math3d_IMappable_2_Map_System_Func__1__1__
  commentId: M:Vim.Math3d.IMappable`2.Map(System.Func{`1,`1})
  name.vb: Map(Func(Of TPart, TPart))
  fullName: Vim.Math3d.IMappable<TContainer, TPart>.Map(System.Func<TPart, TPart>)
  fullName.vb: Vim.Math3d.IMappable(Of TContainer, TPart).Map(System.Func(Of TPart, TPart))
  nameWithType: IMappable<TContainer, TPart>.Map(Func<TPart, TPart>)
  nameWithType.vb: IMappable(Of TContainer, TPart).Map(Func(Of TPart, TPart))
- uid: Vim.Math3d.IMappable`2.Map*
  name: Map
  href: api/Vim.Math3d.IMappable-2.html#Vim_Math3d_IMappable_2_Map_
  commentId: Overload:Vim.Math3d.IMappable`2.Map
  isSpec: "True"
  fullName: Vim.Math3d.IMappable<TContainer, TPart>.Map
  fullName.vb: Vim.Math3d.IMappable(Of TContainer, TPart).Map
  nameWithType: IMappable<TContainer, TPart>.Map
  nameWithType.vb: IMappable(Of TContainer, TPart).Map
- uid: Vim.Math3d.Int2
  name: Int2
  href: api/Vim.Math3d.Int2.html
  commentId: T:Vim.Math3d.Int2
  fullName: Vim.Math3d.Int2
  nameWithType: Int2
- uid: Vim.Math3d.Int2.#ctor(System.Int32)
  name: Int2(Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2__ctor_System_Int32_
  commentId: M:Vim.Math3d.Int2.#ctor(System.Int32)
  fullName: Vim.Math3d.Int2.Int2(System.Int32)
  nameWithType: Int2.Int2(Int32)
- uid: Vim.Math3d.Int2.#ctor(System.Int32,System.Int32)
  name: Int2(Int32, Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2__ctor_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int2.#ctor(System.Int32,System.Int32)
  fullName: Vim.Math3d.Int2.Int2(System.Int32, System.Int32)
  nameWithType: Int2.Int2(Int32, Int32)
- uid: Vim.Math3d.Int2.#ctor(System.ValueTuple{System.Int32,System.Int32})
  name: Int2((Int32 x, Int32 y))
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2__ctor_System_ValueTuple_System_Int32_System_Int32__
  commentId: M:Vim.Math3d.Int2.#ctor(System.ValueTuple{System.Int32,System.Int32})
  name.vb: Int2((x As Int32, y As Int32)(Of Int32, Int32))
  fullName: Vim.Math3d.Int2.Int2(System.ValueTuple<System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int2.Int2(System.ValueTuple(Of System.Int32, System.Int32))
  nameWithType: Int2.Int2((Int32 x, Int32 y))
  nameWithType.vb: Int2.Int2((x As Int32, y As Int32)(Of Int32, Int32))
- uid: Vim.Math3d.Int2.#ctor*
  name: Int2
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2__ctor_
  commentId: Overload:Vim.Math3d.Int2.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Int2
  nameWithType: Int2.Int2
- uid: Vim.Math3d.Int2.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Int2.AlmostZero(System.Single)
  fullName: Vim.Math3d.Int2.AlmostZero(System.Single)
  nameWithType: Int2.AlmostZero(Single)
- uid: Vim.Math3d.Int2.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_AlmostZero_
  commentId: Overload:Vim.Math3d.Int2.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Int2.AlmostZero
  nameWithType: Int2.AlmostZero
- uid: Vim.Math3d.Int2.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_AnyComponentNegative
  commentId: M:Vim.Math3d.Int2.AnyComponentNegative
  fullName: Vim.Math3d.Int2.AnyComponentNegative()
  nameWithType: Int2.AnyComponentNegative()
- uid: Vim.Math3d.Int2.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Int2.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Int2.AnyComponentNegative
  nameWithType: Int2.AnyComponentNegative
- uid: Vim.Math3d.Int2.CompareTo(Vim.Math3d.Int2)
  name: CompareTo(Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_CompareTo_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.CompareTo(Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.CompareTo(Vim.Math3d.Int2)
  nameWithType: Int2.CompareTo(Int2)
- uid: Vim.Math3d.Int2.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_CompareTo_
  commentId: Overload:Vim.Math3d.Int2.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Int2.CompareTo
  nameWithType: Int2.CompareTo
- uid: Vim.Math3d.Int2.Create(System.Int32,System.Int32)
  name: Create(Int32, Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Create_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int2.Create(System.Int32,System.Int32)
  fullName: Vim.Math3d.Int2.Create(System.Int32, System.Int32)
  nameWithType: Int2.Create(Int32, Int32)
- uid: Vim.Math3d.Int2.Create(System.ValueTuple{System.Int32,System.Int32})
  name: Create((Int32 x, Int32 y))
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Create_System_ValueTuple_System_Int32_System_Int32__
  commentId: M:Vim.Math3d.Int2.Create(System.ValueTuple{System.Int32,System.Int32})
  name.vb: Create((x As Int32, y As Int32)(Of Int32, Int32))
  fullName: Vim.Math3d.Int2.Create(System.ValueTuple<System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int2.Create(System.ValueTuple(Of System.Int32, System.Int32))
  nameWithType: Int2.Create((Int32 x, Int32 y))
  nameWithType.vb: Int2.Create((x As Int32, y As Int32)(Of Int32, Int32))
- uid: Vim.Math3d.Int2.Create*
  name: Create
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Create_
  commentId: Overload:Vim.Math3d.Int2.Create
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Create
  nameWithType: Int2.Create
- uid: Vim.Math3d.Int2.Deconstruct(System.Int32@,System.Int32@)
  name: Deconstruct(out Int32, out Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Deconstruct_System_Int32__System_Int32__
  commentId: M:Vim.Math3d.Int2.Deconstruct(System.Int32@,System.Int32@)
  name.vb: Deconstruct(ByRef Int32, ByRef Int32)
  fullName: Vim.Math3d.Int2.Deconstruct(out System.Int32, out System.Int32)
  fullName.vb: Vim.Math3d.Int2.Deconstruct(ByRef System.Int32, ByRef System.Int32)
  nameWithType: Int2.Deconstruct(out Int32, out Int32)
  nameWithType.vb: Int2.Deconstruct(ByRef Int32, ByRef Int32)
- uid: Vim.Math3d.Int2.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Deconstruct_
  commentId: Overload:Vim.Math3d.Int2.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Deconstruct
  nameWithType: Int2.Deconstruct
- uid: Vim.Math3d.Int2.Dot(Vim.Math3d.Int2)
  name: Dot(Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Dot_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.Dot(Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Dot(Vim.Math3d.Int2)
  nameWithType: Int2.Dot(Int2)
- uid: Vim.Math3d.Int2.Dot(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: Dot(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Dot_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.Dot(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Dot(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.Dot(Int2, Int2)
- uid: Vim.Math3d.Int2.Dot*
  name: Dot
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Dot_
  commentId: Overload:Vim.Math3d.Int2.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Dot
  nameWithType: Int2.Dot
- uid: Vim.Math3d.Int2.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Equals_System_Object_
  commentId: M:Vim.Math3d.Int2.Equals(System.Object)
  fullName: Vim.Math3d.Int2.Equals(System.Object)
  nameWithType: Int2.Equals(Object)
- uid: Vim.Math3d.Int2.Equals(Vim.Math3d.Int2)
  name: Equals(Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Equals_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.Equals(Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Equals(Vim.Math3d.Int2)
  nameWithType: Int2.Equals(Int2)
- uid: Vim.Math3d.Int2.Equals*
  name: Equals
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Equals_
  commentId: Overload:Vim.Math3d.Int2.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Equals
  nameWithType: Int2.Equals
- uid: Vim.Math3d.Int2.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Int2.GetComponent(System.Int32)
  fullName: Vim.Math3d.Int2.GetComponent(System.Int32)
  nameWithType: Int2.GetComponent(Int32)
- uid: Vim.Math3d.Int2.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_GetComponent_
  commentId: Overload:Vim.Math3d.Int2.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int2.GetComponent
  nameWithType: Int2.GetComponent
- uid: Vim.Math3d.Int2.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_GetHashCode
  commentId: M:Vim.Math3d.Int2.GetHashCode
  fullName: Vim.Math3d.Int2.GetHashCode()
  nameWithType: Int2.GetHashCode()
- uid: Vim.Math3d.Int2.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_GetHashCode_
  commentId: Overload:Vim.Math3d.Int2.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Int2.GetHashCode
  nameWithType: Int2.GetHashCode
- uid: Vim.Math3d.Int2.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_IsInfinity
  commentId: M:Vim.Math3d.Int2.IsInfinity
  fullName: Vim.Math3d.Int2.IsInfinity()
  nameWithType: Int2.IsInfinity()
- uid: Vim.Math3d.Int2.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_IsInfinity_
  commentId: Overload:Vim.Math3d.Int2.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Int2.IsInfinity
  nameWithType: Int2.IsInfinity
- uid: Vim.Math3d.Int2.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_IsNaN
  commentId: M:Vim.Math3d.Int2.IsNaN
  fullName: Vim.Math3d.Int2.IsNaN()
  nameWithType: Int2.IsNaN()
- uid: Vim.Math3d.Int2.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_IsNaN_
  commentId: Overload:Vim.Math3d.Int2.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Int2.IsNaN
  nameWithType: Int2.IsNaN
- uid: Vim.Math3d.Int2.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Magnitude
  commentId: M:Vim.Math3d.Int2.Magnitude
  fullName: Vim.Math3d.Int2.Magnitude()
  nameWithType: Int2.Magnitude()
- uid: Vim.Math3d.Int2.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Magnitude_
  commentId: Overload:Vim.Math3d.Int2.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Magnitude
  nameWithType: Int2.Magnitude
- uid: Vim.Math3d.Int2.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MagnitudeSquared
  commentId: M:Vim.Math3d.Int2.MagnitudeSquared
  fullName: Vim.Math3d.Int2.MagnitudeSquared()
  nameWithType: Int2.MagnitudeSquared()
- uid: Vim.Math3d.Int2.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Int2.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Int2.MagnitudeSquared
  nameWithType: Int2.MagnitudeSquared
- uid: Vim.Math3d.Int2.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MaxComponent
  commentId: M:Vim.Math3d.Int2.MaxComponent
  fullName: Vim.Math3d.Int2.MaxComponent()
  nameWithType: Int2.MaxComponent()
- uid: Vim.Math3d.Int2.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MaxComponent_
  commentId: Overload:Vim.Math3d.Int2.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int2.MaxComponent
  nameWithType: Int2.MaxComponent
- uid: Vim.Math3d.Int2.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MaxValue
  commentId: F:Vim.Math3d.Int2.MaxValue
  fullName: Vim.Math3d.Int2.MaxValue
  nameWithType: Int2.MaxValue
- uid: Vim.Math3d.Int2.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MinComponent
  commentId: M:Vim.Math3d.Int2.MinComponent
  fullName: Vim.Math3d.Int2.MinComponent()
  nameWithType: Int2.MinComponent()
- uid: Vim.Math3d.Int2.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MinComponent_
  commentId: Overload:Vim.Math3d.Int2.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int2.MinComponent
  nameWithType: Int2.MinComponent
- uid: Vim.Math3d.Int2.MinValue
  name: MinValue
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_MinValue
  commentId: F:Vim.Math3d.Int2.MinValue
  fullName: Vim.Math3d.Int2.MinValue
  nameWithType: Int2.MinValue
- uid: Vim.Math3d.Int2.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_NumComponents
  commentId: F:Vim.Math3d.Int2.NumComponents
  fullName: Vim.Math3d.Int2.NumComponents
  nameWithType: Int2.NumComponents
- uid: Vim.Math3d.Int2.One
  name: One
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_One
  commentId: F:Vim.Math3d.Int2.One
  fullName: Vim.Math3d.Int2.One
  nameWithType: Int2.One
- uid: Vim.Math3d.Int2.op_Addition(System.Int32,Vim.Math3d.Int2)
  name: Addition(Int32, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Addition_System_Int32_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Addition(System.Int32,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Addition(System.Int32, Vim.Math3d.Int2)
  nameWithType: Int2.Addition(Int32, Int2)
- uid: Vim.Math3d.Int2.op_Addition(Vim.Math3d.Int2,System.Int32)
  name: Addition(Int2, Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Addition_Vim_Math3d_Int2_System_Int32_
  commentId: M:Vim.Math3d.Int2.op_Addition(Vim.Math3d.Int2,System.Int32)
  fullName: Vim.Math3d.Int2.Addition(Vim.Math3d.Int2, System.Int32)
  nameWithType: Int2.Addition(Int2, Int32)
- uid: Vim.Math3d.Int2.op_Addition(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: Addition(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Addition_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Addition(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Addition(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.Addition(Int2, Int2)
- uid: Vim.Math3d.Int2.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Addition_
  commentId: Overload:Vim.Math3d.Int2.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Addition
  nameWithType: Int2.Addition
- uid: Vim.Math3d.Int2.op_Division(System.Int32,Vim.Math3d.Int2)
  name: Division(Int32, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Division_System_Int32_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Division(System.Int32,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Division(System.Int32, Vim.Math3d.Int2)
  nameWithType: Int2.Division(Int32, Int2)
- uid: Vim.Math3d.Int2.op_Division(Vim.Math3d.Int2,System.Int32)
  name: Division(Int2, Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Division_Vim_Math3d_Int2_System_Int32_
  commentId: M:Vim.Math3d.Int2.op_Division(Vim.Math3d.Int2,System.Int32)
  fullName: Vim.Math3d.Int2.Division(Vim.Math3d.Int2, System.Int32)
  nameWithType: Int2.Division(Int2, Int32)
- uid: Vim.Math3d.Int2.op_Division(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: Division(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Division_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Division(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Division(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.Division(Int2, Int2)
- uid: Vim.Math3d.Int2.op_Division*
  name: Division
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Division_
  commentId: Overload:Vim.Math3d.Int2.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Division
  nameWithType: Int2.Division
- uid: Vim.Math3d.Int2.op_Equality(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: Equality(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Equality_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Equality(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Equality(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.Equality(Int2, Int2)
- uid: Vim.Math3d.Int2.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Equality_
  commentId: Overload:Vim.Math3d.Int2.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Equality
  nameWithType: Int2.Equality
- uid: Vim.Math3d.Int2.op_GreaterThan(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: GreaterThan(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_GreaterThan_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_GreaterThan(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.GreaterThan(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.GreaterThan(Int2, Int2)
- uid: Vim.Math3d.Int2.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Int2.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Int2.GreaterThan
  nameWithType: Int2.GreaterThan
- uid: Vim.Math3d.Int2.op_GreaterThanOrEqual(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: GreaterThanOrEqual(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_GreaterThanOrEqual_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_GreaterThanOrEqual(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.GreaterThanOrEqual(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.GreaterThanOrEqual(Int2, Int2)
- uid: Vim.Math3d.Int2.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Int2.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Int2.GreaterThanOrEqual
  nameWithType: Int2.GreaterThanOrEqual
- uid: Vim.Math3d.Int2.op_Implicit(System.ValueTuple{System.Int32,System.Int32})~Vim.Math3d.Int2
  name: Implicit((Int32 x, Int32 y) to Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Implicit_System_ValueTuple_System_Int32_System_Int32___Vim_Math3d_Int2
  commentId: M:Vim.Math3d.Int2.op_Implicit(System.ValueTuple{System.Int32,System.Int32})~Vim.Math3d.Int2
  name.vb: Widening((x As Int32, y As Int32)(Of Int32, Int32) to Int2)
  fullName: Vim.Math3d.Int2.Implicit(System.ValueTuple<System.Int32, System.Int32> to Vim.Math3d.Int2)
  fullName.vb: Vim.Math3d.Int2.Widening(System.ValueTuple(Of System.Int32, System.Int32) to Vim.Math3d.Int2)
  nameWithType: Int2.Implicit((Int32 x, Int32 y) to Int2)
  nameWithType.vb: Int2.Widening((x As Int32, y As Int32)(Of Int32, Int32) to Int2)
- uid: Vim.Math3d.Int2.op_Implicit(Vim.Math3d.Int2)~System.ValueTuple{System.Int32,System.Int32}
  name: Implicit(Int2 to (Int32 x, Int32 y))
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Implicit_Vim_Math3d_Int2__System_ValueTuple_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int2.op_Implicit(Vim.Math3d.Int2)~System.ValueTuple{System.Int32,System.Int32}
  name.vb: Widening(Int2 to (x As Int32, y As Int32)(Of Int32, Int32))
  fullName: Vim.Math3d.Int2.Implicit(Vim.Math3d.Int2 to System.ValueTuple<System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int2.Widening(Vim.Math3d.Int2 to System.ValueTuple(Of System.Int32, System.Int32))
  nameWithType: Int2.Implicit(Int2 to (Int32 x, Int32 y))
  nameWithType.vb: Int2.Widening(Int2 to (x As Int32, y As Int32)(Of Int32, Int32))
- uid: Vim.Math3d.Int2.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Implicit_
  commentId: Overload:Vim.Math3d.Int2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Int2.Implicit
  fullName.vb: Vim.Math3d.Int2.Widening
  nameWithType: Int2.Implicit
  nameWithType.vb: Int2.Widening
- uid: Vim.Math3d.Int2.op_Inequality(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: Inequality(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Inequality_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Inequality(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Inequality(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.Inequality(Int2, Int2)
- uid: Vim.Math3d.Int2.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Inequality_
  commentId: Overload:Vim.Math3d.Int2.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Inequality
  nameWithType: Int2.Inequality
- uid: Vim.Math3d.Int2.op_LessThan(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: LessThan(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_LessThan_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_LessThan(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.LessThan(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.LessThan(Int2, Int2)
- uid: Vim.Math3d.Int2.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_LessThan_
  commentId: Overload:Vim.Math3d.Int2.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Int2.LessThan
  nameWithType: Int2.LessThan
- uid: Vim.Math3d.Int2.op_LessThanOrEqual(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: LessThanOrEqual(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_LessThanOrEqual_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_LessThanOrEqual(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.LessThanOrEqual(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.LessThanOrEqual(Int2, Int2)
- uid: Vim.Math3d.Int2.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Int2.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Int2.LessThanOrEqual
  nameWithType: Int2.LessThanOrEqual
- uid: Vim.Math3d.Int2.op_Multiply(System.Int32,Vim.Math3d.Int2)
  name: Multiply(Int32, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Multiply_System_Int32_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Multiply(System.Int32,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Multiply(System.Int32, Vim.Math3d.Int2)
  nameWithType: Int2.Multiply(Int32, Int2)
- uid: Vim.Math3d.Int2.op_Multiply(Vim.Math3d.Int2,System.Int32)
  name: Multiply(Int2, Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Multiply_Vim_Math3d_Int2_System_Int32_
  commentId: M:Vim.Math3d.Int2.op_Multiply(Vim.Math3d.Int2,System.Int32)
  fullName: Vim.Math3d.Int2.Multiply(Vim.Math3d.Int2, System.Int32)
  nameWithType: Int2.Multiply(Int2, Int32)
- uid: Vim.Math3d.Int2.op_Multiply(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: Multiply(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Multiply_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Multiply(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Multiply(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.Multiply(Int2, Int2)
- uid: Vim.Math3d.Int2.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Multiply_
  commentId: Overload:Vim.Math3d.Int2.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Multiply
  nameWithType: Int2.Multiply
- uid: Vim.Math3d.Int2.op_Subtraction(System.Int32,Vim.Math3d.Int2)
  name: Subtraction(Int32, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Subtraction_System_Int32_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Subtraction(System.Int32,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Subtraction(System.Int32, Vim.Math3d.Int2)
  nameWithType: Int2.Subtraction(Int32, Int2)
- uid: Vim.Math3d.Int2.op_Subtraction(Vim.Math3d.Int2,System.Int32)
  name: Subtraction(Int2, Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Subtraction_Vim_Math3d_Int2_System_Int32_
  commentId: M:Vim.Math3d.Int2.op_Subtraction(Vim.Math3d.Int2,System.Int32)
  fullName: Vim.Math3d.Int2.Subtraction(Vim.Math3d.Int2, System.Int32)
  nameWithType: Int2.Subtraction(Int2, Int32)
- uid: Vim.Math3d.Int2.op_Subtraction(Vim.Math3d.Int2,Vim.Math3d.Int2)
  name: Subtraction(Int2, Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Subtraction_Vim_Math3d_Int2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_Subtraction(Vim.Math3d.Int2,Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.Subtraction(Vim.Math3d.Int2, Vim.Math3d.Int2)
  nameWithType: Int2.Subtraction(Int2, Int2)
- uid: Vim.Math3d.Int2.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_Subtraction_
  commentId: Overload:Vim.Math3d.Int2.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Int2.Subtraction
  nameWithType: Int2.Subtraction
- uid: Vim.Math3d.Int2.op_UnaryNegation(Vim.Math3d.Int2)
  name: UnaryNegation(Int2)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_UnaryNegation_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.Int2.op_UnaryNegation(Vim.Math3d.Int2)
  fullName: Vim.Math3d.Int2.UnaryNegation(Vim.Math3d.Int2)
  nameWithType: Int2.UnaryNegation(Int2)
- uid: Vim.Math3d.Int2.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Int2.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Int2.UnaryNegation
  nameWithType: Int2.UnaryNegation
- uid: Vim.Math3d.Int2.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_ProductComponents
  commentId: M:Vim.Math3d.Int2.ProductComponents
  fullName: Vim.Math3d.Int2.ProductComponents()
  nameWithType: Int2.ProductComponents()
- uid: Vim.Math3d.Int2.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_ProductComponents_
  commentId: Overload:Vim.Math3d.Int2.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int2.ProductComponents
  nameWithType: Int2.ProductComponents
- uid: Vim.Math3d.Int2.SetX(System.Int32)
  name: SetX(Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SetX_System_Int32_
  commentId: M:Vim.Math3d.Int2.SetX(System.Int32)
  fullName: Vim.Math3d.Int2.SetX(System.Int32)
  nameWithType: Int2.SetX(Int32)
- uid: Vim.Math3d.Int2.SetX*
  name: SetX
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SetX_
  commentId: Overload:Vim.Math3d.Int2.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Int2.SetX
  nameWithType: Int2.SetX
- uid: Vim.Math3d.Int2.SetY(System.Int32)
  name: SetY(Int32)
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SetY_System_Int32_
  commentId: M:Vim.Math3d.Int2.SetY(System.Int32)
  fullName: Vim.Math3d.Int2.SetY(System.Int32)
  nameWithType: Int2.SetY(Int32)
- uid: Vim.Math3d.Int2.SetY*
  name: SetY
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SetY_
  commentId: Overload:Vim.Math3d.Int2.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Int2.SetY
  nameWithType: Int2.SetY
- uid: Vim.Math3d.Int2.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SumComponents
  commentId: M:Vim.Math3d.Int2.SumComponents
  fullName: Vim.Math3d.Int2.SumComponents()
  nameWithType: Int2.SumComponents()
- uid: Vim.Math3d.Int2.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SumComponents_
  commentId: Overload:Vim.Math3d.Int2.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int2.SumComponents
  nameWithType: Int2.SumComponents
- uid: Vim.Math3d.Int2.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SumSqrComponents
  commentId: M:Vim.Math3d.Int2.SumSqrComponents
  fullName: Vim.Math3d.Int2.SumSqrComponents()
  nameWithType: Int2.SumSqrComponents()
- uid: Vim.Math3d.Int2.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Int2.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int2.SumSqrComponents
  nameWithType: Int2.SumSqrComponents
- uid: Vim.Math3d.Int2.ToString
  name: ToString()
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_ToString
  commentId: M:Vim.Math3d.Int2.ToString
  fullName: Vim.Math3d.Int2.ToString()
  nameWithType: Int2.ToString()
- uid: Vim.Math3d.Int2.ToString*
  name: ToString
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_ToString_
  commentId: Overload:Vim.Math3d.Int2.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Int2.ToString
  nameWithType: Int2.ToString
- uid: Vim.Math3d.Int2.UnitX
  name: UnitX
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_UnitX
  commentId: F:Vim.Math3d.Int2.UnitX
  fullName: Vim.Math3d.Int2.UnitX
  nameWithType: Int2.UnitX
- uid: Vim.Math3d.Int2.UnitY
  name: UnitY
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_UnitY
  commentId: F:Vim.Math3d.Int2.UnitY
  fullName: Vim.Math3d.Int2.UnitY
  nameWithType: Int2.UnitY
- uid: Vim.Math3d.Int2.X
  name: X
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_X
  commentId: F:Vim.Math3d.Int2.X
  fullName: Vim.Math3d.Int2.X
  nameWithType: Int2.X
- uid: Vim.Math3d.Int2.Y
  name: Y
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Y
  commentId: F:Vim.Math3d.Int2.Y
  fullName: Vim.Math3d.Int2.Y
  nameWithType: Int2.Y
- uid: Vim.Math3d.Int2.Zero
  name: Zero
  href: api/Vim.Math3d.Int2.html#Vim_Math3d_Int2_Zero
  commentId: F:Vim.Math3d.Int2.Zero
  fullName: Vim.Math3d.Int2.Zero
  nameWithType: Int2.Zero
- uid: Vim.Math3d.Int3
  name: Int3
  href: api/Vim.Math3d.Int3.html
  commentId: T:Vim.Math3d.Int3
  fullName: Vim.Math3d.Int3
  nameWithType: Int3
- uid: Vim.Math3d.Int3.#ctor(System.Int32)
  name: Int3(Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3__ctor_System_Int32_
  commentId: M:Vim.Math3d.Int3.#ctor(System.Int32)
  fullName: Vim.Math3d.Int3.Int3(System.Int32)
  nameWithType: Int3.Int3(Int32)
- uid: Vim.Math3d.Int3.#ctor(System.Int32,System.Int32,System.Int32)
  name: Int3(Int32, Int32, Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int3.#ctor(System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.Int3.Int3(System.Int32, System.Int32, System.Int32)
  nameWithType: Int3.Int3(Int32, Int32, Int32)
- uid: Vim.Math3d.Int3.#ctor(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  name: Int3((Int32 x, Int32 y, Int32 z))
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3__ctor_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  commentId: M:Vim.Math3d.Int3.#ctor(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  name.vb: Int3((x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32))
  fullName: Vim.Math3d.Int3.Int3(System.ValueTuple<System.Int32, System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int3.Int3(System.ValueTuple(Of System.Int32, System.Int32, System.Int32))
  nameWithType: Int3.Int3((Int32 x, Int32 y, Int32 z))
  nameWithType.vb: Int3.Int3((x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32))
- uid: Vim.Math3d.Int3.#ctor*
  name: Int3
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3__ctor_
  commentId: Overload:Vim.Math3d.Int3.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Int3
  nameWithType: Int3.Int3
- uid: Vim.Math3d.Int3.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Int3.AlmostZero(System.Single)
  fullName: Vim.Math3d.Int3.AlmostZero(System.Single)
  nameWithType: Int3.AlmostZero(Single)
- uid: Vim.Math3d.Int3.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_AlmostZero_
  commentId: Overload:Vim.Math3d.Int3.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Int3.AlmostZero
  nameWithType: Int3.AlmostZero
- uid: Vim.Math3d.Int3.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_AnyComponentNegative
  commentId: M:Vim.Math3d.Int3.AnyComponentNegative
  fullName: Vim.Math3d.Int3.AnyComponentNegative()
  nameWithType: Int3.AnyComponentNegative()
- uid: Vim.Math3d.Int3.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Int3.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Int3.AnyComponentNegative
  nameWithType: Int3.AnyComponentNegative
- uid: Vim.Math3d.Int3.CompareTo(Vim.Math3d.Int3)
  name: CompareTo(Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_CompareTo_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.CompareTo(Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.CompareTo(Vim.Math3d.Int3)
  nameWithType: Int3.CompareTo(Int3)
- uid: Vim.Math3d.Int3.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_CompareTo_
  commentId: Overload:Vim.Math3d.Int3.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Int3.CompareTo
  nameWithType: Int3.CompareTo
- uid: Vim.Math3d.Int3.Create(System.Int32,System.Int32,System.Int32)
  name: Create(Int32, Int32, Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Create_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int3.Create(System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.Int3.Create(System.Int32, System.Int32, System.Int32)
  nameWithType: Int3.Create(Int32, Int32, Int32)
- uid: Vim.Math3d.Int3.Create(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  name: Create((Int32 x, Int32 y, Int32 z))
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Create_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  commentId: M:Vim.Math3d.Int3.Create(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  name.vb: Create((x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32))
  fullName: Vim.Math3d.Int3.Create(System.ValueTuple<System.Int32, System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int3.Create(System.ValueTuple(Of System.Int32, System.Int32, System.Int32))
  nameWithType: Int3.Create((Int32 x, Int32 y, Int32 z))
  nameWithType.vb: Int3.Create((x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32))
- uid: Vim.Math3d.Int3.Create*
  name: Create
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Create_
  commentId: Overload:Vim.Math3d.Int3.Create
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Create
  nameWithType: Int3.Create
- uid: Vim.Math3d.Int3.Deconstruct(System.Int32@,System.Int32@,System.Int32@)
  name: Deconstruct(out Int32, out Int32, out Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Deconstruct_System_Int32__System_Int32__System_Int32__
  commentId: M:Vim.Math3d.Int3.Deconstruct(System.Int32@,System.Int32@,System.Int32@)
  name.vb: Deconstruct(ByRef Int32, ByRef Int32, ByRef Int32)
  fullName: Vim.Math3d.Int3.Deconstruct(out System.Int32, out System.Int32, out System.Int32)
  fullName.vb: Vim.Math3d.Int3.Deconstruct(ByRef System.Int32, ByRef System.Int32, ByRef System.Int32)
  nameWithType: Int3.Deconstruct(out Int32, out Int32, out Int32)
  nameWithType.vb: Int3.Deconstruct(ByRef Int32, ByRef Int32, ByRef Int32)
- uid: Vim.Math3d.Int3.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Deconstruct_
  commentId: Overload:Vim.Math3d.Int3.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Deconstruct
  nameWithType: Int3.Deconstruct
- uid: Vim.Math3d.Int3.Dot(Vim.Math3d.Int3)
  name: Dot(Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Dot_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.Dot(Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Dot(Vim.Math3d.Int3)
  nameWithType: Int3.Dot(Int3)
- uid: Vim.Math3d.Int3.Dot(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: Dot(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Dot_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.Dot(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Dot(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.Dot(Int3, Int3)
- uid: Vim.Math3d.Int3.Dot*
  name: Dot
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Dot_
  commentId: Overload:Vim.Math3d.Int3.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Dot
  nameWithType: Int3.Dot
- uid: Vim.Math3d.Int3.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Equals_System_Object_
  commentId: M:Vim.Math3d.Int3.Equals(System.Object)
  fullName: Vim.Math3d.Int3.Equals(System.Object)
  nameWithType: Int3.Equals(Object)
- uid: Vim.Math3d.Int3.Equals(Vim.Math3d.Int3)
  name: Equals(Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Equals_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.Equals(Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Equals(Vim.Math3d.Int3)
  nameWithType: Int3.Equals(Int3)
- uid: Vim.Math3d.Int3.Equals*
  name: Equals
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Equals_
  commentId: Overload:Vim.Math3d.Int3.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Equals
  nameWithType: Int3.Equals
- uid: Vim.Math3d.Int3.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Int3.GetComponent(System.Int32)
  fullName: Vim.Math3d.Int3.GetComponent(System.Int32)
  nameWithType: Int3.GetComponent(Int32)
- uid: Vim.Math3d.Int3.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_GetComponent_
  commentId: Overload:Vim.Math3d.Int3.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int3.GetComponent
  nameWithType: Int3.GetComponent
- uid: Vim.Math3d.Int3.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_GetHashCode
  commentId: M:Vim.Math3d.Int3.GetHashCode
  fullName: Vim.Math3d.Int3.GetHashCode()
  nameWithType: Int3.GetHashCode()
- uid: Vim.Math3d.Int3.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_GetHashCode_
  commentId: Overload:Vim.Math3d.Int3.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Int3.GetHashCode
  nameWithType: Int3.GetHashCode
- uid: Vim.Math3d.Int3.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_IsInfinity
  commentId: M:Vim.Math3d.Int3.IsInfinity
  fullName: Vim.Math3d.Int3.IsInfinity()
  nameWithType: Int3.IsInfinity()
- uid: Vim.Math3d.Int3.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_IsInfinity_
  commentId: Overload:Vim.Math3d.Int3.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Int3.IsInfinity
  nameWithType: Int3.IsInfinity
- uid: Vim.Math3d.Int3.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_IsNaN
  commentId: M:Vim.Math3d.Int3.IsNaN
  fullName: Vim.Math3d.Int3.IsNaN()
  nameWithType: Int3.IsNaN()
- uid: Vim.Math3d.Int3.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_IsNaN_
  commentId: Overload:Vim.Math3d.Int3.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Int3.IsNaN
  nameWithType: Int3.IsNaN
- uid: Vim.Math3d.Int3.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Magnitude
  commentId: M:Vim.Math3d.Int3.Magnitude
  fullName: Vim.Math3d.Int3.Magnitude()
  nameWithType: Int3.Magnitude()
- uid: Vim.Math3d.Int3.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Magnitude_
  commentId: Overload:Vim.Math3d.Int3.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Magnitude
  nameWithType: Int3.Magnitude
- uid: Vim.Math3d.Int3.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MagnitudeSquared
  commentId: M:Vim.Math3d.Int3.MagnitudeSquared
  fullName: Vim.Math3d.Int3.MagnitudeSquared()
  nameWithType: Int3.MagnitudeSquared()
- uid: Vim.Math3d.Int3.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Int3.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Int3.MagnitudeSquared
  nameWithType: Int3.MagnitudeSquared
- uid: Vim.Math3d.Int3.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MaxComponent
  commentId: M:Vim.Math3d.Int3.MaxComponent
  fullName: Vim.Math3d.Int3.MaxComponent()
  nameWithType: Int3.MaxComponent()
- uid: Vim.Math3d.Int3.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MaxComponent_
  commentId: Overload:Vim.Math3d.Int3.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int3.MaxComponent
  nameWithType: Int3.MaxComponent
- uid: Vim.Math3d.Int3.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MaxValue
  commentId: F:Vim.Math3d.Int3.MaxValue
  fullName: Vim.Math3d.Int3.MaxValue
  nameWithType: Int3.MaxValue
- uid: Vim.Math3d.Int3.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MinComponent
  commentId: M:Vim.Math3d.Int3.MinComponent
  fullName: Vim.Math3d.Int3.MinComponent()
  nameWithType: Int3.MinComponent()
- uid: Vim.Math3d.Int3.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MinComponent_
  commentId: Overload:Vim.Math3d.Int3.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int3.MinComponent
  nameWithType: Int3.MinComponent
- uid: Vim.Math3d.Int3.MinValue
  name: MinValue
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_MinValue
  commentId: F:Vim.Math3d.Int3.MinValue
  fullName: Vim.Math3d.Int3.MinValue
  nameWithType: Int3.MinValue
- uid: Vim.Math3d.Int3.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_NumComponents
  commentId: F:Vim.Math3d.Int3.NumComponents
  fullName: Vim.Math3d.Int3.NumComponents
  nameWithType: Int3.NumComponents
- uid: Vim.Math3d.Int3.One
  name: One
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_One
  commentId: F:Vim.Math3d.Int3.One
  fullName: Vim.Math3d.Int3.One
  nameWithType: Int3.One
- uid: Vim.Math3d.Int3.op_Addition(System.Int32,Vim.Math3d.Int3)
  name: Addition(Int32, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Addition_System_Int32_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Addition(System.Int32,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Addition(System.Int32, Vim.Math3d.Int3)
  nameWithType: Int3.Addition(Int32, Int3)
- uid: Vim.Math3d.Int3.op_Addition(Vim.Math3d.Int3,System.Int32)
  name: Addition(Int3, Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Addition_Vim_Math3d_Int3_System_Int32_
  commentId: M:Vim.Math3d.Int3.op_Addition(Vim.Math3d.Int3,System.Int32)
  fullName: Vim.Math3d.Int3.Addition(Vim.Math3d.Int3, System.Int32)
  nameWithType: Int3.Addition(Int3, Int32)
- uid: Vim.Math3d.Int3.op_Addition(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: Addition(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Addition_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Addition(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Addition(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.Addition(Int3, Int3)
- uid: Vim.Math3d.Int3.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Addition_
  commentId: Overload:Vim.Math3d.Int3.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Addition
  nameWithType: Int3.Addition
- uid: Vim.Math3d.Int3.op_Division(System.Int32,Vim.Math3d.Int3)
  name: Division(Int32, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Division_System_Int32_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Division(System.Int32,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Division(System.Int32, Vim.Math3d.Int3)
  nameWithType: Int3.Division(Int32, Int3)
- uid: Vim.Math3d.Int3.op_Division(Vim.Math3d.Int3,System.Int32)
  name: Division(Int3, Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Division_Vim_Math3d_Int3_System_Int32_
  commentId: M:Vim.Math3d.Int3.op_Division(Vim.Math3d.Int3,System.Int32)
  fullName: Vim.Math3d.Int3.Division(Vim.Math3d.Int3, System.Int32)
  nameWithType: Int3.Division(Int3, Int32)
- uid: Vim.Math3d.Int3.op_Division(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: Division(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Division_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Division(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Division(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.Division(Int3, Int3)
- uid: Vim.Math3d.Int3.op_Division*
  name: Division
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Division_
  commentId: Overload:Vim.Math3d.Int3.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Division
  nameWithType: Int3.Division
- uid: Vim.Math3d.Int3.op_Equality(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: Equality(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Equality_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Equality(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Equality(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.Equality(Int3, Int3)
- uid: Vim.Math3d.Int3.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Equality_
  commentId: Overload:Vim.Math3d.Int3.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Equality
  nameWithType: Int3.Equality
- uid: Vim.Math3d.Int3.op_GreaterThan(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: GreaterThan(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_GreaterThan_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_GreaterThan(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.GreaterThan(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.GreaterThan(Int3, Int3)
- uid: Vim.Math3d.Int3.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Int3.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Int3.GreaterThan
  nameWithType: Int3.GreaterThan
- uid: Vim.Math3d.Int3.op_GreaterThanOrEqual(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: GreaterThanOrEqual(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_GreaterThanOrEqual_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_GreaterThanOrEqual(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.GreaterThanOrEqual(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.GreaterThanOrEqual(Int3, Int3)
- uid: Vim.Math3d.Int3.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Int3.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Int3.GreaterThanOrEqual
  nameWithType: Int3.GreaterThanOrEqual
- uid: Vim.Math3d.Int3.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32})~Vim.Math3d.Int3
  name: Implicit((Int32 x, Int32 y, Int32 z) to Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Implicit_System_ValueTuple_System_Int32_System_Int32_System_Int32___Vim_Math3d_Int3
  commentId: M:Vim.Math3d.Int3.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32})~Vim.Math3d.Int3
  name.vb: Widening((x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32) to Int3)
  fullName: Vim.Math3d.Int3.Implicit(System.ValueTuple<System.Int32, System.Int32, System.Int32> to Vim.Math3d.Int3)
  fullName.vb: Vim.Math3d.Int3.Widening(System.ValueTuple(Of System.Int32, System.Int32, System.Int32) to Vim.Math3d.Int3)
  nameWithType: Int3.Implicit((Int32 x, Int32 y, Int32 z) to Int3)
  nameWithType.vb: Int3.Widening((x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32) to Int3)
- uid: Vim.Math3d.Int3.op_Implicit(Vim.Math3d.Int3)~System.ValueTuple{System.Int32,System.Int32,System.Int32}
  name: Implicit(Int3 to (Int32 x, Int32 y, Int32 z))
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Implicit_Vim_Math3d_Int3__System_ValueTuple_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int3.op_Implicit(Vim.Math3d.Int3)~System.ValueTuple{System.Int32,System.Int32,System.Int32}
  name.vb: Widening(Int3 to (x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32))
  fullName: Vim.Math3d.Int3.Implicit(Vim.Math3d.Int3 to System.ValueTuple<System.Int32, System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int3.Widening(Vim.Math3d.Int3 to System.ValueTuple(Of System.Int32, System.Int32, System.Int32))
  nameWithType: Int3.Implicit(Int3 to (Int32 x, Int32 y, Int32 z))
  nameWithType.vb: Int3.Widening(Int3 to (x As Int32, y As Int32, z As Int32)(Of Int32, Int32, Int32))
- uid: Vim.Math3d.Int3.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Implicit_
  commentId: Overload:Vim.Math3d.Int3.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Int3.Implicit
  fullName.vb: Vim.Math3d.Int3.Widening
  nameWithType: Int3.Implicit
  nameWithType.vb: Int3.Widening
- uid: Vim.Math3d.Int3.op_Inequality(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: Inequality(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Inequality_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Inequality(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Inequality(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.Inequality(Int3, Int3)
- uid: Vim.Math3d.Int3.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Inequality_
  commentId: Overload:Vim.Math3d.Int3.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Inequality
  nameWithType: Int3.Inequality
- uid: Vim.Math3d.Int3.op_LessThan(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: LessThan(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_LessThan_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_LessThan(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.LessThan(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.LessThan(Int3, Int3)
- uid: Vim.Math3d.Int3.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_LessThan_
  commentId: Overload:Vim.Math3d.Int3.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Int3.LessThan
  nameWithType: Int3.LessThan
- uid: Vim.Math3d.Int3.op_LessThanOrEqual(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: LessThanOrEqual(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_LessThanOrEqual_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_LessThanOrEqual(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.LessThanOrEqual(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.LessThanOrEqual(Int3, Int3)
- uid: Vim.Math3d.Int3.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Int3.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Int3.LessThanOrEqual
  nameWithType: Int3.LessThanOrEqual
- uid: Vim.Math3d.Int3.op_Multiply(System.Int32,Vim.Math3d.Int3)
  name: Multiply(Int32, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Multiply_System_Int32_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Multiply(System.Int32,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Multiply(System.Int32, Vim.Math3d.Int3)
  nameWithType: Int3.Multiply(Int32, Int3)
- uid: Vim.Math3d.Int3.op_Multiply(Vim.Math3d.Int3,System.Int32)
  name: Multiply(Int3, Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Multiply_Vim_Math3d_Int3_System_Int32_
  commentId: M:Vim.Math3d.Int3.op_Multiply(Vim.Math3d.Int3,System.Int32)
  fullName: Vim.Math3d.Int3.Multiply(Vim.Math3d.Int3, System.Int32)
  nameWithType: Int3.Multiply(Int3, Int32)
- uid: Vim.Math3d.Int3.op_Multiply(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: Multiply(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Multiply_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Multiply(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Multiply(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.Multiply(Int3, Int3)
- uid: Vim.Math3d.Int3.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Multiply_
  commentId: Overload:Vim.Math3d.Int3.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Multiply
  nameWithType: Int3.Multiply
- uid: Vim.Math3d.Int3.op_Subtraction(System.Int32,Vim.Math3d.Int3)
  name: Subtraction(Int32, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Subtraction_System_Int32_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Subtraction(System.Int32,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Subtraction(System.Int32, Vim.Math3d.Int3)
  nameWithType: Int3.Subtraction(Int32, Int3)
- uid: Vim.Math3d.Int3.op_Subtraction(Vim.Math3d.Int3,System.Int32)
  name: Subtraction(Int3, Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Subtraction_Vim_Math3d_Int3_System_Int32_
  commentId: M:Vim.Math3d.Int3.op_Subtraction(Vim.Math3d.Int3,System.Int32)
  fullName: Vim.Math3d.Int3.Subtraction(Vim.Math3d.Int3, System.Int32)
  nameWithType: Int3.Subtraction(Int3, Int32)
- uid: Vim.Math3d.Int3.op_Subtraction(Vim.Math3d.Int3,Vim.Math3d.Int3)
  name: Subtraction(Int3, Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Subtraction_Vim_Math3d_Int3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_Subtraction(Vim.Math3d.Int3,Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.Subtraction(Vim.Math3d.Int3, Vim.Math3d.Int3)
  nameWithType: Int3.Subtraction(Int3, Int3)
- uid: Vim.Math3d.Int3.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_Subtraction_
  commentId: Overload:Vim.Math3d.Int3.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Int3.Subtraction
  nameWithType: Int3.Subtraction
- uid: Vim.Math3d.Int3.op_UnaryNegation(Vim.Math3d.Int3)
  name: UnaryNegation(Int3)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_UnaryNegation_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.Int3.op_UnaryNegation(Vim.Math3d.Int3)
  fullName: Vim.Math3d.Int3.UnaryNegation(Vim.Math3d.Int3)
  nameWithType: Int3.UnaryNegation(Int3)
- uid: Vim.Math3d.Int3.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Int3.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Int3.UnaryNegation
  nameWithType: Int3.UnaryNegation
- uid: Vim.Math3d.Int3.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_ProductComponents
  commentId: M:Vim.Math3d.Int3.ProductComponents
  fullName: Vim.Math3d.Int3.ProductComponents()
  nameWithType: Int3.ProductComponents()
- uid: Vim.Math3d.Int3.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_ProductComponents_
  commentId: Overload:Vim.Math3d.Int3.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int3.ProductComponents
  nameWithType: Int3.ProductComponents
- uid: Vim.Math3d.Int3.SetX(System.Int32)
  name: SetX(Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SetX_System_Int32_
  commentId: M:Vim.Math3d.Int3.SetX(System.Int32)
  fullName: Vim.Math3d.Int3.SetX(System.Int32)
  nameWithType: Int3.SetX(Int32)
- uid: Vim.Math3d.Int3.SetX*
  name: SetX
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SetX_
  commentId: Overload:Vim.Math3d.Int3.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Int3.SetX
  nameWithType: Int3.SetX
- uid: Vim.Math3d.Int3.SetY(System.Int32)
  name: SetY(Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SetY_System_Int32_
  commentId: M:Vim.Math3d.Int3.SetY(System.Int32)
  fullName: Vim.Math3d.Int3.SetY(System.Int32)
  nameWithType: Int3.SetY(Int32)
- uid: Vim.Math3d.Int3.SetY*
  name: SetY
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SetY_
  commentId: Overload:Vim.Math3d.Int3.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Int3.SetY
  nameWithType: Int3.SetY
- uid: Vim.Math3d.Int3.SetZ(System.Int32)
  name: SetZ(Int32)
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SetZ_System_Int32_
  commentId: M:Vim.Math3d.Int3.SetZ(System.Int32)
  fullName: Vim.Math3d.Int3.SetZ(System.Int32)
  nameWithType: Int3.SetZ(Int32)
- uid: Vim.Math3d.Int3.SetZ*
  name: SetZ
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SetZ_
  commentId: Overload:Vim.Math3d.Int3.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.Int3.SetZ
  nameWithType: Int3.SetZ
- uid: Vim.Math3d.Int3.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SumComponents
  commentId: M:Vim.Math3d.Int3.SumComponents
  fullName: Vim.Math3d.Int3.SumComponents()
  nameWithType: Int3.SumComponents()
- uid: Vim.Math3d.Int3.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SumComponents_
  commentId: Overload:Vim.Math3d.Int3.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int3.SumComponents
  nameWithType: Int3.SumComponents
- uid: Vim.Math3d.Int3.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SumSqrComponents
  commentId: M:Vim.Math3d.Int3.SumSqrComponents
  fullName: Vim.Math3d.Int3.SumSqrComponents()
  nameWithType: Int3.SumSqrComponents()
- uid: Vim.Math3d.Int3.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Int3.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int3.SumSqrComponents
  nameWithType: Int3.SumSqrComponents
- uid: Vim.Math3d.Int3.ToString
  name: ToString()
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_ToString
  commentId: M:Vim.Math3d.Int3.ToString
  fullName: Vim.Math3d.Int3.ToString()
  nameWithType: Int3.ToString()
- uid: Vim.Math3d.Int3.ToString*
  name: ToString
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_ToString_
  commentId: Overload:Vim.Math3d.Int3.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Int3.ToString
  nameWithType: Int3.ToString
- uid: Vim.Math3d.Int3.UnitX
  name: UnitX
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_UnitX
  commentId: F:Vim.Math3d.Int3.UnitX
  fullName: Vim.Math3d.Int3.UnitX
  nameWithType: Int3.UnitX
- uid: Vim.Math3d.Int3.UnitY
  name: UnitY
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_UnitY
  commentId: F:Vim.Math3d.Int3.UnitY
  fullName: Vim.Math3d.Int3.UnitY
  nameWithType: Int3.UnitY
- uid: Vim.Math3d.Int3.UnitZ
  name: UnitZ
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_UnitZ
  commentId: F:Vim.Math3d.Int3.UnitZ
  fullName: Vim.Math3d.Int3.UnitZ
  nameWithType: Int3.UnitZ
- uid: Vim.Math3d.Int3.X
  name: X
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_X
  commentId: F:Vim.Math3d.Int3.X
  fullName: Vim.Math3d.Int3.X
  nameWithType: Int3.X
- uid: Vim.Math3d.Int3.Y
  name: Y
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Y
  commentId: F:Vim.Math3d.Int3.Y
  fullName: Vim.Math3d.Int3.Y
  nameWithType: Int3.Y
- uid: Vim.Math3d.Int3.Z
  name: Z
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Z
  commentId: F:Vim.Math3d.Int3.Z
  fullName: Vim.Math3d.Int3.Z
  nameWithType: Int3.Z
- uid: Vim.Math3d.Int3.Zero
  name: Zero
  href: api/Vim.Math3d.Int3.html#Vim_Math3d_Int3_Zero
  commentId: F:Vim.Math3d.Int3.Zero
  fullName: Vim.Math3d.Int3.Zero
  nameWithType: Int3.Zero
- uid: Vim.Math3d.Int4
  name: Int4
  href: api/Vim.Math3d.Int4.html
  commentId: T:Vim.Math3d.Int4
  fullName: Vim.Math3d.Int4
  nameWithType: Int4
- uid: Vim.Math3d.Int4.#ctor(System.Int32)
  name: Int4(Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4__ctor_System_Int32_
  commentId: M:Vim.Math3d.Int4.#ctor(System.Int32)
  fullName: Vim.Math3d.Int4.Int4(System.Int32)
  nameWithType: Int4.Int4(Int32)
- uid: Vim.Math3d.Int4.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: Int4(Int32, Int32, Int32, Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int4.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.Int4.Int4(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: Int4.Int4(Int32, Int32, Int32, Int32)
- uid: Vim.Math3d.Int4.#ctor(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})
  name: Int4((Int32 x, Int32 y, Int32 z, Int32 w))
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4__ctor_System_ValueTuple_System_Int32_System_Int32_System_Int32_System_Int32__
  commentId: M:Vim.Math3d.Int4.#ctor(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})
  name.vb: Int4((x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32))
  fullName: Vim.Math3d.Int4.Int4(System.ValueTuple<System.Int32, System.Int32, System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int4.Int4(System.ValueTuple(Of System.Int32, System.Int32, System.Int32, System.Int32))
  nameWithType: Int4.Int4((Int32 x, Int32 y, Int32 z, Int32 w))
  nameWithType.vb: Int4.Int4((x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32))
- uid: Vim.Math3d.Int4.#ctor*
  name: Int4
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4__ctor_
  commentId: Overload:Vim.Math3d.Int4.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Int4
  nameWithType: Int4.Int4
- uid: Vim.Math3d.Int4.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Int4.AlmostZero(System.Single)
  fullName: Vim.Math3d.Int4.AlmostZero(System.Single)
  nameWithType: Int4.AlmostZero(Single)
- uid: Vim.Math3d.Int4.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_AlmostZero_
  commentId: Overload:Vim.Math3d.Int4.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Int4.AlmostZero
  nameWithType: Int4.AlmostZero
- uid: Vim.Math3d.Int4.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_AnyComponentNegative
  commentId: M:Vim.Math3d.Int4.AnyComponentNegative
  fullName: Vim.Math3d.Int4.AnyComponentNegative()
  nameWithType: Int4.AnyComponentNegative()
- uid: Vim.Math3d.Int4.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Int4.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Int4.AnyComponentNegative
  nameWithType: Int4.AnyComponentNegative
- uid: Vim.Math3d.Int4.CompareTo(Vim.Math3d.Int4)
  name: CompareTo(Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_CompareTo_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.CompareTo(Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.CompareTo(Vim.Math3d.Int4)
  nameWithType: Int4.CompareTo(Int4)
- uid: Vim.Math3d.Int4.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_CompareTo_
  commentId: Overload:Vim.Math3d.Int4.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Int4.CompareTo
  nameWithType: Int4.CompareTo
- uid: Vim.Math3d.Int4.Create(System.Int32,System.Int32,System.Int32,System.Int32)
  name: Create(Int32, Int32, Int32, Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Create_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int4.Create(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.Int4.Create(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: Int4.Create(Int32, Int32, Int32, Int32)
- uid: Vim.Math3d.Int4.Create(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})
  name: Create((Int32 x, Int32 y, Int32 z, Int32 w))
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Create_System_ValueTuple_System_Int32_System_Int32_System_Int32_System_Int32__
  commentId: M:Vim.Math3d.Int4.Create(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})
  name.vb: Create((x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32))
  fullName: Vim.Math3d.Int4.Create(System.ValueTuple<System.Int32, System.Int32, System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int4.Create(System.ValueTuple(Of System.Int32, System.Int32, System.Int32, System.Int32))
  nameWithType: Int4.Create((Int32 x, Int32 y, Int32 z, Int32 w))
  nameWithType.vb: Int4.Create((x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32))
- uid: Vim.Math3d.Int4.Create*
  name: Create
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Create_
  commentId: Overload:Vim.Math3d.Int4.Create
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Create
  nameWithType: Int4.Create
- uid: Vim.Math3d.Int4.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  name: Deconstruct(out Int32, out Int32, out Int32, out Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Deconstruct_System_Int32__System_Int32__System_Int32__System_Int32__
  commentId: M:Vim.Math3d.Int4.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  name.vb: Deconstruct(ByRef Int32, ByRef Int32, ByRef Int32, ByRef Int32)
  fullName: Vim.Math3d.Int4.Deconstruct(out System.Int32, out System.Int32, out System.Int32, out System.Int32)
  fullName.vb: Vim.Math3d.Int4.Deconstruct(ByRef System.Int32, ByRef System.Int32, ByRef System.Int32, ByRef System.Int32)
  nameWithType: Int4.Deconstruct(out Int32, out Int32, out Int32, out Int32)
  nameWithType.vb: Int4.Deconstruct(ByRef Int32, ByRef Int32, ByRef Int32, ByRef Int32)
- uid: Vim.Math3d.Int4.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Deconstruct_
  commentId: Overload:Vim.Math3d.Int4.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Deconstruct
  nameWithType: Int4.Deconstruct
- uid: Vim.Math3d.Int4.Dot(Vim.Math3d.Int4)
  name: Dot(Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Dot_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.Dot(Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Dot(Vim.Math3d.Int4)
  nameWithType: Int4.Dot(Int4)
- uid: Vim.Math3d.Int4.Dot(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: Dot(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Dot_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.Dot(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Dot(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.Dot(Int4, Int4)
- uid: Vim.Math3d.Int4.Dot*
  name: Dot
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Dot_
  commentId: Overload:Vim.Math3d.Int4.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Dot
  nameWithType: Int4.Dot
- uid: Vim.Math3d.Int4.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Equals_System_Object_
  commentId: M:Vim.Math3d.Int4.Equals(System.Object)
  fullName: Vim.Math3d.Int4.Equals(System.Object)
  nameWithType: Int4.Equals(Object)
- uid: Vim.Math3d.Int4.Equals(Vim.Math3d.Int4)
  name: Equals(Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Equals_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.Equals(Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Equals(Vim.Math3d.Int4)
  nameWithType: Int4.Equals(Int4)
- uid: Vim.Math3d.Int4.Equals*
  name: Equals
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Equals_
  commentId: Overload:Vim.Math3d.Int4.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Equals
  nameWithType: Int4.Equals
- uid: Vim.Math3d.Int4.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Int4.GetComponent(System.Int32)
  fullName: Vim.Math3d.Int4.GetComponent(System.Int32)
  nameWithType: Int4.GetComponent(Int32)
- uid: Vim.Math3d.Int4.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_GetComponent_
  commentId: Overload:Vim.Math3d.Int4.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int4.GetComponent
  nameWithType: Int4.GetComponent
- uid: Vim.Math3d.Int4.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_GetHashCode
  commentId: M:Vim.Math3d.Int4.GetHashCode
  fullName: Vim.Math3d.Int4.GetHashCode()
  nameWithType: Int4.GetHashCode()
- uid: Vim.Math3d.Int4.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_GetHashCode_
  commentId: Overload:Vim.Math3d.Int4.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Int4.GetHashCode
  nameWithType: Int4.GetHashCode
- uid: Vim.Math3d.Int4.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_IsInfinity
  commentId: M:Vim.Math3d.Int4.IsInfinity
  fullName: Vim.Math3d.Int4.IsInfinity()
  nameWithType: Int4.IsInfinity()
- uid: Vim.Math3d.Int4.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_IsInfinity_
  commentId: Overload:Vim.Math3d.Int4.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Int4.IsInfinity
  nameWithType: Int4.IsInfinity
- uid: Vim.Math3d.Int4.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_IsNaN
  commentId: M:Vim.Math3d.Int4.IsNaN
  fullName: Vim.Math3d.Int4.IsNaN()
  nameWithType: Int4.IsNaN()
- uid: Vim.Math3d.Int4.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_IsNaN_
  commentId: Overload:Vim.Math3d.Int4.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Int4.IsNaN
  nameWithType: Int4.IsNaN
- uid: Vim.Math3d.Int4.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Magnitude
  commentId: M:Vim.Math3d.Int4.Magnitude
  fullName: Vim.Math3d.Int4.Magnitude()
  nameWithType: Int4.Magnitude()
- uid: Vim.Math3d.Int4.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Magnitude_
  commentId: Overload:Vim.Math3d.Int4.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Magnitude
  nameWithType: Int4.Magnitude
- uid: Vim.Math3d.Int4.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MagnitudeSquared
  commentId: M:Vim.Math3d.Int4.MagnitudeSquared
  fullName: Vim.Math3d.Int4.MagnitudeSquared()
  nameWithType: Int4.MagnitudeSquared()
- uid: Vim.Math3d.Int4.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Int4.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Int4.MagnitudeSquared
  nameWithType: Int4.MagnitudeSquared
- uid: Vim.Math3d.Int4.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MaxComponent
  commentId: M:Vim.Math3d.Int4.MaxComponent
  fullName: Vim.Math3d.Int4.MaxComponent()
  nameWithType: Int4.MaxComponent()
- uid: Vim.Math3d.Int4.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MaxComponent_
  commentId: Overload:Vim.Math3d.Int4.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int4.MaxComponent
  nameWithType: Int4.MaxComponent
- uid: Vim.Math3d.Int4.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MaxValue
  commentId: F:Vim.Math3d.Int4.MaxValue
  fullName: Vim.Math3d.Int4.MaxValue
  nameWithType: Int4.MaxValue
- uid: Vim.Math3d.Int4.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MinComponent
  commentId: M:Vim.Math3d.Int4.MinComponent
  fullName: Vim.Math3d.Int4.MinComponent()
  nameWithType: Int4.MinComponent()
- uid: Vim.Math3d.Int4.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MinComponent_
  commentId: Overload:Vim.Math3d.Int4.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Int4.MinComponent
  nameWithType: Int4.MinComponent
- uid: Vim.Math3d.Int4.MinValue
  name: MinValue
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_MinValue
  commentId: F:Vim.Math3d.Int4.MinValue
  fullName: Vim.Math3d.Int4.MinValue
  nameWithType: Int4.MinValue
- uid: Vim.Math3d.Int4.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_NumComponents
  commentId: F:Vim.Math3d.Int4.NumComponents
  fullName: Vim.Math3d.Int4.NumComponents
  nameWithType: Int4.NumComponents
- uid: Vim.Math3d.Int4.One
  name: One
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_One
  commentId: F:Vim.Math3d.Int4.One
  fullName: Vim.Math3d.Int4.One
  nameWithType: Int4.One
- uid: Vim.Math3d.Int4.op_Addition(System.Int32,Vim.Math3d.Int4)
  name: Addition(Int32, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Addition_System_Int32_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Addition(System.Int32,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Addition(System.Int32, Vim.Math3d.Int4)
  nameWithType: Int4.Addition(Int32, Int4)
- uid: Vim.Math3d.Int4.op_Addition(Vim.Math3d.Int4,System.Int32)
  name: Addition(Int4, Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Addition_Vim_Math3d_Int4_System_Int32_
  commentId: M:Vim.Math3d.Int4.op_Addition(Vim.Math3d.Int4,System.Int32)
  fullName: Vim.Math3d.Int4.Addition(Vim.Math3d.Int4, System.Int32)
  nameWithType: Int4.Addition(Int4, Int32)
- uid: Vim.Math3d.Int4.op_Addition(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: Addition(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Addition_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Addition(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Addition(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.Addition(Int4, Int4)
- uid: Vim.Math3d.Int4.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Addition_
  commentId: Overload:Vim.Math3d.Int4.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Addition
  nameWithType: Int4.Addition
- uid: Vim.Math3d.Int4.op_Division(System.Int32,Vim.Math3d.Int4)
  name: Division(Int32, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Division_System_Int32_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Division(System.Int32,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Division(System.Int32, Vim.Math3d.Int4)
  nameWithType: Int4.Division(Int32, Int4)
- uid: Vim.Math3d.Int4.op_Division(Vim.Math3d.Int4,System.Int32)
  name: Division(Int4, Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Division_Vim_Math3d_Int4_System_Int32_
  commentId: M:Vim.Math3d.Int4.op_Division(Vim.Math3d.Int4,System.Int32)
  fullName: Vim.Math3d.Int4.Division(Vim.Math3d.Int4, System.Int32)
  nameWithType: Int4.Division(Int4, Int32)
- uid: Vim.Math3d.Int4.op_Division(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: Division(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Division_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Division(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Division(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.Division(Int4, Int4)
- uid: Vim.Math3d.Int4.op_Division*
  name: Division
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Division_
  commentId: Overload:Vim.Math3d.Int4.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Division
  nameWithType: Int4.Division
- uid: Vim.Math3d.Int4.op_Equality(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: Equality(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Equality_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Equality(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Equality(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.Equality(Int4, Int4)
- uid: Vim.Math3d.Int4.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Equality_
  commentId: Overload:Vim.Math3d.Int4.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Equality
  nameWithType: Int4.Equality
- uid: Vim.Math3d.Int4.op_GreaterThan(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: GreaterThan(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_GreaterThan_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_GreaterThan(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.GreaterThan(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.GreaterThan(Int4, Int4)
- uid: Vim.Math3d.Int4.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Int4.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Int4.GreaterThan
  nameWithType: Int4.GreaterThan
- uid: Vim.Math3d.Int4.op_GreaterThanOrEqual(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: GreaterThanOrEqual(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_GreaterThanOrEqual_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_GreaterThanOrEqual(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.GreaterThanOrEqual(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.GreaterThanOrEqual(Int4, Int4)
- uid: Vim.Math3d.Int4.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Int4.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Int4.GreaterThanOrEqual
  nameWithType: Int4.GreaterThanOrEqual
- uid: Vim.Math3d.Int4.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~Vim.Math3d.Int4
  name: Implicit((Int32 x, Int32 y, Int32 z, Int32 w) to Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Implicit_System_ValueTuple_System_Int32_System_Int32_System_Int32_System_Int32___Vim_Math3d_Int4
  commentId: M:Vim.Math3d.Int4.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~Vim.Math3d.Int4
  name.vb: Widening((x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32) to Int4)
  fullName: Vim.Math3d.Int4.Implicit(System.ValueTuple<System.Int32, System.Int32, System.Int32, System.Int32> to Vim.Math3d.Int4)
  fullName.vb: Vim.Math3d.Int4.Widening(System.ValueTuple(Of System.Int32, System.Int32, System.Int32, System.Int32) to Vim.Math3d.Int4)
  nameWithType: Int4.Implicit((Int32 x, Int32 y, Int32 z, Int32 w) to Int4)
  nameWithType.vb: Int4.Widening((x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32) to Int4)
- uid: Vim.Math3d.Int4.op_Implicit(Vim.Math3d.Int4)~System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
  name: Implicit(Int4 to (Int32 x, Int32 y, Int32 z, Int32 w))
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Implicit_Vim_Math3d_Int4__System_ValueTuple_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.Int4.op_Implicit(Vim.Math3d.Int4)~System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
  name.vb: Widening(Int4 to (x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32))
  fullName: Vim.Math3d.Int4.Implicit(Vim.Math3d.Int4 to System.ValueTuple<System.Int32, System.Int32, System.Int32, System.Int32>)
  fullName.vb: Vim.Math3d.Int4.Widening(Vim.Math3d.Int4 to System.ValueTuple(Of System.Int32, System.Int32, System.Int32, System.Int32))
  nameWithType: Int4.Implicit(Int4 to (Int32 x, Int32 y, Int32 z, Int32 w))
  nameWithType.vb: Int4.Widening(Int4 to (x As Int32, y As Int32, z As Int32, w As Int32)(Of Int32, Int32, Int32, Int32))
- uid: Vim.Math3d.Int4.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Implicit_
  commentId: Overload:Vim.Math3d.Int4.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Int4.Implicit
  fullName.vb: Vim.Math3d.Int4.Widening
  nameWithType: Int4.Implicit
  nameWithType.vb: Int4.Widening
- uid: Vim.Math3d.Int4.op_Inequality(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: Inequality(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Inequality_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Inequality(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Inequality(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.Inequality(Int4, Int4)
- uid: Vim.Math3d.Int4.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Inequality_
  commentId: Overload:Vim.Math3d.Int4.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Inequality
  nameWithType: Int4.Inequality
- uid: Vim.Math3d.Int4.op_LessThan(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: LessThan(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_LessThan_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_LessThan(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.LessThan(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.LessThan(Int4, Int4)
- uid: Vim.Math3d.Int4.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_LessThan_
  commentId: Overload:Vim.Math3d.Int4.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Int4.LessThan
  nameWithType: Int4.LessThan
- uid: Vim.Math3d.Int4.op_LessThanOrEqual(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: LessThanOrEqual(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_LessThanOrEqual_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_LessThanOrEqual(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.LessThanOrEqual(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.LessThanOrEqual(Int4, Int4)
- uid: Vim.Math3d.Int4.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Int4.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Int4.LessThanOrEqual
  nameWithType: Int4.LessThanOrEqual
- uid: Vim.Math3d.Int4.op_Multiply(System.Int32,Vim.Math3d.Int4)
  name: Multiply(Int32, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Multiply_System_Int32_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Multiply(System.Int32,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Multiply(System.Int32, Vim.Math3d.Int4)
  nameWithType: Int4.Multiply(Int32, Int4)
- uid: Vim.Math3d.Int4.op_Multiply(Vim.Math3d.Int4,System.Int32)
  name: Multiply(Int4, Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Multiply_Vim_Math3d_Int4_System_Int32_
  commentId: M:Vim.Math3d.Int4.op_Multiply(Vim.Math3d.Int4,System.Int32)
  fullName: Vim.Math3d.Int4.Multiply(Vim.Math3d.Int4, System.Int32)
  nameWithType: Int4.Multiply(Int4, Int32)
- uid: Vim.Math3d.Int4.op_Multiply(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: Multiply(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Multiply_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Multiply(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Multiply(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.Multiply(Int4, Int4)
- uid: Vim.Math3d.Int4.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Multiply_
  commentId: Overload:Vim.Math3d.Int4.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Multiply
  nameWithType: Int4.Multiply
- uid: Vim.Math3d.Int4.op_Subtraction(System.Int32,Vim.Math3d.Int4)
  name: Subtraction(Int32, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Subtraction_System_Int32_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Subtraction(System.Int32,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Subtraction(System.Int32, Vim.Math3d.Int4)
  nameWithType: Int4.Subtraction(Int32, Int4)
- uid: Vim.Math3d.Int4.op_Subtraction(Vim.Math3d.Int4,System.Int32)
  name: Subtraction(Int4, Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Subtraction_Vim_Math3d_Int4_System_Int32_
  commentId: M:Vim.Math3d.Int4.op_Subtraction(Vim.Math3d.Int4,System.Int32)
  fullName: Vim.Math3d.Int4.Subtraction(Vim.Math3d.Int4, System.Int32)
  nameWithType: Int4.Subtraction(Int4, Int32)
- uid: Vim.Math3d.Int4.op_Subtraction(Vim.Math3d.Int4,Vim.Math3d.Int4)
  name: Subtraction(Int4, Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Subtraction_Vim_Math3d_Int4_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_Subtraction(Vim.Math3d.Int4,Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.Subtraction(Vim.Math3d.Int4, Vim.Math3d.Int4)
  nameWithType: Int4.Subtraction(Int4, Int4)
- uid: Vim.Math3d.Int4.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_Subtraction_
  commentId: Overload:Vim.Math3d.Int4.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Int4.Subtraction
  nameWithType: Int4.Subtraction
- uid: Vim.Math3d.Int4.op_UnaryNegation(Vim.Math3d.Int4)
  name: UnaryNegation(Int4)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_UnaryNegation_Vim_Math3d_Int4_
  commentId: M:Vim.Math3d.Int4.op_UnaryNegation(Vim.Math3d.Int4)
  fullName: Vim.Math3d.Int4.UnaryNegation(Vim.Math3d.Int4)
  nameWithType: Int4.UnaryNegation(Int4)
- uid: Vim.Math3d.Int4.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Int4.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Int4.UnaryNegation
  nameWithType: Int4.UnaryNegation
- uid: Vim.Math3d.Int4.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_ProductComponents
  commentId: M:Vim.Math3d.Int4.ProductComponents
  fullName: Vim.Math3d.Int4.ProductComponents()
  nameWithType: Int4.ProductComponents()
- uid: Vim.Math3d.Int4.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_ProductComponents_
  commentId: Overload:Vim.Math3d.Int4.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int4.ProductComponents
  nameWithType: Int4.ProductComponents
- uid: Vim.Math3d.Int4.SetW(System.Int32)
  name: SetW(Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetW_System_Int32_
  commentId: M:Vim.Math3d.Int4.SetW(System.Int32)
  fullName: Vim.Math3d.Int4.SetW(System.Int32)
  nameWithType: Int4.SetW(Int32)
- uid: Vim.Math3d.Int4.SetW*
  name: SetW
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetW_
  commentId: Overload:Vim.Math3d.Int4.SetW
  isSpec: "True"
  fullName: Vim.Math3d.Int4.SetW
  nameWithType: Int4.SetW
- uid: Vim.Math3d.Int4.SetX(System.Int32)
  name: SetX(Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetX_System_Int32_
  commentId: M:Vim.Math3d.Int4.SetX(System.Int32)
  fullName: Vim.Math3d.Int4.SetX(System.Int32)
  nameWithType: Int4.SetX(Int32)
- uid: Vim.Math3d.Int4.SetX*
  name: SetX
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetX_
  commentId: Overload:Vim.Math3d.Int4.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Int4.SetX
  nameWithType: Int4.SetX
- uid: Vim.Math3d.Int4.SetY(System.Int32)
  name: SetY(Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetY_System_Int32_
  commentId: M:Vim.Math3d.Int4.SetY(System.Int32)
  fullName: Vim.Math3d.Int4.SetY(System.Int32)
  nameWithType: Int4.SetY(Int32)
- uid: Vim.Math3d.Int4.SetY*
  name: SetY
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetY_
  commentId: Overload:Vim.Math3d.Int4.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Int4.SetY
  nameWithType: Int4.SetY
- uid: Vim.Math3d.Int4.SetZ(System.Int32)
  name: SetZ(Int32)
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetZ_System_Int32_
  commentId: M:Vim.Math3d.Int4.SetZ(System.Int32)
  fullName: Vim.Math3d.Int4.SetZ(System.Int32)
  nameWithType: Int4.SetZ(Int32)
- uid: Vim.Math3d.Int4.SetZ*
  name: SetZ
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SetZ_
  commentId: Overload:Vim.Math3d.Int4.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.Int4.SetZ
  nameWithType: Int4.SetZ
- uid: Vim.Math3d.Int4.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SumComponents
  commentId: M:Vim.Math3d.Int4.SumComponents
  fullName: Vim.Math3d.Int4.SumComponents()
  nameWithType: Int4.SumComponents()
- uid: Vim.Math3d.Int4.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SumComponents_
  commentId: Overload:Vim.Math3d.Int4.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int4.SumComponents
  nameWithType: Int4.SumComponents
- uid: Vim.Math3d.Int4.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SumSqrComponents
  commentId: M:Vim.Math3d.Int4.SumSqrComponents
  fullName: Vim.Math3d.Int4.SumSqrComponents()
  nameWithType: Int4.SumSqrComponents()
- uid: Vim.Math3d.Int4.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Int4.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Int4.SumSqrComponents
  nameWithType: Int4.SumSqrComponents
- uid: Vim.Math3d.Int4.ToString
  name: ToString()
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_ToString
  commentId: M:Vim.Math3d.Int4.ToString
  fullName: Vim.Math3d.Int4.ToString()
  nameWithType: Int4.ToString()
- uid: Vim.Math3d.Int4.ToString*
  name: ToString
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_ToString_
  commentId: Overload:Vim.Math3d.Int4.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Int4.ToString
  nameWithType: Int4.ToString
- uid: Vim.Math3d.Int4.UnitW
  name: UnitW
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_UnitW
  commentId: F:Vim.Math3d.Int4.UnitW
  fullName: Vim.Math3d.Int4.UnitW
  nameWithType: Int4.UnitW
- uid: Vim.Math3d.Int4.UnitX
  name: UnitX
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_UnitX
  commentId: F:Vim.Math3d.Int4.UnitX
  fullName: Vim.Math3d.Int4.UnitX
  nameWithType: Int4.UnitX
- uid: Vim.Math3d.Int4.UnitY
  name: UnitY
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_UnitY
  commentId: F:Vim.Math3d.Int4.UnitY
  fullName: Vim.Math3d.Int4.UnitY
  nameWithType: Int4.UnitY
- uid: Vim.Math3d.Int4.UnitZ
  name: UnitZ
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_UnitZ
  commentId: F:Vim.Math3d.Int4.UnitZ
  fullName: Vim.Math3d.Int4.UnitZ
  nameWithType: Int4.UnitZ
- uid: Vim.Math3d.Int4.W
  name: W
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_W
  commentId: F:Vim.Math3d.Int4.W
  fullName: Vim.Math3d.Int4.W
  nameWithType: Int4.W
- uid: Vim.Math3d.Int4.X
  name: X
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_X
  commentId: F:Vim.Math3d.Int4.X
  fullName: Vim.Math3d.Int4.X
  nameWithType: Int4.X
- uid: Vim.Math3d.Int4.Y
  name: Y
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Y
  commentId: F:Vim.Math3d.Int4.Y
  fullName: Vim.Math3d.Int4.Y
  nameWithType: Int4.Y
- uid: Vim.Math3d.Int4.Z
  name: Z
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Z
  commentId: F:Vim.Math3d.Int4.Z
  fullName: Vim.Math3d.Int4.Z
  nameWithType: Int4.Z
- uid: Vim.Math3d.Int4.Zero
  name: Zero
  href: api/Vim.Math3d.Int4.html#Vim_Math3d_Int4_Zero
  commentId: F:Vim.Math3d.Int4.Zero
  fullName: Vim.Math3d.Int4.Zero
  nameWithType: Int4.Zero
- uid: Vim.Math3d.Interval
  name: Interval
  href: api/Vim.Math3d.Interval.html
  commentId: T:Vim.Math3d.Interval
  fullName: Vim.Math3d.Interval
  nameWithType: Interval
- uid: Vim.Math3d.Interval.#ctor(System.Single,System.Single)
  name: Interval(Single, Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval__ctor_System_Single_System_Single_
  commentId: M:Vim.Math3d.Interval.#ctor(System.Single,System.Single)
  fullName: Vim.Math3d.Interval.Interval(System.Single, System.Single)
  nameWithType: Interval.Interval(Single, Single)
- uid: Vim.Math3d.Interval.#ctor(System.ValueTuple{System.Single,System.Single})
  name: Interval((Single min, Single max))
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval__ctor_System_ValueTuple_System_Single_System_Single__
  commentId: M:Vim.Math3d.Interval.#ctor(System.ValueTuple{System.Single,System.Single})
  name.vb: Interval((min As Single, max As Single)(Of Single, Single))
  fullName: Vim.Math3d.Interval.Interval(System.ValueTuple<System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Interval.Interval(System.ValueTuple(Of System.Single, System.Single))
  nameWithType: Interval.Interval((Single min, Single max))
  nameWithType.vb: Interval.Interval((min As Single, max As Single)(Of Single, Single))
- uid: Vim.Math3d.Interval.#ctor*
  name: Interval
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval__ctor_
  commentId: Overload:Vim.Math3d.Interval.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Interval
  nameWithType: Interval.Interval
- uid: Vim.Math3d.Interval.AlmostEquals(Vim.Math3d.Interval,System.Single)
  name: AlmostEquals(Interval, Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_AlmostEquals_Vim_Math3d_Interval_System_Single_
  commentId: M:Vim.Math3d.Interval.AlmostEquals(Vim.Math3d.Interval,System.Single)
  fullName: Vim.Math3d.Interval.AlmostEquals(Vim.Math3d.Interval, System.Single)
  nameWithType: Interval.AlmostEquals(Interval, Single)
- uid: Vim.Math3d.Interval.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_AlmostEquals_
  commentId: Overload:Vim.Math3d.Interval.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Interval.AlmostEquals
  nameWithType: Interval.AlmostEquals
- uid: Vim.Math3d.Interval.Center
  name: Center
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Center
  commentId: P:Vim.Math3d.Interval.Center
  fullName: Vim.Math3d.Interval.Center
  nameWithType: Interval.Center
- uid: Vim.Math3d.Interval.Center*
  name: Center
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Center_
  commentId: Overload:Vim.Math3d.Interval.Center
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Center
  nameWithType: Interval.Center
- uid: Vim.Math3d.Interval.CompareTo(Vim.Math3d.Interval)
  name: CompareTo(Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_CompareTo_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.CompareTo(Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.CompareTo(Vim.Math3d.Interval)
  nameWithType: Interval.CompareTo(Interval)
- uid: Vim.Math3d.Interval.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_CompareTo_
  commentId: Overload:Vim.Math3d.Interval.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Interval.CompareTo
  nameWithType: Interval.CompareTo
- uid: Vim.Math3d.Interval.Create(System.Single,System.Single)
  name: Create(Single, Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Create_System_Single_System_Single_
  commentId: M:Vim.Math3d.Interval.Create(System.Single,System.Single)
  fullName: Vim.Math3d.Interval.Create(System.Single, System.Single)
  nameWithType: Interval.Create(Single, Single)
- uid: Vim.Math3d.Interval.Create(System.ValueTuple{System.Single,System.Single})
  name: Create((Single min, Single max))
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Create_System_ValueTuple_System_Single_System_Single__
  commentId: M:Vim.Math3d.Interval.Create(System.ValueTuple{System.Single,System.Single})
  name.vb: Create((min As Single, max As Single)(Of Single, Single))
  fullName: Vim.Math3d.Interval.Create(System.ValueTuple<System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Interval.Create(System.ValueTuple(Of System.Single, System.Single))
  nameWithType: Interval.Create((Single min, Single max))
  nameWithType.vb: Interval.Create((min As Single, max As Single)(Of Single, Single))
- uid: Vim.Math3d.Interval.Create*
  name: Create
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Create_
  commentId: Overload:Vim.Math3d.Interval.Create
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Create
  nameWithType: Interval.Create
- uid: Vim.Math3d.Interval.Deconstruct(System.Single@,System.Single@)
  name: Deconstruct(out Single, out Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Deconstruct_System_Single__System_Single__
  commentId: M:Vim.Math3d.Interval.Deconstruct(System.Single@,System.Single@)
  name.vb: Deconstruct(ByRef Single, ByRef Single)
  fullName: Vim.Math3d.Interval.Deconstruct(out System.Single, out System.Single)
  fullName.vb: Vim.Math3d.Interval.Deconstruct(ByRef System.Single, ByRef System.Single)
  nameWithType: Interval.Deconstruct(out Single, out Single)
  nameWithType.vb: Interval.Deconstruct(ByRef Single, ByRef Single)
- uid: Vim.Math3d.Interval.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Deconstruct_
  commentId: Overload:Vim.Math3d.Interval.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Deconstruct
  nameWithType: Interval.Deconstruct
- uid: Vim.Math3d.Interval.Empty
  name: Empty
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Empty
  commentId: F:Vim.Math3d.Interval.Empty
  fullName: Vim.Math3d.Interval.Empty
  nameWithType: Interval.Empty
- uid: Vim.Math3d.Interval.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Equals_System_Object_
  commentId: M:Vim.Math3d.Interval.Equals(System.Object)
  fullName: Vim.Math3d.Interval.Equals(System.Object)
  nameWithType: Interval.Equals(Object)
- uid: Vim.Math3d.Interval.Equals(Vim.Math3d.Interval)
  name: Equals(Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Equals_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.Equals(Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.Equals(Vim.Math3d.Interval)
  nameWithType: Interval.Equals(Interval)
- uid: Vim.Math3d.Interval.Equals*
  name: Equals
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Equals_
  commentId: Overload:Vim.Math3d.Interval.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Equals
  nameWithType: Interval.Equals
- uid: Vim.Math3d.Interval.Extent
  name: Extent
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Extent
  commentId: P:Vim.Math3d.Interval.Extent
  fullName: Vim.Math3d.Interval.Extent
  nameWithType: Interval.Extent
- uid: Vim.Math3d.Interval.Extent*
  name: Extent
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Extent_
  commentId: Overload:Vim.Math3d.Interval.Extent
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Extent
  nameWithType: Interval.Extent
- uid: Vim.Math3d.Interval.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_GetHashCode
  commentId: M:Vim.Math3d.Interval.GetHashCode
  fullName: Vim.Math3d.Interval.GetHashCode()
  nameWithType: Interval.GetHashCode()
- uid: Vim.Math3d.Interval.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_GetHashCode_
  commentId: Overload:Vim.Math3d.Interval.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Interval.GetHashCode
  nameWithType: Interval.GetHashCode
- uid: Vim.Math3d.Interval.Intersection(Vim.Math3d.Interval)
  name: Intersection(Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Intersection_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.Intersection(Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.Intersection(Vim.Math3d.Interval)
  nameWithType: Interval.Intersection(Interval)
- uid: Vim.Math3d.Interval.Intersection*
  name: Intersection
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Intersection_
  commentId: Overload:Vim.Math3d.Interval.Intersection
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Intersection
  nameWithType: Interval.Intersection
- uid: Vim.Math3d.Interval.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_IsInfinity
  commentId: M:Vim.Math3d.Interval.IsInfinity
  fullName: Vim.Math3d.Interval.IsInfinity()
  nameWithType: Interval.IsInfinity()
- uid: Vim.Math3d.Interval.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_IsInfinity_
  commentId: Overload:Vim.Math3d.Interval.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Interval.IsInfinity
  nameWithType: Interval.IsInfinity
- uid: Vim.Math3d.Interval.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_IsNaN
  commentId: M:Vim.Math3d.Interval.IsNaN
  fullName: Vim.Math3d.Interval.IsNaN()
  nameWithType: Interval.IsNaN()
- uid: Vim.Math3d.Interval.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_IsNaN_
  commentId: Overload:Vim.Math3d.Interval.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Interval.IsNaN
  nameWithType: Interval.IsNaN
- uid: Vim.Math3d.Interval.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Magnitude
  commentId: M:Vim.Math3d.Interval.Magnitude
  fullName: Vim.Math3d.Interval.Magnitude()
  nameWithType: Interval.Magnitude()
- uid: Vim.Math3d.Interval.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Magnitude_
  commentId: Overload:Vim.Math3d.Interval.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Magnitude
  nameWithType: Interval.Magnitude
- uid: Vim.Math3d.Interval.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_MagnitudeSquared
  commentId: M:Vim.Math3d.Interval.MagnitudeSquared
  fullName: Vim.Math3d.Interval.MagnitudeSquared()
  nameWithType: Interval.MagnitudeSquared()
- uid: Vim.Math3d.Interval.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Interval.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Interval.MagnitudeSquared
  nameWithType: Interval.MagnitudeSquared
- uid: Vim.Math3d.Interval.Max
  name: Max
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Max
  commentId: F:Vim.Math3d.Interval.Max
  fullName: Vim.Math3d.Interval.Max
  nameWithType: Interval.Max
- uid: Vim.Math3d.Interval.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_MaxValue
  commentId: F:Vim.Math3d.Interval.MaxValue
  fullName: Vim.Math3d.Interval.MaxValue
  nameWithType: Interval.MaxValue
- uid: Vim.Math3d.Interval.Merge(System.Single)
  name: Merge(Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Merge_System_Single_
  commentId: M:Vim.Math3d.Interval.Merge(System.Single)
  fullName: Vim.Math3d.Interval.Merge(System.Single)
  nameWithType: Interval.Merge(Single)
- uid: Vim.Math3d.Interval.Merge(Vim.Math3d.Interval)
  name: Merge(Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Merge_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.Merge(Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.Merge(Vim.Math3d.Interval)
  nameWithType: Interval.Merge(Interval)
- uid: Vim.Math3d.Interval.Merge*
  name: Merge
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Merge_
  commentId: Overload:Vim.Math3d.Interval.Merge
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Merge
  nameWithType: Interval.Merge
- uid: Vim.Math3d.Interval.Min
  name: Min
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Min
  commentId: F:Vim.Math3d.Interval.Min
  fullName: Vim.Math3d.Interval.Min
  nameWithType: Interval.Min
- uid: Vim.Math3d.Interval.MinValue
  name: MinValue
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_MinValue
  commentId: F:Vim.Math3d.Interval.MinValue
  fullName: Vim.Math3d.Interval.MinValue
  nameWithType: Interval.MinValue
- uid: Vim.Math3d.Interval.op_Addition(Vim.Math3d.Interval,System.Single)
  name: Addition(Interval, Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Addition_Vim_Math3d_Interval_System_Single_
  commentId: M:Vim.Math3d.Interval.op_Addition(Vim.Math3d.Interval,System.Single)
  fullName: Vim.Math3d.Interval.Addition(Vim.Math3d.Interval, System.Single)
  nameWithType: Interval.Addition(Interval, Single)
- uid: Vim.Math3d.Interval.op_Addition(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: Addition(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Addition_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_Addition(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.Addition(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.Addition(Interval, Interval)
- uid: Vim.Math3d.Interval.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Addition_
  commentId: Overload:Vim.Math3d.Interval.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Addition
  nameWithType: Interval.Addition
- uid: Vim.Math3d.Interval.op_Equality(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: Equality(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Equality_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_Equality(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.Equality(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.Equality(Interval, Interval)
- uid: Vim.Math3d.Interval.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Equality_
  commentId: Overload:Vim.Math3d.Interval.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Equality
  nameWithType: Interval.Equality
- uid: Vim.Math3d.Interval.op_GreaterThan(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: GreaterThan(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_GreaterThan_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_GreaterThan(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.GreaterThan(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.GreaterThan(Interval, Interval)
- uid: Vim.Math3d.Interval.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Interval.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Interval.GreaterThan
  nameWithType: Interval.GreaterThan
- uid: Vim.Math3d.Interval.op_GreaterThanOrEqual(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: GreaterThanOrEqual(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_GreaterThanOrEqual_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_GreaterThanOrEqual(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.GreaterThanOrEqual(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.GreaterThanOrEqual(Interval, Interval)
- uid: Vim.Math3d.Interval.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Interval.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Interval.GreaterThanOrEqual
  nameWithType: Interval.GreaterThanOrEqual
- uid: Vim.Math3d.Interval.op_Implicit(System.ValueTuple{System.Single,System.Single})~Vim.Math3d.Interval
  name: Implicit((Single min, Single max) to Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Implicit_System_ValueTuple_System_Single_System_Single___Vim_Math3d_Interval
  commentId: M:Vim.Math3d.Interval.op_Implicit(System.ValueTuple{System.Single,System.Single})~Vim.Math3d.Interval
  name.vb: Widening((min As Single, max As Single)(Of Single, Single) to Interval)
  fullName: Vim.Math3d.Interval.Implicit(System.ValueTuple<System.Single, System.Single> to Vim.Math3d.Interval)
  fullName.vb: Vim.Math3d.Interval.Widening(System.ValueTuple(Of System.Single, System.Single) to Vim.Math3d.Interval)
  nameWithType: Interval.Implicit((Single min, Single max) to Interval)
  nameWithType.vb: Interval.Widening((min As Single, max As Single)(Of Single, Single) to Interval)
- uid: Vim.Math3d.Interval.op_Implicit(Vim.Math3d.Interval)~System.ValueTuple{System.Single,System.Single}
  name: Implicit(Interval to (Single min, Single max))
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Implicit_Vim_Math3d_Interval__System_ValueTuple_System_Single_System_Single_
  commentId: M:Vim.Math3d.Interval.op_Implicit(Vim.Math3d.Interval)~System.ValueTuple{System.Single,System.Single}
  name.vb: Widening(Interval to (min As Single, max As Single)(Of Single, Single))
  fullName: Vim.Math3d.Interval.Implicit(Vim.Math3d.Interval to System.ValueTuple<System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Interval.Widening(Vim.Math3d.Interval to System.ValueTuple(Of System.Single, System.Single))
  nameWithType: Interval.Implicit(Interval to (Single min, Single max))
  nameWithType.vb: Interval.Widening(Interval to (min As Single, max As Single)(Of Single, Single))
- uid: Vim.Math3d.Interval.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Implicit_
  commentId: Overload:Vim.Math3d.Interval.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Interval.Implicit
  fullName.vb: Vim.Math3d.Interval.Widening
  nameWithType: Interval.Implicit
  nameWithType.vb: Interval.Widening
- uid: Vim.Math3d.Interval.op_Inequality(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: Inequality(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Inequality_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_Inequality(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.Inequality(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.Inequality(Interval, Interval)
- uid: Vim.Math3d.Interval.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Inequality_
  commentId: Overload:Vim.Math3d.Interval.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Inequality
  nameWithType: Interval.Inequality
- uid: Vim.Math3d.Interval.op_LessThan(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: LessThan(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_LessThan_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_LessThan(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.LessThan(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.LessThan(Interval, Interval)
- uid: Vim.Math3d.Interval.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_LessThan_
  commentId: Overload:Vim.Math3d.Interval.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Interval.LessThan
  nameWithType: Interval.LessThan
- uid: Vim.Math3d.Interval.op_LessThanOrEqual(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: LessThanOrEqual(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_LessThanOrEqual_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_LessThanOrEqual(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.LessThanOrEqual(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.LessThanOrEqual(Interval, Interval)
- uid: Vim.Math3d.Interval.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Interval.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Interval.LessThanOrEqual
  nameWithType: Interval.LessThanOrEqual
- uid: Vim.Math3d.Interval.op_Subtraction(Vim.Math3d.Interval,Vim.Math3d.Interval)
  name: Subtraction(Interval, Interval)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Subtraction_Vim_Math3d_Interval_Vim_Math3d_Interval_
  commentId: M:Vim.Math3d.Interval.op_Subtraction(Vim.Math3d.Interval,Vim.Math3d.Interval)
  fullName: Vim.Math3d.Interval.Subtraction(Vim.Math3d.Interval, Vim.Math3d.Interval)
  nameWithType: Interval.Subtraction(Interval, Interval)
- uid: Vim.Math3d.Interval.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_op_Subtraction_
  commentId: Overload:Vim.Math3d.Interval.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Interval.Subtraction
  nameWithType: Interval.Subtraction
- uid: Vim.Math3d.Interval.SetMax(System.Single)
  name: SetMax(Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_SetMax_System_Single_
  commentId: M:Vim.Math3d.Interval.SetMax(System.Single)
  fullName: Vim.Math3d.Interval.SetMax(System.Single)
  nameWithType: Interval.SetMax(Single)
- uid: Vim.Math3d.Interval.SetMax*
  name: SetMax
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_SetMax_
  commentId: Overload:Vim.Math3d.Interval.SetMax
  isSpec: "True"
  fullName: Vim.Math3d.Interval.SetMax
  nameWithType: Interval.SetMax
- uid: Vim.Math3d.Interval.SetMin(System.Single)
  name: SetMin(Single)
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_SetMin_System_Single_
  commentId: M:Vim.Math3d.Interval.SetMin(System.Single)
  fullName: Vim.Math3d.Interval.SetMin(System.Single)
  nameWithType: Interval.SetMin(Single)
- uid: Vim.Math3d.Interval.SetMin*
  name: SetMin
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_SetMin_
  commentId: Overload:Vim.Math3d.Interval.SetMin
  isSpec: "True"
  fullName: Vim.Math3d.Interval.SetMin
  nameWithType: Interval.SetMin
- uid: Vim.Math3d.Interval.ToString
  name: ToString()
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_ToString
  commentId: M:Vim.Math3d.Interval.ToString
  fullName: Vim.Math3d.Interval.ToString()
  nameWithType: Interval.ToString()
- uid: Vim.Math3d.Interval.ToString*
  name: ToString
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_ToString_
  commentId: Overload:Vim.Math3d.Interval.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Interval.ToString
  nameWithType: Interval.ToString
- uid: Vim.Math3d.Interval.Zero
  name: Zero
  href: api/Vim.Math3d.Interval.html#Vim_Math3d_Interval_Zero
  commentId: F:Vim.Math3d.Interval.Zero
  fullName: Vim.Math3d.Interval.Zero
  nameWithType: Interval.Zero
- uid: Vim.Math3d.IPoints
  name: IPoints
  href: api/Vim.Math3d.IPoints.html
  commentId: T:Vim.Math3d.IPoints
  fullName: Vim.Math3d.IPoints
  nameWithType: IPoints
- uid: Vim.Math3d.IPoints.GetPoint(System.Int32)
  name: GetPoint(Int32)
  href: api/Vim.Math3d.IPoints.html#Vim_Math3d_IPoints_GetPoint_System_Int32_
  commentId: M:Vim.Math3d.IPoints.GetPoint(System.Int32)
  fullName: Vim.Math3d.IPoints.GetPoint(System.Int32)
  nameWithType: IPoints.GetPoint(Int32)
- uid: Vim.Math3d.IPoints.GetPoint*
  name: GetPoint
  href: api/Vim.Math3d.IPoints.html#Vim_Math3d_IPoints_GetPoint_
  commentId: Overload:Vim.Math3d.IPoints.GetPoint
  isSpec: "True"
  fullName: Vim.Math3d.IPoints.GetPoint
  nameWithType: IPoints.GetPoint
- uid: Vim.Math3d.IPoints.NumPoints
  name: NumPoints
  href: api/Vim.Math3d.IPoints.html#Vim_Math3d_IPoints_NumPoints
  commentId: P:Vim.Math3d.IPoints.NumPoints
  fullName: Vim.Math3d.IPoints.NumPoints
  nameWithType: IPoints.NumPoints
- uid: Vim.Math3d.IPoints.NumPoints*
  name: NumPoints
  href: api/Vim.Math3d.IPoints.html#Vim_Math3d_IPoints_NumPoints_
  commentId: Overload:Vim.Math3d.IPoints.NumPoints
  isSpec: "True"
  fullName: Vim.Math3d.IPoints.NumPoints
  nameWithType: IPoints.NumPoints
- uid: Vim.Math3d.IPoints2D
  name: IPoints2D
  href: api/Vim.Math3d.IPoints2D.html
  commentId: T:Vim.Math3d.IPoints2D
  fullName: Vim.Math3d.IPoints2D
  nameWithType: IPoints2D
- uid: Vim.Math3d.IPoints2D.GetPoint(System.Int32)
  name: GetPoint(Int32)
  href: api/Vim.Math3d.IPoints2D.html#Vim_Math3d_IPoints2D_GetPoint_System_Int32_
  commentId: M:Vim.Math3d.IPoints2D.GetPoint(System.Int32)
  fullName: Vim.Math3d.IPoints2D.GetPoint(System.Int32)
  nameWithType: IPoints2D.GetPoint(Int32)
- uid: Vim.Math3d.IPoints2D.GetPoint*
  name: GetPoint
  href: api/Vim.Math3d.IPoints2D.html#Vim_Math3d_IPoints2D_GetPoint_
  commentId: Overload:Vim.Math3d.IPoints2D.GetPoint
  isSpec: "True"
  fullName: Vim.Math3d.IPoints2D.GetPoint
  nameWithType: IPoints2D.GetPoint
- uid: Vim.Math3d.IPoints2D.NumPoints
  name: NumPoints
  href: api/Vim.Math3d.IPoints2D.html#Vim_Math3d_IPoints2D_NumPoints
  commentId: P:Vim.Math3d.IPoints2D.NumPoints
  fullName: Vim.Math3d.IPoints2D.NumPoints
  nameWithType: IPoints2D.NumPoints
- uid: Vim.Math3d.IPoints2D.NumPoints*
  name: NumPoints
  href: api/Vim.Math3d.IPoints2D.html#Vim_Math3d_IPoints2D_NumPoints_
  commentId: Overload:Vim.Math3d.IPoints2D.NumPoints
  isSpec: "True"
  fullName: Vim.Math3d.IPoints2D.NumPoints
  nameWithType: IPoints2D.NumPoints
- uid: Vim.Math3d.ITransformable3D`1
  name: ITransformable3D<TSelf>
  href: api/Vim.Math3d.ITransformable3D-1.html
  commentId: T:Vim.Math3d.ITransformable3D`1
  name.vb: ITransformable3D(Of TSelf)
  fullName: Vim.Math3d.ITransformable3D<TSelf>
  fullName.vb: Vim.Math3d.ITransformable3D(Of TSelf)
  nameWithType: ITransformable3D<TSelf>
  nameWithType.vb: ITransformable3D(Of TSelf)
- uid: Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.ITransformable3D-1.html#Vim_Math3d_ITransformable3D_1_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.ITransformable3D<TSelf>.Transform(Vim.Math3d.Matrix4x4)
  fullName.vb: Vim.Math3d.ITransformable3D(Of TSelf).Transform(Vim.Math3d.Matrix4x4)
  nameWithType: ITransformable3D<TSelf>.Transform(Matrix4x4)
  nameWithType.vb: ITransformable3D(Of TSelf).Transform(Matrix4x4)
- uid: Vim.Math3d.ITransformable3D`1.Transform*
  name: Transform
  href: api/Vim.Math3d.ITransformable3D-1.html#Vim_Math3d_ITransformable3D_1_Transform_
  commentId: Overload:Vim.Math3d.ITransformable3D`1.Transform
  isSpec: "True"
  fullName: Vim.Math3d.ITransformable3D<TSelf>.Transform
  fullName.vb: Vim.Math3d.ITransformable3D(Of TSelf).Transform
  nameWithType: ITransformable3D<TSelf>.Transform
  nameWithType.vb: ITransformable3D(Of TSelf).Transform
- uid: Vim.Math3d.Line
  name: Line
  href: api/Vim.Math3d.Line.html
  commentId: T:Vim.Math3d.Line
  fullName: Vim.Math3d.Line
  nameWithType: Line
- uid: Vim.Math3d.Line.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Line((Vector3 a, Vector3 b))
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line__ctor_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Line.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Line((a As Vector3, b As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.Line.Line(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Line.Line(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Line.Line((Vector3 a, Vector3 b))
  nameWithType.vb: Line.Line((a As Vector3, b As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.Line.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Line(Vector3, Vector3)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line__ctor_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Line.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Line.Line(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Line.Line(Vector3, Vector3)
- uid: Vim.Math3d.Line.#ctor*
  name: Line
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line__ctor_
  commentId: Overload:Vim.Math3d.Line.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Line.Line
  nameWithType: Line.Line
- uid: Vim.Math3d.Line.A
  name: A
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_A
  commentId: F:Vim.Math3d.Line.A
  fullName: Vim.Math3d.Line.A
  nameWithType: Line.A
- uid: Vim.Math3d.Line.AlmostEquals(Vim.Math3d.Line,System.Single)
  name: AlmostEquals(Line, Single)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_AlmostEquals_Vim_Math3d_Line_System_Single_
  commentId: M:Vim.Math3d.Line.AlmostEquals(Vim.Math3d.Line,System.Single)
  fullName: Vim.Math3d.Line.AlmostEquals(Vim.Math3d.Line, System.Single)
  nameWithType: Line.AlmostEquals(Line, Single)
- uid: Vim.Math3d.Line.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_AlmostEquals_
  commentId: Overload:Vim.Math3d.Line.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Line.AlmostEquals
  nameWithType: Line.AlmostEquals
- uid: Vim.Math3d.Line.B
  name: B
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_B
  commentId: F:Vim.Math3d.Line.B
  fullName: Vim.Math3d.Line.B
  nameWithType: Line.B
- uid: Vim.Math3d.Line.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Create((Vector3 a, Vector3 b))
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Create_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Line.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Create((a As Vector3, b As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.Line.Create(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Line.Create(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Line.Create((Vector3 a, Vector3 b))
  nameWithType.vb: Line.Create((a As Vector3, b As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.Line.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Create(Vector3, Vector3)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Create_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Line.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Line.Create(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Line.Create(Vector3, Vector3)
- uid: Vim.Math3d.Line.Create*
  name: Create
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Create_
  commentId: Overload:Vim.Math3d.Line.Create
  isSpec: "True"
  fullName: Vim.Math3d.Line.Create
  nameWithType: Line.Create
- uid: Vim.Math3d.Line.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name: Deconstruct(out Vector3, out Vector3)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Deconstruct_Vim_Math3d_Vector3__Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Line.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Vector3)
  fullName: Vim.Math3d.Line.Deconstruct(out Vim.Math3d.Vector3, out Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Line.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3)
  nameWithType: Line.Deconstruct(out Vector3, out Vector3)
  nameWithType.vb: Line.Deconstruct(ByRef Vector3, ByRef Vector3)
- uid: Vim.Math3d.Line.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Deconstruct_
  commentId: Overload:Vim.Math3d.Line.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Line.Deconstruct
  nameWithType: Line.Deconstruct
- uid: Vim.Math3d.Line.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Equals_System_Object_
  commentId: M:Vim.Math3d.Line.Equals(System.Object)
  fullName: Vim.Math3d.Line.Equals(System.Object)
  nameWithType: Line.Equals(Object)
- uid: Vim.Math3d.Line.Equals(Vim.Math3d.Line)
  name: Equals(Line)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Equals_Vim_Math3d_Line_
  commentId: M:Vim.Math3d.Line.Equals(Vim.Math3d.Line)
  fullName: Vim.Math3d.Line.Equals(Vim.Math3d.Line)
  nameWithType: Line.Equals(Line)
- uid: Vim.Math3d.Line.Equals*
  name: Equals
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Equals_
  commentId: Overload:Vim.Math3d.Line.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Line.Equals
  nameWithType: Line.Equals
- uid: Vim.Math3d.Line.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_GetHashCode
  commentId: M:Vim.Math3d.Line.GetHashCode
  fullName: Vim.Math3d.Line.GetHashCode()
  nameWithType: Line.GetHashCode()
- uid: Vim.Math3d.Line.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_GetHashCode_
  commentId: Overload:Vim.Math3d.Line.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Line.GetHashCode
  nameWithType: Line.GetHashCode
- uid: Vim.Math3d.Line.GetPoint(System.Int32)
  name: GetPoint(Int32)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_GetPoint_System_Int32_
  commentId: M:Vim.Math3d.Line.GetPoint(System.Int32)
  fullName: Vim.Math3d.Line.GetPoint(System.Int32)
  nameWithType: Line.GetPoint(Int32)
- uid: Vim.Math3d.Line.GetPoint*
  name: GetPoint
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_GetPoint_
  commentId: Overload:Vim.Math3d.Line.GetPoint
  isSpec: "True"
  fullName: Vim.Math3d.Line.GetPoint
  nameWithType: Line.GetPoint
- uid: Vim.Math3d.Line.Inverse
  name: Inverse
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Inverse
  commentId: P:Vim.Math3d.Line.Inverse
  fullName: Vim.Math3d.Line.Inverse
  nameWithType: Line.Inverse
- uid: Vim.Math3d.Line.Inverse*
  name: Inverse
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Inverse_
  commentId: Overload:Vim.Math3d.Line.Inverse
  isSpec: "True"
  fullName: Vim.Math3d.Line.Inverse
  nameWithType: Line.Inverse
- uid: Vim.Math3d.Line.Length
  name: Length
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Length
  commentId: P:Vim.Math3d.Line.Length
  fullName: Vim.Math3d.Line.Length
  nameWithType: Line.Length
- uid: Vim.Math3d.Line.Length*
  name: Length
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Length_
  commentId: Overload:Vim.Math3d.Line.Length
  isSpec: "True"
  fullName: Vim.Math3d.Line.Length
  nameWithType: Line.Length
- uid: Vim.Math3d.Line.LengthSquared
  name: LengthSquared
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_LengthSquared
  commentId: P:Vim.Math3d.Line.LengthSquared
  fullName: Vim.Math3d.Line.LengthSquared
  nameWithType: Line.LengthSquared
- uid: Vim.Math3d.Line.LengthSquared*
  name: LengthSquared
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_LengthSquared_
  commentId: Overload:Vim.Math3d.Line.LengthSquared
  isSpec: "True"
  fullName: Vim.Math3d.Line.LengthSquared
  nameWithType: Line.LengthSquared
- uid: Vim.Math3d.Line.Lerp(System.Single)
  name: Lerp(Single)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Lerp_System_Single_
  commentId: M:Vim.Math3d.Line.Lerp(System.Single)
  fullName: Vim.Math3d.Line.Lerp(System.Single)
  nameWithType: Line.Lerp(Single)
- uid: Vim.Math3d.Line.Lerp*
  name: Lerp
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Lerp_
  commentId: Overload:Vim.Math3d.Line.Lerp
  isSpec: "True"
  fullName: Vim.Math3d.Line.Lerp
  nameWithType: Line.Lerp
- uid: Vim.Math3d.Line.Map(System.Func{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Map(Func<Vector3, Vector3>)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Map_System_Func_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Line.Map(System.Func{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Map(Func(Of Vector3, Vector3))
  fullName: Vim.Math3d.Line.Map(System.Func<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Line.Map(System.Func(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Line.Map(Func<Vector3, Vector3>)
  nameWithType.vb: Line.Map(Func(Of Vector3, Vector3))
- uid: Vim.Math3d.Line.Map*
  name: Map
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Map_
  commentId: Overload:Vim.Math3d.Line.Map
  isSpec: "True"
  fullName: Vim.Math3d.Line.Map
  nameWithType: Line.Map
- uid: Vim.Math3d.Line.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_MaxValue
  commentId: F:Vim.Math3d.Line.MaxValue
  fullName: Vim.Math3d.Line.MaxValue
  nameWithType: Line.MaxValue
- uid: Vim.Math3d.Line.MidPoint
  name: MidPoint
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_MidPoint
  commentId: P:Vim.Math3d.Line.MidPoint
  fullName: Vim.Math3d.Line.MidPoint
  nameWithType: Line.MidPoint
- uid: Vim.Math3d.Line.MidPoint*
  name: MidPoint
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_MidPoint_
  commentId: Overload:Vim.Math3d.Line.MidPoint
  isSpec: "True"
  fullName: Vim.Math3d.Line.MidPoint
  nameWithType: Line.MidPoint
- uid: Vim.Math3d.Line.MinValue
  name: MinValue
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_MinValue
  commentId: F:Vim.Math3d.Line.MinValue
  fullName: Vim.Math3d.Line.MinValue
  nameWithType: Line.MinValue
- uid: Vim.Math3d.Line.Normal
  name: Normal
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Normal
  commentId: P:Vim.Math3d.Line.Normal
  fullName: Vim.Math3d.Line.Normal
  nameWithType: Line.Normal
- uid: Vim.Math3d.Line.Normal*
  name: Normal
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Normal_
  commentId: Overload:Vim.Math3d.Line.Normal
  isSpec: "True"
  fullName: Vim.Math3d.Line.Normal
  nameWithType: Line.Normal
- uid: Vim.Math3d.Line.NumPoints
  name: NumPoints
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_NumPoints
  commentId: P:Vim.Math3d.Line.NumPoints
  fullName: Vim.Math3d.Line.NumPoints
  nameWithType: Line.NumPoints
- uid: Vim.Math3d.Line.NumPoints*
  name: NumPoints
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_NumPoints_
  commentId: Overload:Vim.Math3d.Line.NumPoints
  isSpec: "True"
  fullName: Vim.Math3d.Line.NumPoints
  nameWithType: Line.NumPoints
- uid: Vim.Math3d.Line.op_Equality(Vim.Math3d.Line,Vim.Math3d.Line)
  name: Equality(Line, Line)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_op_Equality_Vim_Math3d_Line_Vim_Math3d_Line_
  commentId: M:Vim.Math3d.Line.op_Equality(Vim.Math3d.Line,Vim.Math3d.Line)
  fullName: Vim.Math3d.Line.Equality(Vim.Math3d.Line, Vim.Math3d.Line)
  nameWithType: Line.Equality(Line, Line)
- uid: Vim.Math3d.Line.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_op_Equality_
  commentId: Overload:Vim.Math3d.Line.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Line.Equality
  nameWithType: Line.Equality
- uid: Vim.Math3d.Line.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Line
  name: Implicit((Vector3 a, Vector3 b) to Line)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3___Vim_Math3d_Line
  commentId: M:Vim.Math3d.Line.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Line
  name.vb: Widening((a As Vector3, b As Vector3)(Of Vector3, Vector3) to Line)
  fullName: Vim.Math3d.Line.Implicit(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3> to Vim.Math3d.Line)
  fullName.vb: Vim.Math3d.Line.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3) to Vim.Math3d.Line)
  nameWithType: Line.Implicit((Vector3 a, Vector3 b) to Line)
  nameWithType.vb: Line.Widening((a As Vector3, b As Vector3)(Of Vector3, Vector3) to Line)
- uid: Vim.Math3d.Line.op_Implicit(Vim.Math3d.Line)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name: Implicit(Line to (Vector3 a, Vector3 b))
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_op_Implicit_Vim_Math3d_Line__System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Line.op_Implicit(Vim.Math3d.Line)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name.vb: Widening(Line to (a As Vector3, b As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.Line.Implicit(Vim.Math3d.Line to System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Line.Widening(Vim.Math3d.Line to System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Line.Implicit(Line to (Vector3 a, Vector3 b))
  nameWithType.vb: Line.Widening(Line to (a As Vector3, b As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.Line.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_op_Implicit_
  commentId: Overload:Vim.Math3d.Line.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Line.Implicit
  fullName.vb: Vim.Math3d.Line.Widening
  nameWithType: Line.Implicit
  nameWithType.vb: Line.Widening
- uid: Vim.Math3d.Line.op_Inequality(Vim.Math3d.Line,Vim.Math3d.Line)
  name: Inequality(Line, Line)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_op_Inequality_Vim_Math3d_Line_Vim_Math3d_Line_
  commentId: M:Vim.Math3d.Line.op_Inequality(Vim.Math3d.Line,Vim.Math3d.Line)
  fullName: Vim.Math3d.Line.Inequality(Vim.Math3d.Line, Vim.Math3d.Line)
  nameWithType: Line.Inequality(Line, Line)
- uid: Vim.Math3d.Line.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_op_Inequality_
  commentId: Overload:Vim.Math3d.Line.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Line.Inequality
  nameWithType: Line.Inequality
- uid: Vim.Math3d.Line.Ray
  name: Ray
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Ray
  commentId: P:Vim.Math3d.Line.Ray
  fullName: Vim.Math3d.Line.Ray
  nameWithType: Line.Ray
- uid: Vim.Math3d.Line.Ray*
  name: Ray
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Ray_
  commentId: Overload:Vim.Math3d.Line.Ray
  isSpec: "True"
  fullName: Vim.Math3d.Line.Ray
  nameWithType: Line.Ray
- uid: Vim.Math3d.Line.SetA(Vim.Math3d.Vector3)
  name: SetA(Vector3)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_SetA_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Line.SetA(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Line.SetA(Vim.Math3d.Vector3)
  nameWithType: Line.SetA(Vector3)
- uid: Vim.Math3d.Line.SetA*
  name: SetA
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_SetA_
  commentId: Overload:Vim.Math3d.Line.SetA
  isSpec: "True"
  fullName: Vim.Math3d.Line.SetA
  nameWithType: Line.SetA
- uid: Vim.Math3d.Line.SetB(Vim.Math3d.Vector3)
  name: SetB(Vector3)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_SetB_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Line.SetB(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Line.SetB(Vim.Math3d.Vector3)
  nameWithType: Line.SetB(Vector3)
- uid: Vim.Math3d.Line.SetB*
  name: SetB
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_SetB_
  commentId: Overload:Vim.Math3d.Line.SetB
  isSpec: "True"
  fullName: Vim.Math3d.Line.SetB
  nameWithType: Line.SetB
- uid: Vim.Math3d.Line.SetLength(System.Single)
  name: SetLength(Single)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_SetLength_System_Single_
  commentId: M:Vim.Math3d.Line.SetLength(System.Single)
  fullName: Vim.Math3d.Line.SetLength(System.Single)
  nameWithType: Line.SetLength(Single)
- uid: Vim.Math3d.Line.SetLength*
  name: SetLength
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_SetLength_
  commentId: Overload:Vim.Math3d.Line.SetLength
  isSpec: "True"
  fullName: Vim.Math3d.Line.SetLength
  nameWithType: Line.SetLength
- uid: Vim.Math3d.Line.ToString
  name: ToString()
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_ToString
  commentId: M:Vim.Math3d.Line.ToString
  fullName: Vim.Math3d.Line.ToString()
  nameWithType: Line.ToString()
- uid: Vim.Math3d.Line.ToString*
  name: ToString
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_ToString_
  commentId: Overload:Vim.Math3d.Line.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Line.ToString
  nameWithType: Line.ToString
- uid: Vim.Math3d.Line.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Line.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Line.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Line.Transform(Matrix4x4)
- uid: Vim.Math3d.Line.Transform*
  name: Transform
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Transform_
  commentId: Overload:Vim.Math3d.Line.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Line.Transform
  nameWithType: Line.Transform
- uid: Vim.Math3d.Line.Vector
  name: Vector
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Vector
  commentId: P:Vim.Math3d.Line.Vector
  fullName: Vim.Math3d.Line.Vector
  nameWithType: Line.Vector
- uid: Vim.Math3d.Line.Vector*
  name: Vector
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Vector_
  commentId: Overload:Vim.Math3d.Line.Vector
  isSpec: "True"
  fullName: Vim.Math3d.Line.Vector
  nameWithType: Line.Vector
- uid: Vim.Math3d.Line.Zero
  name: Zero
  href: api/Vim.Math3d.Line.html#Vim_Math3d_Line_Zero
  commentId: F:Vim.Math3d.Line.Zero
  fullName: Vim.Math3d.Line.Zero
  nameWithType: Line.Zero
- uid: Vim.Math3d.Line2D
  name: Line2D
  href: api/Vim.Math3d.Line2D.html
  commentId: T:Vim.Math3d.Line2D
  fullName: Vim.Math3d.Line2D
  nameWithType: Line2D
- uid: Vim.Math3d.Line2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: Line2D((Vector2 a, Vector2 b))
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D__ctor_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Line2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: Line2D((a As Vector2, b As Vector2)(Of Vector2, Vector2))
  fullName: Vim.Math3d.Line2D.Line2D(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Line2D.Line2D(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Line2D.Line2D((Vector2 a, Vector2 b))
  nameWithType.vb: Line2D.Line2D((a As Vector2, b As Vector2)(Of Vector2, Vector2))
- uid: Vim.Math3d.Line2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Line2D(Vector2, Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D__ctor_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Line2D.Line2D(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Line2D.Line2D(Vector2, Vector2)
- uid: Vim.Math3d.Line2D.#ctor*
  name: Line2D
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D__ctor_
  commentId: Overload:Vim.Math3d.Line2D.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.Line2D
  nameWithType: Line2D.Line2D
- uid: Vim.Math3d.Line2D.A
  name: A
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_A
  commentId: F:Vim.Math3d.Line2D.A
  fullName: Vim.Math3d.Line2D.A
  nameWithType: Line2D.A
- uid: Vim.Math3d.Line2D.AlmostEquals(Vim.Math3d.Line2D,System.Single)
  name: AlmostEquals(Line2D, Single)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_AlmostEquals_Vim_Math3d_Line2D_System_Single_
  commentId: M:Vim.Math3d.Line2D.AlmostEquals(Vim.Math3d.Line2D,System.Single)
  fullName: Vim.Math3d.Line2D.AlmostEquals(Vim.Math3d.Line2D, System.Single)
  nameWithType: Line2D.AlmostEquals(Line2D, Single)
- uid: Vim.Math3d.Line2D.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_AlmostEquals_
  commentId: Overload:Vim.Math3d.Line2D.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.AlmostEquals
  nameWithType: Line2D.AlmostEquals
- uid: Vim.Math3d.Line2D.B
  name: B
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_B
  commentId: F:Vim.Math3d.Line2D.B
  fullName: Vim.Math3d.Line2D.B
  nameWithType: Line2D.B
- uid: Vim.Math3d.Line2D.BoundingBox
  name: BoundingBox()
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_BoundingBox
  commentId: M:Vim.Math3d.Line2D.BoundingBox
  fullName: Vim.Math3d.Line2D.BoundingBox()
  nameWithType: Line2D.BoundingBox()
- uid: Vim.Math3d.Line2D.BoundingBox*
  name: BoundingBox
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_BoundingBox_
  commentId: Overload:Vim.Math3d.Line2D.BoundingBox
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.BoundingBox
  nameWithType: Line2D.BoundingBox
- uid: Vim.Math3d.Line2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: Create((Vector2 a, Vector2 b))
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Create_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Line2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: Create((a As Vector2, b As Vector2)(Of Vector2, Vector2))
  fullName: Vim.Math3d.Line2D.Create(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Line2D.Create(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Line2D.Create((Vector2 a, Vector2 b))
  nameWithType.vb: Line2D.Create((a As Vector2, b As Vector2)(Of Vector2, Vector2))
- uid: Vim.Math3d.Line2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Create(Vector2, Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Create_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Line2D.Create(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Line2D.Create(Vector2, Vector2)
- uid: Vim.Math3d.Line2D.Create*
  name: Create
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Create_
  commentId: Overload:Vim.Math3d.Line2D.Create
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.Create
  nameWithType: Line2D.Create
- uid: Vim.Math3d.Line2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name: Deconstruct(out Vector2, out Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Deconstruct_Vim_Math3d_Vector2__Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Line2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name.vb: Deconstruct(ByRef Vector2, ByRef Vector2)
  fullName: Vim.Math3d.Line2D.Deconstruct(out Vim.Math3d.Vector2, out Vim.Math3d.Vector2)
  fullName.vb: Vim.Math3d.Line2D.Deconstruct(ByRef Vim.Math3d.Vector2, ByRef Vim.Math3d.Vector2)
  nameWithType: Line2D.Deconstruct(out Vector2, out Vector2)
  nameWithType.vb: Line2D.Deconstruct(ByRef Vector2, ByRef Vector2)
- uid: Vim.Math3d.Line2D.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Deconstruct_
  commentId: Overload:Vim.Math3d.Line2D.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.Deconstruct
  nameWithType: Line2D.Deconstruct
- uid: Vim.Math3d.Line2D.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Equals_System_Object_
  commentId: M:Vim.Math3d.Line2D.Equals(System.Object)
  fullName: Vim.Math3d.Line2D.Equals(System.Object)
  nameWithType: Line2D.Equals(Object)
- uid: Vim.Math3d.Line2D.Equals(Vim.Math3d.Line2D)
  name: Equals(Line2D)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Equals_Vim_Math3d_Line2D_
  commentId: M:Vim.Math3d.Line2D.Equals(Vim.Math3d.Line2D)
  fullName: Vim.Math3d.Line2D.Equals(Vim.Math3d.Line2D)
  nameWithType: Line2D.Equals(Line2D)
- uid: Vim.Math3d.Line2D.Equals*
  name: Equals
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Equals_
  commentId: Overload:Vim.Math3d.Line2D.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.Equals
  nameWithType: Line2D.Equals
- uid: Vim.Math3d.Line2D.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_GetHashCode
  commentId: M:Vim.Math3d.Line2D.GetHashCode
  fullName: Vim.Math3d.Line2D.GetHashCode()
  nameWithType: Line2D.GetHashCode()
- uid: Vim.Math3d.Line2D.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_GetHashCode_
  commentId: Overload:Vim.Math3d.Line2D.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.GetHashCode
  nameWithType: Line2D.GetHashCode
- uid: Vim.Math3d.Line2D.Intersects(Vim.Math3d.AABox2D,Vim.Math3d.Line2D,Vim.Math3d.AABox2D)
  name: Intersects(AABox2D, Line2D, AABox2D)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Intersects_Vim_Math3d_AABox2D_Vim_Math3d_Line2D_Vim_Math3d_AABox2D_
  commentId: M:Vim.Math3d.Line2D.Intersects(Vim.Math3d.AABox2D,Vim.Math3d.Line2D,Vim.Math3d.AABox2D)
  fullName: Vim.Math3d.Line2D.Intersects(Vim.Math3d.AABox2D, Vim.Math3d.Line2D, Vim.Math3d.AABox2D)
  nameWithType: Line2D.Intersects(AABox2D, Line2D, AABox2D)
- uid: Vim.Math3d.Line2D.Intersects(Vim.Math3d.Line2D)
  name: Intersects(Line2D)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Intersects_Vim_Math3d_Line2D_
  commentId: M:Vim.Math3d.Line2D.Intersects(Vim.Math3d.Line2D)
  fullName: Vim.Math3d.Line2D.Intersects(Vim.Math3d.Line2D)
  nameWithType: Line2D.Intersects(Line2D)
- uid: Vim.Math3d.Line2D.Intersects*
  name: Intersects
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Intersects_
  commentId: Overload:Vim.Math3d.Line2D.Intersects
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.Intersects
  nameWithType: Line2D.Intersects
- uid: Vim.Math3d.Line2D.IsPointOnLine(Vim.Math3d.Vector2)
  name: IsPointOnLine(Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_IsPointOnLine_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.IsPointOnLine(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Line2D.IsPointOnLine(Vim.Math3d.Vector2)
  nameWithType: Line2D.IsPointOnLine(Vector2)
- uid: Vim.Math3d.Line2D.IsPointOnLine*
  name: IsPointOnLine
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_IsPointOnLine_
  commentId: Overload:Vim.Math3d.Line2D.IsPointOnLine
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.IsPointOnLine
  nameWithType: Line2D.IsPointOnLine
- uid: Vim.Math3d.Line2D.IsPointRightOfLine(Vim.Math3d.Vector2)
  name: IsPointRightOfLine(Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_IsPointRightOfLine_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.IsPointRightOfLine(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Line2D.IsPointRightOfLine(Vim.Math3d.Vector2)
  nameWithType: Line2D.IsPointRightOfLine(Vector2)
- uid: Vim.Math3d.Line2D.IsPointRightOfLine*
  name: IsPointRightOfLine
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_IsPointRightOfLine_
  commentId: Overload:Vim.Math3d.Line2D.IsPointRightOfLine
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.IsPointRightOfLine
  nameWithType: Line2D.IsPointRightOfLine
- uid: Vim.Math3d.Line2D.LinePointCrossProduct(Vim.Math3d.Vector2)
  name: LinePointCrossProduct(Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_LinePointCrossProduct_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.LinePointCrossProduct(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Line2D.LinePointCrossProduct(Vim.Math3d.Vector2)
  nameWithType: Line2D.LinePointCrossProduct(Vector2)
- uid: Vim.Math3d.Line2D.LinePointCrossProduct*
  name: LinePointCrossProduct
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_LinePointCrossProduct_
  commentId: Overload:Vim.Math3d.Line2D.LinePointCrossProduct
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.LinePointCrossProduct
  nameWithType: Line2D.LinePointCrossProduct
- uid: Vim.Math3d.Line2D.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_MaxValue
  commentId: F:Vim.Math3d.Line2D.MaxValue
  fullName: Vim.Math3d.Line2D.MaxValue
  nameWithType: Line2D.MaxValue
- uid: Vim.Math3d.Line2D.MinValue
  name: MinValue
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_MinValue
  commentId: F:Vim.Math3d.Line2D.MinValue
  fullName: Vim.Math3d.Line2D.MinValue
  nameWithType: Line2D.MinValue
- uid: Vim.Math3d.Line2D.op_Equality(Vim.Math3d.Line2D,Vim.Math3d.Line2D)
  name: Equality(Line2D, Line2D)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_op_Equality_Vim_Math3d_Line2D_Vim_Math3d_Line2D_
  commentId: M:Vim.Math3d.Line2D.op_Equality(Vim.Math3d.Line2D,Vim.Math3d.Line2D)
  fullName: Vim.Math3d.Line2D.Equality(Vim.Math3d.Line2D, Vim.Math3d.Line2D)
  nameWithType: Line2D.Equality(Line2D, Line2D)
- uid: Vim.Math3d.Line2D.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_op_Equality_
  commentId: Overload:Vim.Math3d.Line2D.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.Equality
  nameWithType: Line2D.Equality
- uid: Vim.Math3d.Line2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.Line2D
  name: Implicit((Vector2 a, Vector2 b) to Line2D)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_op_Implicit_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2___Vim_Math3d_Line2D
  commentId: M:Vim.Math3d.Line2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.Line2D
  name.vb: Widening((a As Vector2, b As Vector2)(Of Vector2, Vector2) to Line2D)
  fullName: Vim.Math3d.Line2D.Implicit(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2> to Vim.Math3d.Line2D)
  fullName.vb: Vim.Math3d.Line2D.Widening(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2) to Vim.Math3d.Line2D)
  nameWithType: Line2D.Implicit((Vector2 a, Vector2 b) to Line2D)
  nameWithType.vb: Line2D.Widening((a As Vector2, b As Vector2)(Of Vector2, Vector2) to Line2D)
- uid: Vim.Math3d.Line2D.op_Implicit(Vim.Math3d.Line2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name: Implicit(Line2D to (Vector2 a, Vector2 b))
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_op_Implicit_Vim_Math3d_Line2D__System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.op_Implicit(Vim.Math3d.Line2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name.vb: Widening(Line2D to (a As Vector2, b As Vector2)(Of Vector2, Vector2))
  fullName: Vim.Math3d.Line2D.Implicit(Vim.Math3d.Line2D to System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Line2D.Widening(Vim.Math3d.Line2D to System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Line2D.Implicit(Line2D to (Vector2 a, Vector2 b))
  nameWithType.vb: Line2D.Widening(Line2D to (a As Vector2, b As Vector2)(Of Vector2, Vector2))
- uid: Vim.Math3d.Line2D.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_op_Implicit_
  commentId: Overload:Vim.Math3d.Line2D.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Line2D.Implicit
  fullName.vb: Vim.Math3d.Line2D.Widening
  nameWithType: Line2D.Implicit
  nameWithType.vb: Line2D.Widening
- uid: Vim.Math3d.Line2D.op_Inequality(Vim.Math3d.Line2D,Vim.Math3d.Line2D)
  name: Inequality(Line2D, Line2D)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_op_Inequality_Vim_Math3d_Line2D_Vim_Math3d_Line2D_
  commentId: M:Vim.Math3d.Line2D.op_Inequality(Vim.Math3d.Line2D,Vim.Math3d.Line2D)
  fullName: Vim.Math3d.Line2D.Inequality(Vim.Math3d.Line2D, Vim.Math3d.Line2D)
  nameWithType: Line2D.Inequality(Line2D, Line2D)
- uid: Vim.Math3d.Line2D.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_op_Inequality_
  commentId: Overload:Vim.Math3d.Line2D.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.Inequality
  nameWithType: Line2D.Inequality
- uid: Vim.Math3d.Line2D.SetA(Vim.Math3d.Vector2)
  name: SetA(Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_SetA_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.SetA(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Line2D.SetA(Vim.Math3d.Vector2)
  nameWithType: Line2D.SetA(Vector2)
- uid: Vim.Math3d.Line2D.SetA*
  name: SetA
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_SetA_
  commentId: Overload:Vim.Math3d.Line2D.SetA
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.SetA
  nameWithType: Line2D.SetA
- uid: Vim.Math3d.Line2D.SetB(Vim.Math3d.Vector2)
  name: SetB(Vector2)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_SetB_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Line2D.SetB(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Line2D.SetB(Vim.Math3d.Vector2)
  nameWithType: Line2D.SetB(Vector2)
- uid: Vim.Math3d.Line2D.SetB*
  name: SetB
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_SetB_
  commentId: Overload:Vim.Math3d.Line2D.SetB
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.SetB
  nameWithType: Line2D.SetB
- uid: Vim.Math3d.Line2D.ToString
  name: ToString()
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_ToString
  commentId: M:Vim.Math3d.Line2D.ToString
  fullName: Vim.Math3d.Line2D.ToString()
  nameWithType: Line2D.ToString()
- uid: Vim.Math3d.Line2D.ToString*
  name: ToString
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_ToString_
  commentId: Overload:Vim.Math3d.Line2D.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.ToString
  nameWithType: Line2D.ToString
- uid: Vim.Math3d.Line2D.TouchesOrCrosses(Vim.Math3d.Line2D)
  name: TouchesOrCrosses(Line2D)
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_TouchesOrCrosses_Vim_Math3d_Line2D_
  commentId: M:Vim.Math3d.Line2D.TouchesOrCrosses(Vim.Math3d.Line2D)
  fullName: Vim.Math3d.Line2D.TouchesOrCrosses(Vim.Math3d.Line2D)
  nameWithType: Line2D.TouchesOrCrosses(Line2D)
- uid: Vim.Math3d.Line2D.TouchesOrCrosses*
  name: TouchesOrCrosses
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_TouchesOrCrosses_
  commentId: Overload:Vim.Math3d.Line2D.TouchesOrCrosses
  isSpec: "True"
  fullName: Vim.Math3d.Line2D.TouchesOrCrosses
  nameWithType: Line2D.TouchesOrCrosses
- uid: Vim.Math3d.Line2D.Zero
  name: Zero
  href: api/Vim.Math3d.Line2D.html#Vim_Math3d_Line2D_Zero
  commentId: F:Vim.Math3d.Line2D.Zero
  fullName: Vim.Math3d.Line2D.Zero
  nameWithType: Line2D.Zero
- uid: Vim.Math3d.LinearMotion
  name: LinearMotion
  href: api/Vim.Math3d.LinearMotion.html
  commentId: T:Vim.Math3d.LinearMotion
  fullName: Vim.Math3d.LinearMotion
  nameWithType: LinearMotion
- uid: Vim.Math3d.LinearMotion.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single})
  name: LinearMotion((Vector3 velocity, Vector3 acceleration, Single friction))
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion__ctor_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single__
  commentId: M:Vim.Math3d.LinearMotion.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single})
  name.vb: LinearMotion((velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single))
  fullName: Vim.Math3d.LinearMotion.LinearMotion(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.LinearMotion.LinearMotion(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single))
  nameWithType: LinearMotion.LinearMotion((Vector3 velocity, Vector3 acceleration, Single friction))
  nameWithType.vb: LinearMotion.LinearMotion((velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single))
- uid: Vim.Math3d.LinearMotion.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: LinearMotion(Vector3, Vector3, Single)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion__ctor_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.LinearMotion.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.LinearMotion.LinearMotion(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: LinearMotion.LinearMotion(Vector3, Vector3, Single)
- uid: Vim.Math3d.LinearMotion.#ctor*
  name: LinearMotion
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion__ctor_
  commentId: Overload:Vim.Math3d.LinearMotion.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.LinearMotion
  nameWithType: LinearMotion.LinearMotion
- uid: Vim.Math3d.LinearMotion.Acceleration
  name: Acceleration
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Acceleration
  commentId: F:Vim.Math3d.LinearMotion.Acceleration
  fullName: Vim.Math3d.LinearMotion.Acceleration
  nameWithType: LinearMotion.Acceleration
- uid: Vim.Math3d.LinearMotion.AlmostEquals(Vim.Math3d.LinearMotion,System.Single)
  name: AlmostEquals(LinearMotion, Single)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_AlmostEquals_Vim_Math3d_LinearMotion_System_Single_
  commentId: M:Vim.Math3d.LinearMotion.AlmostEquals(Vim.Math3d.LinearMotion,System.Single)
  fullName: Vim.Math3d.LinearMotion.AlmostEquals(Vim.Math3d.LinearMotion, System.Single)
  nameWithType: LinearMotion.AlmostEquals(LinearMotion, Single)
- uid: Vim.Math3d.LinearMotion.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_AlmostEquals_
  commentId: Overload:Vim.Math3d.LinearMotion.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.AlmostEquals
  nameWithType: LinearMotion.AlmostEquals
- uid: Vim.Math3d.LinearMotion.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single})
  name: Create((Vector3 velocity, Vector3 acceleration, Single friction))
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Create_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single__
  commentId: M:Vim.Math3d.LinearMotion.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single})
  name.vb: Create((velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single))
  fullName: Vim.Math3d.LinearMotion.Create(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.LinearMotion.Create(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single))
  nameWithType: LinearMotion.Create((Vector3 velocity, Vector3 acceleration, Single friction))
  nameWithType.vb: LinearMotion.Create((velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single))
- uid: Vim.Math3d.LinearMotion.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Create(Vector3, Vector3, Single)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Create_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.LinearMotion.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.LinearMotion.Create(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: LinearMotion.Create(Vector3, Vector3, Single)
- uid: Vim.Math3d.LinearMotion.Create*
  name: Create
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Create_
  commentId: Overload:Vim.Math3d.LinearMotion.Create
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.Create
  nameWithType: LinearMotion.Create
- uid: Vim.Math3d.LinearMotion.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,System.Single@)
  name: Deconstruct(out Vector3, out Vector3, out Single)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Deconstruct_Vim_Math3d_Vector3__Vim_Math3d_Vector3__System_Single__
  commentId: M:Vim.Math3d.LinearMotion.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,System.Single@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Vector3, ByRef Single)
  fullName: Vim.Math3d.LinearMotion.Deconstruct(out Vim.Math3d.Vector3, out Vim.Math3d.Vector3, out System.Single)
  fullName.vb: Vim.Math3d.LinearMotion.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3, ByRef System.Single)
  nameWithType: LinearMotion.Deconstruct(out Vector3, out Vector3, out Single)
  nameWithType.vb: LinearMotion.Deconstruct(ByRef Vector3, ByRef Vector3, ByRef Single)
- uid: Vim.Math3d.LinearMotion.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Deconstruct_
  commentId: Overload:Vim.Math3d.LinearMotion.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.Deconstruct
  nameWithType: LinearMotion.Deconstruct
- uid: Vim.Math3d.LinearMotion.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Equals_System_Object_
  commentId: M:Vim.Math3d.LinearMotion.Equals(System.Object)
  fullName: Vim.Math3d.LinearMotion.Equals(System.Object)
  nameWithType: LinearMotion.Equals(Object)
- uid: Vim.Math3d.LinearMotion.Equals(Vim.Math3d.LinearMotion)
  name: Equals(LinearMotion)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Equals_Vim_Math3d_LinearMotion_
  commentId: M:Vim.Math3d.LinearMotion.Equals(Vim.Math3d.LinearMotion)
  fullName: Vim.Math3d.LinearMotion.Equals(Vim.Math3d.LinearMotion)
  nameWithType: LinearMotion.Equals(LinearMotion)
- uid: Vim.Math3d.LinearMotion.Equals*
  name: Equals
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Equals_
  commentId: Overload:Vim.Math3d.LinearMotion.Equals
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.Equals
  nameWithType: LinearMotion.Equals
- uid: Vim.Math3d.LinearMotion.Friction
  name: Friction
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Friction
  commentId: F:Vim.Math3d.LinearMotion.Friction
  fullName: Vim.Math3d.LinearMotion.Friction
  nameWithType: LinearMotion.Friction
- uid: Vim.Math3d.LinearMotion.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_GetHashCode
  commentId: M:Vim.Math3d.LinearMotion.GetHashCode
  fullName: Vim.Math3d.LinearMotion.GetHashCode()
  nameWithType: LinearMotion.GetHashCode()
- uid: Vim.Math3d.LinearMotion.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_GetHashCode_
  commentId: Overload:Vim.Math3d.LinearMotion.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.GetHashCode
  nameWithType: LinearMotion.GetHashCode
- uid: Vim.Math3d.LinearMotion.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_MaxValue
  commentId: F:Vim.Math3d.LinearMotion.MaxValue
  fullName: Vim.Math3d.LinearMotion.MaxValue
  nameWithType: LinearMotion.MaxValue
- uid: Vim.Math3d.LinearMotion.MinValue
  name: MinValue
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_MinValue
  commentId: F:Vim.Math3d.LinearMotion.MinValue
  fullName: Vim.Math3d.LinearMotion.MinValue
  nameWithType: LinearMotion.MinValue
- uid: Vim.Math3d.LinearMotion.op_Equality(Vim.Math3d.LinearMotion,Vim.Math3d.LinearMotion)
  name: Equality(LinearMotion, LinearMotion)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_op_Equality_Vim_Math3d_LinearMotion_Vim_Math3d_LinearMotion_
  commentId: M:Vim.Math3d.LinearMotion.op_Equality(Vim.Math3d.LinearMotion,Vim.Math3d.LinearMotion)
  fullName: Vim.Math3d.LinearMotion.Equality(Vim.Math3d.LinearMotion, Vim.Math3d.LinearMotion)
  nameWithType: LinearMotion.Equality(LinearMotion, LinearMotion)
- uid: Vim.Math3d.LinearMotion.op_Equality*
  name: Equality
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_op_Equality_
  commentId: Overload:Vim.Math3d.LinearMotion.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.Equality
  nameWithType: LinearMotion.Equality
- uid: Vim.Math3d.LinearMotion.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single})~Vim.Math3d.LinearMotion
  name: Implicit((Vector3 velocity, Vector3 acceleration, Single friction) to LinearMotion)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single___Vim_Math3d_LinearMotion
  commentId: M:Vim.Math3d.LinearMotion.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single})~Vim.Math3d.LinearMotion
  name.vb: Widening((velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single) to LinearMotion)
  fullName: Vim.Math3d.LinearMotion.Implicit(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single> to Vim.Math3d.LinearMotion)
  fullName.vb: Vim.Math3d.LinearMotion.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single) to Vim.Math3d.LinearMotion)
  nameWithType: LinearMotion.Implicit((Vector3 velocity, Vector3 acceleration, Single friction) to LinearMotion)
  nameWithType.vb: LinearMotion.Widening((velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single) to LinearMotion)
- uid: Vim.Math3d.LinearMotion.op_Implicit(Vim.Math3d.LinearMotion)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single}
  name: Implicit(LinearMotion to (Vector3 velocity, Vector3 acceleration, Single friction))
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_op_Implicit_Vim_Math3d_LinearMotion__System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.LinearMotion.op_Implicit(Vim.Math3d.LinearMotion)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single}
  name.vb: Widening(LinearMotion to (velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single))
  fullName: Vim.Math3d.LinearMotion.Implicit(Vim.Math3d.LinearMotion to System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.LinearMotion.Widening(Vim.Math3d.LinearMotion to System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single))
  nameWithType: LinearMotion.Implicit(LinearMotion to (Vector3 velocity, Vector3 acceleration, Single friction))
  nameWithType.vb: LinearMotion.Widening(LinearMotion to (velocity As Vector3, acceleration As Vector3, friction As Single)(Of Vector3, Vector3, Single))
- uid: Vim.Math3d.LinearMotion.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_op_Implicit_
  commentId: Overload:Vim.Math3d.LinearMotion.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.LinearMotion.Implicit
  fullName.vb: Vim.Math3d.LinearMotion.Widening
  nameWithType: LinearMotion.Implicit
  nameWithType.vb: LinearMotion.Widening
- uid: Vim.Math3d.LinearMotion.op_Inequality(Vim.Math3d.LinearMotion,Vim.Math3d.LinearMotion)
  name: Inequality(LinearMotion, LinearMotion)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_op_Inequality_Vim_Math3d_LinearMotion_Vim_Math3d_LinearMotion_
  commentId: M:Vim.Math3d.LinearMotion.op_Inequality(Vim.Math3d.LinearMotion,Vim.Math3d.LinearMotion)
  fullName: Vim.Math3d.LinearMotion.Inequality(Vim.Math3d.LinearMotion, Vim.Math3d.LinearMotion)
  nameWithType: LinearMotion.Inequality(LinearMotion, LinearMotion)
- uid: Vim.Math3d.LinearMotion.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_op_Inequality_
  commentId: Overload:Vim.Math3d.LinearMotion.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.Inequality
  nameWithType: LinearMotion.Inequality
- uid: Vim.Math3d.LinearMotion.SetAcceleration(Vim.Math3d.Vector3)
  name: SetAcceleration(Vector3)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_SetAcceleration_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.LinearMotion.SetAcceleration(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.LinearMotion.SetAcceleration(Vim.Math3d.Vector3)
  nameWithType: LinearMotion.SetAcceleration(Vector3)
- uid: Vim.Math3d.LinearMotion.SetAcceleration*
  name: SetAcceleration
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_SetAcceleration_
  commentId: Overload:Vim.Math3d.LinearMotion.SetAcceleration
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.SetAcceleration
  nameWithType: LinearMotion.SetAcceleration
- uid: Vim.Math3d.LinearMotion.SetFriction(System.Single)
  name: SetFriction(Single)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_SetFriction_System_Single_
  commentId: M:Vim.Math3d.LinearMotion.SetFriction(System.Single)
  fullName: Vim.Math3d.LinearMotion.SetFriction(System.Single)
  nameWithType: LinearMotion.SetFriction(Single)
- uid: Vim.Math3d.LinearMotion.SetFriction*
  name: SetFriction
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_SetFriction_
  commentId: Overload:Vim.Math3d.LinearMotion.SetFriction
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.SetFriction
  nameWithType: LinearMotion.SetFriction
- uid: Vim.Math3d.LinearMotion.SetVelocity(Vim.Math3d.Vector3)
  name: SetVelocity(Vector3)
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_SetVelocity_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.LinearMotion.SetVelocity(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.LinearMotion.SetVelocity(Vim.Math3d.Vector3)
  nameWithType: LinearMotion.SetVelocity(Vector3)
- uid: Vim.Math3d.LinearMotion.SetVelocity*
  name: SetVelocity
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_SetVelocity_
  commentId: Overload:Vim.Math3d.LinearMotion.SetVelocity
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.SetVelocity
  nameWithType: LinearMotion.SetVelocity
- uid: Vim.Math3d.LinearMotion.ToString
  name: ToString()
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_ToString
  commentId: M:Vim.Math3d.LinearMotion.ToString
  fullName: Vim.Math3d.LinearMotion.ToString()
  nameWithType: LinearMotion.ToString()
- uid: Vim.Math3d.LinearMotion.ToString*
  name: ToString
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_ToString_
  commentId: Overload:Vim.Math3d.LinearMotion.ToString
  isSpec: "True"
  fullName: Vim.Math3d.LinearMotion.ToString
  nameWithType: LinearMotion.ToString
- uid: Vim.Math3d.LinearMotion.Velocity
  name: Velocity
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Velocity
  commentId: F:Vim.Math3d.LinearMotion.Velocity
  fullName: Vim.Math3d.LinearMotion.Velocity
  nameWithType: LinearMotion.Velocity
- uid: Vim.Math3d.LinearMotion.Zero
  name: Zero
  href: api/Vim.Math3d.LinearMotion.html#Vim_Math3d_LinearMotion_Zero
  commentId: F:Vim.Math3d.LinearMotion.Zero
  fullName: Vim.Math3d.LinearMotion.Zero
  nameWithType: LinearMotion.Zero
- uid: Vim.Math3d.LinqUtil
  name: LinqUtil
  href: api/Vim.Math3d.LinqUtil.html
  commentId: T:Vim.Math3d.LinqUtil
  fullName: Vim.Math3d.LinqUtil
  nameWithType: LinqUtil
- uid: Vim.Math3d.LinqUtil.ToAABox(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: ToAABox(IEnumerable<Vector3>)
  href: api/Vim.Math3d.LinqUtil.html#Vim_Math3d_LinqUtil_ToAABox_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.LinqUtil.ToAABox(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: ToAABox(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.LinqUtil.ToAABox(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.LinqUtil.ToAABox(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: LinqUtil.ToAABox(IEnumerable<Vector3>)
  nameWithType.vb: LinqUtil.ToAABox(IEnumerable(Of Vector3))
- uid: Vim.Math3d.LinqUtil.ToAABox*
  name: ToAABox
  href: api/Vim.Math3d.LinqUtil.html#Vim_Math3d_LinqUtil_ToAABox_
  commentId: Overload:Vim.Math3d.LinqUtil.ToAABox
  isSpec: "True"
  fullName: Vim.Math3d.LinqUtil.ToAABox
  nameWithType: LinqUtil.ToAABox
- uid: Vim.Math3d.LogPolarCoordinate
  name: LogPolarCoordinate
  href: api/Vim.Math3d.LogPolarCoordinate.html
  commentId: T:Vim.Math3d.LogPolarCoordinate
  fullName: Vim.Math3d.LogPolarCoordinate
  nameWithType: LogPolarCoordinate
- uid: Vim.Math3d.LogPolarCoordinate.#ctor(System.Double,System.Double)
  name: LogPolarCoordinate(Double, Double)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate__ctor_System_Double_System_Double_
  commentId: M:Vim.Math3d.LogPolarCoordinate.#ctor(System.Double,System.Double)
  fullName: Vim.Math3d.LogPolarCoordinate.LogPolarCoordinate(System.Double, System.Double)
  nameWithType: LogPolarCoordinate.LogPolarCoordinate(Double, Double)
- uid: Vim.Math3d.LogPolarCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name: LogPolarCoordinate((Double rho, Double azimuth))
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate__ctor_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.LogPolarCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name.vb: LogPolarCoordinate((rho As Double, azimuth As Double)(Of Double, Double))
  fullName: Vim.Math3d.LogPolarCoordinate.LogPolarCoordinate(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.LogPolarCoordinate.LogPolarCoordinate(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: LogPolarCoordinate.LogPolarCoordinate((Double rho, Double azimuth))
  nameWithType.vb: LogPolarCoordinate.LogPolarCoordinate((rho As Double, azimuth As Double)(Of Double, Double))
- uid: Vim.Math3d.LogPolarCoordinate.#ctor*
  name: LogPolarCoordinate
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate__ctor_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.LogPolarCoordinate
  nameWithType: LogPolarCoordinate.LogPolarCoordinate
- uid: Vim.Math3d.LogPolarCoordinate.AlmostEquals(Vim.Math3d.LogPolarCoordinate,System.Single)
  name: AlmostEquals(LogPolarCoordinate, Single)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_AlmostEquals_Vim_Math3d_LogPolarCoordinate_System_Single_
  commentId: M:Vim.Math3d.LogPolarCoordinate.AlmostEquals(Vim.Math3d.LogPolarCoordinate,System.Single)
  fullName: Vim.Math3d.LogPolarCoordinate.AlmostEquals(Vim.Math3d.LogPolarCoordinate, System.Single)
  nameWithType: LogPolarCoordinate.AlmostEquals(LogPolarCoordinate, Single)
- uid: Vim.Math3d.LogPolarCoordinate.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_AlmostEquals_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.AlmostEquals
  nameWithType: LogPolarCoordinate.AlmostEquals
- uid: Vim.Math3d.LogPolarCoordinate.Azimuth
  name: Azimuth
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Azimuth
  commentId: F:Vim.Math3d.LogPolarCoordinate.Azimuth
  fullName: Vim.Math3d.LogPolarCoordinate.Azimuth
  nameWithType: LogPolarCoordinate.Azimuth
- uid: Vim.Math3d.LogPolarCoordinate.Create(System.Double,System.Double)
  name: Create(Double, Double)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Create_System_Double_System_Double_
  commentId: M:Vim.Math3d.LogPolarCoordinate.Create(System.Double,System.Double)
  fullName: Vim.Math3d.LogPolarCoordinate.Create(System.Double, System.Double)
  nameWithType: LogPolarCoordinate.Create(Double, Double)
- uid: Vim.Math3d.LogPolarCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name: Create((Double rho, Double azimuth))
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Create_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.LogPolarCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name.vb: Create((rho As Double, azimuth As Double)(Of Double, Double))
  fullName: Vim.Math3d.LogPolarCoordinate.Create(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.LogPolarCoordinate.Create(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: LogPolarCoordinate.Create((Double rho, Double azimuth))
  nameWithType.vb: LogPolarCoordinate.Create((rho As Double, azimuth As Double)(Of Double, Double))
- uid: Vim.Math3d.LogPolarCoordinate.Create*
  name: Create
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Create_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.Create
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.Create
  nameWithType: LogPolarCoordinate.Create
- uid: Vim.Math3d.LogPolarCoordinate.Deconstruct(System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Deconstruct_System_Double__System_Double__
  commentId: M:Vim.Math3d.LogPolarCoordinate.Deconstruct(System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
  fullName: Vim.Math3d.LogPolarCoordinate.Deconstruct(out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.LogPolarCoordinate.Deconstruct(ByRef System.Double, ByRef System.Double)
  nameWithType: LogPolarCoordinate.Deconstruct(out Double, out Double)
  nameWithType.vb: LogPolarCoordinate.Deconstruct(ByRef Double, ByRef Double)
- uid: Vim.Math3d.LogPolarCoordinate.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Deconstruct_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.Deconstruct
  nameWithType: LogPolarCoordinate.Deconstruct
- uid: Vim.Math3d.LogPolarCoordinate.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Equals_System_Object_
  commentId: M:Vim.Math3d.LogPolarCoordinate.Equals(System.Object)
  fullName: Vim.Math3d.LogPolarCoordinate.Equals(System.Object)
  nameWithType: LogPolarCoordinate.Equals(Object)
- uid: Vim.Math3d.LogPolarCoordinate.Equals(Vim.Math3d.LogPolarCoordinate)
  name: Equals(LogPolarCoordinate)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Equals_Vim_Math3d_LogPolarCoordinate_
  commentId: M:Vim.Math3d.LogPolarCoordinate.Equals(Vim.Math3d.LogPolarCoordinate)
  fullName: Vim.Math3d.LogPolarCoordinate.Equals(Vim.Math3d.LogPolarCoordinate)
  nameWithType: LogPolarCoordinate.Equals(LogPolarCoordinate)
- uid: Vim.Math3d.LogPolarCoordinate.Equals*
  name: Equals
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Equals_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.Equals
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.Equals
  nameWithType: LogPolarCoordinate.Equals
- uid: Vim.Math3d.LogPolarCoordinate.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_GetHashCode
  commentId: M:Vim.Math3d.LogPolarCoordinate.GetHashCode
  fullName: Vim.Math3d.LogPolarCoordinate.GetHashCode()
  nameWithType: LogPolarCoordinate.GetHashCode()
- uid: Vim.Math3d.LogPolarCoordinate.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_GetHashCode_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.GetHashCode
  nameWithType: LogPolarCoordinate.GetHashCode
- uid: Vim.Math3d.LogPolarCoordinate.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_MaxValue
  commentId: F:Vim.Math3d.LogPolarCoordinate.MaxValue
  fullName: Vim.Math3d.LogPolarCoordinate.MaxValue
  nameWithType: LogPolarCoordinate.MaxValue
- uid: Vim.Math3d.LogPolarCoordinate.MinValue
  name: MinValue
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_MinValue
  commentId: F:Vim.Math3d.LogPolarCoordinate.MinValue
  fullName: Vim.Math3d.LogPolarCoordinate.MinValue
  nameWithType: LogPolarCoordinate.MinValue
- uid: Vim.Math3d.LogPolarCoordinate.op_Equality(Vim.Math3d.LogPolarCoordinate,Vim.Math3d.LogPolarCoordinate)
  name: Equality(LogPolarCoordinate, LogPolarCoordinate)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_op_Equality_Vim_Math3d_LogPolarCoordinate_Vim_Math3d_LogPolarCoordinate_
  commentId: M:Vim.Math3d.LogPolarCoordinate.op_Equality(Vim.Math3d.LogPolarCoordinate,Vim.Math3d.LogPolarCoordinate)
  fullName: Vim.Math3d.LogPolarCoordinate.Equality(Vim.Math3d.LogPolarCoordinate, Vim.Math3d.LogPolarCoordinate)
  nameWithType: LogPolarCoordinate.Equality(LogPolarCoordinate, LogPolarCoordinate)
- uid: Vim.Math3d.LogPolarCoordinate.op_Equality*
  name: Equality
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_op_Equality_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.Equality
  nameWithType: LogPolarCoordinate.Equality
- uid: Vim.Math3d.LogPolarCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.LogPolarCoordinate
  name: Implicit((Double rho, Double azimuth) to LogPolarCoordinate)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_op_Implicit_System_ValueTuple_System_Double_System_Double___Vim_Math3d_LogPolarCoordinate
  commentId: M:Vim.Math3d.LogPolarCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.LogPolarCoordinate
  name.vb: Widening((rho As Double, azimuth As Double)(Of Double, Double) to LogPolarCoordinate)
  fullName: Vim.Math3d.LogPolarCoordinate.Implicit(System.ValueTuple<System.Double, System.Double> to Vim.Math3d.LogPolarCoordinate)
  fullName.vb: Vim.Math3d.LogPolarCoordinate.Widening(System.ValueTuple(Of System.Double, System.Double) to Vim.Math3d.LogPolarCoordinate)
  nameWithType: LogPolarCoordinate.Implicit((Double rho, Double azimuth) to LogPolarCoordinate)
  nameWithType.vb: LogPolarCoordinate.Widening((rho As Double, azimuth As Double)(Of Double, Double) to LogPolarCoordinate)
- uid: Vim.Math3d.LogPolarCoordinate.op_Implicit(Vim.Math3d.LogPolarCoordinate)~System.ValueTuple{System.Double,System.Double}
  name: Implicit(LogPolarCoordinate to (Double rho, Double azimuth))
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_op_Implicit_Vim_Math3d_LogPolarCoordinate__System_ValueTuple_System_Double_System_Double_
  commentId: M:Vim.Math3d.LogPolarCoordinate.op_Implicit(Vim.Math3d.LogPolarCoordinate)~System.ValueTuple{System.Double,System.Double}
  name.vb: Widening(LogPolarCoordinate to (rho As Double, azimuth As Double)(Of Double, Double))
  fullName: Vim.Math3d.LogPolarCoordinate.Implicit(Vim.Math3d.LogPolarCoordinate to System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.LogPolarCoordinate.Widening(Vim.Math3d.LogPolarCoordinate to System.ValueTuple(Of System.Double, System.Double))
  nameWithType: LogPolarCoordinate.Implicit(LogPolarCoordinate to (Double rho, Double azimuth))
  nameWithType.vb: LogPolarCoordinate.Widening(LogPolarCoordinate to (rho As Double, azimuth As Double)(Of Double, Double))
- uid: Vim.Math3d.LogPolarCoordinate.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_op_Implicit_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.LogPolarCoordinate.Implicit
  fullName.vb: Vim.Math3d.LogPolarCoordinate.Widening
  nameWithType: LogPolarCoordinate.Implicit
  nameWithType.vb: LogPolarCoordinate.Widening
- uid: Vim.Math3d.LogPolarCoordinate.op_Inequality(Vim.Math3d.LogPolarCoordinate,Vim.Math3d.LogPolarCoordinate)
  name: Inequality(LogPolarCoordinate, LogPolarCoordinate)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_op_Inequality_Vim_Math3d_LogPolarCoordinate_Vim_Math3d_LogPolarCoordinate_
  commentId: M:Vim.Math3d.LogPolarCoordinate.op_Inequality(Vim.Math3d.LogPolarCoordinate,Vim.Math3d.LogPolarCoordinate)
  fullName: Vim.Math3d.LogPolarCoordinate.Inequality(Vim.Math3d.LogPolarCoordinate, Vim.Math3d.LogPolarCoordinate)
  nameWithType: LogPolarCoordinate.Inequality(LogPolarCoordinate, LogPolarCoordinate)
- uid: Vim.Math3d.LogPolarCoordinate.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_op_Inequality_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.Inequality
  nameWithType: LogPolarCoordinate.Inequality
- uid: Vim.Math3d.LogPolarCoordinate.Rho
  name: Rho
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Rho
  commentId: F:Vim.Math3d.LogPolarCoordinate.Rho
  fullName: Vim.Math3d.LogPolarCoordinate.Rho
  nameWithType: LogPolarCoordinate.Rho
- uid: Vim.Math3d.LogPolarCoordinate.SetAzimuth(System.Double)
  name: SetAzimuth(Double)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_SetAzimuth_System_Double_
  commentId: M:Vim.Math3d.LogPolarCoordinate.SetAzimuth(System.Double)
  fullName: Vim.Math3d.LogPolarCoordinate.SetAzimuth(System.Double)
  nameWithType: LogPolarCoordinate.SetAzimuth(Double)
- uid: Vim.Math3d.LogPolarCoordinate.SetAzimuth*
  name: SetAzimuth
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_SetAzimuth_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.SetAzimuth
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.SetAzimuth
  nameWithType: LogPolarCoordinate.SetAzimuth
- uid: Vim.Math3d.LogPolarCoordinate.SetRho(System.Double)
  name: SetRho(Double)
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_SetRho_System_Double_
  commentId: M:Vim.Math3d.LogPolarCoordinate.SetRho(System.Double)
  fullName: Vim.Math3d.LogPolarCoordinate.SetRho(System.Double)
  nameWithType: LogPolarCoordinate.SetRho(Double)
- uid: Vim.Math3d.LogPolarCoordinate.SetRho*
  name: SetRho
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_SetRho_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.SetRho
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.SetRho
  nameWithType: LogPolarCoordinate.SetRho
- uid: Vim.Math3d.LogPolarCoordinate.ToString
  name: ToString()
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_ToString
  commentId: M:Vim.Math3d.LogPolarCoordinate.ToString
  fullName: Vim.Math3d.LogPolarCoordinate.ToString()
  nameWithType: LogPolarCoordinate.ToString()
- uid: Vim.Math3d.LogPolarCoordinate.ToString*
  name: ToString
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_ToString_
  commentId: Overload:Vim.Math3d.LogPolarCoordinate.ToString
  isSpec: "True"
  fullName: Vim.Math3d.LogPolarCoordinate.ToString
  nameWithType: LogPolarCoordinate.ToString
- uid: Vim.Math3d.LogPolarCoordinate.Zero
  name: Zero
  href: api/Vim.Math3d.LogPolarCoordinate.html#Vim_Math3d_LogPolarCoordinate_Zero
  commentId: F:Vim.Math3d.LogPolarCoordinate.Zero
  fullName: Vim.Math3d.LogPolarCoordinate.Zero
  nameWithType: LogPolarCoordinate.Zero
- uid: Vim.Math3d.MathOps
  name: MathOps
  href: api/Vim.Math3d.MathOps.html
  commentId: T:Vim.Math3d.MathOps
  fullName: Vim.Math3d.MathOps
  nameWithType: MathOps
- uid: Vim.Math3d.MathOps.Abs(System.Double)
  name: Abs(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_System_Double_
  commentId: M:Vim.Math3d.MathOps.Abs(System.Double)
  fullName: Vim.Math3d.MathOps.Abs(System.Double)
  nameWithType: MathOps.Abs(Double)
- uid: Vim.Math3d.MathOps.Abs(System.Int32)
  name: Abs(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Abs(System.Int32)
  fullName: Vim.Math3d.MathOps.Abs(System.Int32)
  nameWithType: MathOps.Abs(Int32)
- uid: Vim.Math3d.MathOps.Abs(System.Int64)
  name: Abs(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Abs(System.Int64)
  fullName: Vim.Math3d.MathOps.Abs(System.Int64)
  nameWithType: MathOps.Abs(Int64)
- uid: Vim.Math3d.MathOps.Abs(System.Single)
  name: Abs(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_System_Single_
  commentId: M:Vim.Math3d.MathOps.Abs(System.Single)
  fullName: Vim.Math3d.MathOps.Abs(System.Single)
  nameWithType: MathOps.Abs(Single)
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector2)
  name: Abs(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector2)
  nameWithType: MathOps.Abs(DVector2)
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector3)
  name: Abs(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector3)
  nameWithType: MathOps.Abs(DVector3)
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  name: Abs(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  nameWithType: MathOps.Abs(DVector4)
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector2)
  name: Abs(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector2)
  nameWithType: MathOps.Abs(Vector2)
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  name: Abs(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  nameWithType: MathOps.Abs(Vector3)
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector4)
  name: Abs(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector4)
  nameWithType: MathOps.Abs(Vector4)
- uid: Vim.Math3d.MathOps.Abs*
  name: Abs
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Abs_
  commentId: Overload:Vim.Math3d.MathOps.Abs
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Abs
  nameWithType: MathOps.Abs
- uid: Vim.Math3d.MathOps.Acos(System.Double)
  name: Acos(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_System_Double_
  commentId: M:Vim.Math3d.MathOps.Acos(System.Double)
  fullName: Vim.Math3d.MathOps.Acos(System.Double)
  nameWithType: MathOps.Acos(Double)
- uid: Vim.Math3d.MathOps.Acos(System.Single)
  name: Acos(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_System_Single_
  commentId: M:Vim.Math3d.MathOps.Acos(System.Single)
  fullName: Vim.Math3d.MathOps.Acos(System.Single)
  nameWithType: MathOps.Acos(Single)
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector2)
  name: Acos(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector2)
  nameWithType: MathOps.Acos(DVector2)
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector3)
  name: Acos(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector3)
  nameWithType: MathOps.Acos(DVector3)
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  name: Acos(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  nameWithType: MathOps.Acos(DVector4)
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector2)
  name: Acos(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector2)
  nameWithType: MathOps.Acos(Vector2)
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  name: Acos(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  nameWithType: MathOps.Acos(Vector3)
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector4)
  name: Acos(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector4)
  nameWithType: MathOps.Acos(Vector4)
- uid: Vim.Math3d.MathOps.Acos*
  name: Acos
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Acos_
  commentId: Overload:Vim.Math3d.MathOps.Acos
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Acos
  nameWithType: MathOps.Acos
- uid: Vim.Math3d.MathOps.Add(System.Double,System.Double)
  name: Add(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Add(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Add(System.Double, System.Double)
  nameWithType: MathOps.Add(Double, Double)
- uid: Vim.Math3d.MathOps.Add(System.Int32,System.Int32)
  name: Add(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Add(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Add(System.Int32, System.Int32)
  nameWithType: MathOps.Add(Int32, Int32)
- uid: Vim.Math3d.MathOps.Add(System.Int64,System.Int64)
  name: Add(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Add(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Add(System.Int64, System.Int64)
  nameWithType: MathOps.Add(Int64, Int64)
- uid: Vim.Math3d.MathOps.Add(System.Single,System.Single)
  name: Add(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Add(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Add(System.Single, System.Single)
  nameWithType: MathOps.Add(Single, Single)
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Add(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Add(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Add(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Add(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Add(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Add(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Add(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Add(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Add(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Add(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Add(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Add(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Add*
  name: Add
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Add_
  commentId: Overload:Vim.Math3d.MathOps.Add
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Add
  nameWithType: MathOps.Add
- uid: Vim.Math3d.MathOps.AlmostEquals(System.Double,System.Double,System.Single)
  name: AlmostEquals(Double, Double, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlmostEquals_System_Double_System_Double_System_Single_
  commentId: M:Vim.Math3d.MathOps.AlmostEquals(System.Double,System.Double,System.Single)
  fullName: Vim.Math3d.MathOps.AlmostEquals(System.Double, System.Double, System.Single)
  nameWithType: MathOps.AlmostEquals(Double, Double, Single)
- uid: Vim.Math3d.MathOps.AlmostEquals(System.Single,System.Single,System.Single)
  name: AlmostEquals(Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlmostEquals_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.AlmostEquals(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.AlmostEquals(System.Single, System.Single, System.Single)
  nameWithType: MathOps.AlmostEquals(Single, Single, Single)
- uid: Vim.Math3d.MathOps.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlmostEquals_
  commentId: Overload:Vim.Math3d.MathOps.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.AlmostEquals
  nameWithType: MathOps.AlmostEquals
- uid: Vim.Math3d.MathOps.AlmostZero(System.Double,System.Single)
  name: AlmostZero(Double, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlmostZero_System_Double_System_Single_
  commentId: M:Vim.Math3d.MathOps.AlmostZero(System.Double,System.Single)
  fullName: Vim.Math3d.MathOps.AlmostZero(System.Double, System.Single)
  nameWithType: MathOps.AlmostZero(Double, Single)
- uid: Vim.Math3d.MathOps.AlmostZero(System.Single,System.Single)
  name: AlmostZero(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlmostZero_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.AlmostZero(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.AlmostZero(System.Single, System.Single)
  nameWithType: MathOps.AlmostZero(Single, Single)
- uid: Vim.Math3d.MathOps.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlmostZero_
  commentId: Overload:Vim.Math3d.MathOps.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.AlmostZero
  nameWithType: MathOps.AlmostZero
- uid: Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
  name: Along(Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Along_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.Along(Vector3, Single)
- uid: Vim.Math3d.MathOps.Along*
  name: Along
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Along_
  commentId: Overload:Vim.Math3d.MathOps.Along
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Along
  nameWithType: MathOps.Along
- uid: Vim.Math3d.MathOps.AlongX(System.Single)
  name: AlongX(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlongX_System_Single_
  commentId: M:Vim.Math3d.MathOps.AlongX(System.Single)
  fullName: Vim.Math3d.MathOps.AlongX(System.Single)
  nameWithType: MathOps.AlongX(Single)
- uid: Vim.Math3d.MathOps.AlongX*
  name: AlongX
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlongX_
  commentId: Overload:Vim.Math3d.MathOps.AlongX
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.AlongX
  nameWithType: MathOps.AlongX
- uid: Vim.Math3d.MathOps.AlongY(System.Single)
  name: AlongY(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlongY_System_Single_
  commentId: M:Vim.Math3d.MathOps.AlongY(System.Single)
  fullName: Vim.Math3d.MathOps.AlongY(System.Single)
  nameWithType: MathOps.AlongY(Single)
- uid: Vim.Math3d.MathOps.AlongY*
  name: AlongY
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlongY_
  commentId: Overload:Vim.Math3d.MathOps.AlongY
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.AlongY
  nameWithType: MathOps.AlongY
- uid: Vim.Math3d.MathOps.AlongZ(System.Single)
  name: AlongZ(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlongZ_System_Single_
  commentId: M:Vim.Math3d.MathOps.AlongZ(System.Single)
  fullName: Vim.Math3d.MathOps.AlongZ(System.Single)
  nameWithType: MathOps.AlongZ(Single)
- uid: Vim.Math3d.MathOps.AlongZ*
  name: AlongZ
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_AlongZ_
  commentId: Overload:Vim.Math3d.MathOps.AlongZ
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.AlongZ
  nameWithType: MathOps.AlongZ
- uid: Vim.Math3d.MathOps.And(System.Boolean,System.Boolean)
  name: And(Boolean, Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_And_System_Boolean_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.And(System.Boolean,System.Boolean)
  fullName: Vim.Math3d.MathOps.And(System.Boolean, System.Boolean)
  nameWithType: MathOps.And(Boolean, Boolean)
- uid: Vim.Math3d.MathOps.And(System.Int32,System.Int32)
  name: And(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_And_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.And(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.And(System.Int32, System.Int32)
  nameWithType: MathOps.And(Int32, Int32)
- uid: Vim.Math3d.MathOps.And(System.Int64,System.Int64)
  name: And(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_And_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.And(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.And(System.Int64, System.Int64)
  nameWithType: MathOps.And(Int64, Int64)
- uid: Vim.Math3d.MathOps.And*
  name: And
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_And_
  commentId: Overload:Vim.Math3d.MathOps.And
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.And
  nameWithType: MathOps.And
- uid: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Angle(Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Angle_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.Angle(Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.Angle*
  name: Angle
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Angle_
  commentId: Overload:Vim.Math3d.MathOps.Angle
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Angle
  nameWithType: MathOps.Angle
- uid: Vim.Math3d.MathOps.Asin(System.Double)
  name: Asin(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_System_Double_
  commentId: M:Vim.Math3d.MathOps.Asin(System.Double)
  fullName: Vim.Math3d.MathOps.Asin(System.Double)
  nameWithType: MathOps.Asin(Double)
- uid: Vim.Math3d.MathOps.Asin(System.Single)
  name: Asin(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_System_Single_
  commentId: M:Vim.Math3d.MathOps.Asin(System.Single)
  fullName: Vim.Math3d.MathOps.Asin(System.Single)
  nameWithType: MathOps.Asin(Single)
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector2)
  name: Asin(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector2)
  nameWithType: MathOps.Asin(DVector2)
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector3)
  name: Asin(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector3)
  nameWithType: MathOps.Asin(DVector3)
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  name: Asin(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  nameWithType: MathOps.Asin(DVector4)
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector2)
  name: Asin(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector2)
  nameWithType: MathOps.Asin(Vector2)
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  name: Asin(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  nameWithType: MathOps.Asin(Vector3)
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector4)
  name: Asin(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector4)
  nameWithType: MathOps.Asin(Vector4)
- uid: Vim.Math3d.MathOps.Asin*
  name: Asin
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Asin_
  commentId: Overload:Vim.Math3d.MathOps.Asin
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Asin
  nameWithType: MathOps.Asin
- uid: Vim.Math3d.MathOps.Atan(System.Double)
  name: Atan(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_System_Double_
  commentId: M:Vim.Math3d.MathOps.Atan(System.Double)
  fullName: Vim.Math3d.MathOps.Atan(System.Double)
  nameWithType: MathOps.Atan(Double)
- uid: Vim.Math3d.MathOps.Atan(System.Single)
  name: Atan(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_System_Single_
  commentId: M:Vim.Math3d.MathOps.Atan(System.Single)
  fullName: Vim.Math3d.MathOps.Atan(System.Single)
  nameWithType: MathOps.Atan(Single)
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector2)
  name: Atan(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector2)
  nameWithType: MathOps.Atan(DVector2)
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector3)
  name: Atan(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector3)
  nameWithType: MathOps.Atan(DVector3)
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  name: Atan(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  nameWithType: MathOps.Atan(DVector4)
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector2)
  name: Atan(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector2)
  nameWithType: MathOps.Atan(Vector2)
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  name: Atan(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  nameWithType: MathOps.Atan(Vector3)
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector4)
  name: Atan(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector4)
  nameWithType: MathOps.Atan(Vector4)
- uid: Vim.Math3d.MathOps.Atan*
  name: Atan
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Atan_
  commentId: Overload:Vim.Math3d.MathOps.Atan
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Atan
  nameWithType: MathOps.Atan
- uid: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name: Average(IEnumerable<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name.vb: Average(IEnumerable(Of DVector2))
  fullName: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Average(IEnumerable<DVector2>)
  nameWithType.vb: MathOps.Average(IEnumerable(Of DVector2))
- uid: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name: Average(IEnumerable<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name.vb: Average(IEnumerable(Of DVector3))
  fullName: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Average(IEnumerable<DVector3>)
  nameWithType.vb: MathOps.Average(IEnumerable(Of DVector3))
- uid: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name: Average(IEnumerable<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name.vb: Average(IEnumerable(Of DVector4))
  fullName: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Average(IEnumerable<DVector4>)
  nameWithType.vb: MathOps.Average(IEnumerable(Of DVector4))
- uid: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: Average(IEnumerable<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: Average(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Average(IEnumerable<Vector2>)
  nameWithType.vb: MathOps.Average(IEnumerable(Of Vector2))
- uid: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Average(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Average(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Average(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.Average(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name: Average(IEnumerable<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name.vb: Average(IEnumerable(Of Vector4))
  fullName: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Average(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Average(IEnumerable<Vector4>)
  nameWithType.vb: MathOps.Average(IEnumerable(Of Vector4))
- uid: Vim.Math3d.MathOps.Average(System.Double,System.Double)
  name: Average(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Average(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Average(System.Double, System.Double)
  nameWithType: MathOps.Average(Double, Double)
- uid: Vim.Math3d.MathOps.Average(System.Single,System.Single)
  name: Average(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Average(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Average(System.Single, System.Single)
  nameWithType: MathOps.Average(Single, Single)
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Average(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Average(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Average(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Average(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Average(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Average(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.DVector2})
  name: Average(Stats<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Stats_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.DVector2})
  name.vb: Average(Stats(Of DVector2))
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Average(Stats<DVector2>)
  nameWithType.vb: MathOps.Average(Stats(Of DVector2))
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name: Average(Stats<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Stats_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name.vb: Average(Stats(Of DVector3))
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Average(Stats<DVector3>)
  nameWithType.vb: MathOps.Average(Stats(Of DVector3))
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.DVector4})
  name: Average(Stats<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Stats_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.DVector4})
  name.vb: Average(Stats(Of DVector4))
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Average(Stats<DVector4>)
  nameWithType.vb: MathOps.Average(Stats(Of DVector4))
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.Vector2})
  name: Average(Stats<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Stats_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.Vector2})
  name.vb: Average(Stats(Of Vector2))
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Average(Stats<Vector2>)
  nameWithType.vb: MathOps.Average(Stats(Of Vector2))
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name: Average(Stats<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Stats_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name.vb: Average(Stats(Of Vector3))
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Average(Stats<Vector3>)
  nameWithType.vb: MathOps.Average(Stats(Of Vector3))
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.Vector4})
  name: Average(Stats<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Stats_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Stats{Vim.Math3d.Vector4})
  name.vb: Average(Stats(Of Vector4))
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Average(Vim.Math3d.Stats(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Average(Stats<Vector4>)
  nameWithType.vb: MathOps.Average(Stats(Of Vector4))
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Average(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Average(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Average(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Average(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Average(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Average(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Average*
  name: Average
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Average_
  commentId: Overload:Vim.Math3d.MathOps.Average
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Average
  nameWithType: MathOps.Average
- uid: Vim.Math3d.MathOps.Barycentric(System.Double,System.Double,System.Double,System.Single,System.Single)
  name: Barycentric(Double, Double, Double, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_System_Double_System_Double_System_Double_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(System.Double,System.Double,System.Double,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(System.Double, System.Double, System.Double, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(Double, Double, Double, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)
  name: Barycentric(Single, Single, Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_System_Single_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(System.Single, System.Single, System.Single, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(Single, Single, Single, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector2,Vim.Math3d.DVector2,Vim.Math3d.DVector2,System.Single,System.Single)
  name: Barycentric(DVector2, DVector2, DVector2, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_Vim_Math3d_DVector2_Vim_Math3d_DVector2_Vim_Math3d_DVector2_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector2,Vim.Math3d.DVector2,Vim.Math3d.DVector2,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector2, Vim.Math3d.DVector2, Vim.Math3d.DVector2, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(DVector2, DVector2, DVector2, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector3,Vim.Math3d.DVector3,Vim.Math3d.DVector3,System.Single,System.Single)
  name: Barycentric(DVector3, DVector3, DVector3, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_Vim_Math3d_DVector3_Vim_Math3d_DVector3_Vim_Math3d_DVector3_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector3,Vim.Math3d.DVector3,Vim.Math3d.DVector3,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector3, Vim.Math3d.DVector3, Vim.Math3d.DVector3, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(DVector3, DVector3, DVector3, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  name: Barycentric(DVector4, DVector4, DVector4, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_Vim_Math3d_DVector4_Vim_Math3d_DVector4_Vim_Math3d_DVector4_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4, Vim.Math3d.DVector4, Vim.Math3d.DVector4, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(DVector4, DVector4, DVector4, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,System.Single,System.Single)
  name: Barycentric(Vector2, Vector2, Vector2, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(Vector2, Vector2, Vector2, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  name: Barycentric(Vector3, Vector3, Vector3, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(Vector3, Vector3, Vector3, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4,System.Single,System.Single)
  name: Barycentric(Vector4, Vector4, Vector4, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_Vim_Math3d_Vector4_Vim_Math3d_Vector4_Vim_Math3d_Vector4_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector4, Vim.Math3d.Vector4, Vim.Math3d.Vector4, System.Single, System.Single)
  nameWithType: MathOps.Barycentric(Vector4, Vector4, Vector4, Single, Single)
- uid: Vim.Math3d.MathOps.Barycentric*
  name: Barycentric
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Barycentric_
  commentId: Overload:Vim.Math3d.MathOps.Barycentric
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Barycentric
  nameWithType: MathOps.Barycentric
- uid: Vim.Math3d.MathOps.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)
  name: CatmullRom(Single, Single, Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_CatmullRom_System_Single_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.CatmullRom(System.Single, System.Single, System.Single, System.Single, System.Single)
  nameWithType: MathOps.CatmullRom(Single, Single, Single, Single, Single)
- uid: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: CatmullRom(Vector3, Vector3, Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_CatmullRom_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.CatmullRom(Vector3, Vector3, Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.CatmullRom*
  name: CatmullRom
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_CatmullRom_
  commentId: Overload:Vim.Math3d.MathOps.CatmullRom
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.CatmullRom
  nameWithType: MathOps.CatmullRom
- uid: Vim.Math3d.MathOps.Ceiling(System.Double)
  name: Ceiling(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_System_Double_
  commentId: M:Vim.Math3d.MathOps.Ceiling(System.Double)
  fullName: Vim.Math3d.MathOps.Ceiling(System.Double)
  nameWithType: MathOps.Ceiling(Double)
- uid: Vim.Math3d.MathOps.Ceiling(System.Single)
  name: Ceiling(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_System_Single_
  commentId: M:Vim.Math3d.MathOps.Ceiling(System.Single)
  fullName: Vim.Math3d.MathOps.Ceiling(System.Single)
  nameWithType: MathOps.Ceiling(Single)
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector2)
  name: Ceiling(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector2)
  nameWithType: MathOps.Ceiling(DVector2)
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector3)
  name: Ceiling(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector3)
  nameWithType: MathOps.Ceiling(DVector3)
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  name: Ceiling(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  nameWithType: MathOps.Ceiling(DVector4)
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector2)
  name: Ceiling(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector2)
  nameWithType: MathOps.Ceiling(Vector2)
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  name: Ceiling(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  nameWithType: MathOps.Ceiling(Vector3)
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector4)
  name: Ceiling(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector4)
  nameWithType: MathOps.Ceiling(Vector4)
- uid: Vim.Math3d.MathOps.Ceiling*
  name: Ceiling
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Ceiling_
  commentId: Overload:Vim.Math3d.MathOps.Ceiling
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Ceiling
  nameWithType: MathOps.Ceiling
- uid: Vim.Math3d.MathOps.Clamp(System.Double,System.Double,System.Double)
  name: Clamp(Double, Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Clamp(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Clamp(System.Double, System.Double, System.Double)
  nameWithType: MathOps.Clamp(Double, Double, Double)
- uid: Vim.Math3d.MathOps.Clamp(System.Int32,System.Int32,System.Int32)
  name: Clamp(Int32, Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Clamp(System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Clamp(System.Int32, System.Int32, System.Int32)
  nameWithType: MathOps.Clamp(Int32, Int32, Int32)
- uid: Vim.Math3d.MathOps.Clamp(System.Int64,System.Int64,System.Int64)
  name: Clamp(Int64, Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_System_Int64_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Clamp(System.Int64,System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Clamp(System.Int64, System.Int64, System.Int64)
  nameWithType: MathOps.Clamp(Int64, Int64, Int64)
- uid: Vim.Math3d.MathOps.Clamp(System.Single,System.Single,System.Single)
  name: Clamp(Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Clamp(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Clamp(System.Single, System.Single, System.Single)
  nameWithType: MathOps.Clamp(Single, Single, Single)
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector2,Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Clamp(DVector2, DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_Vim_Math3d_DVector2_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector2,Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector2, Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Clamp(DVector2, DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector3,Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Clamp(DVector3, DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_Vim_Math3d_DVector3_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector3,Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector3, Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Clamp(DVector3, DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Clamp(DVector4, DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_Vim_Math3d_DVector4_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4, Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Clamp(DVector4, DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Clamp(Vector2, Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Clamp(Vector2, Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Clamp(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Clamp(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Clamp(Vector4, Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_Vim_Math3d_Vector4_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector4, Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Clamp(Vector4, Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Clamp*
  name: Clamp
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Clamp_
  commentId: Overload:Vim.Math3d.MathOps.Clamp
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Clamp
  nameWithType: MathOps.Clamp
- uid: Vim.Math3d.MathOps.ClampLower(System.Double,System.Double)
  name: ClampLower(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.ClampLower(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.ClampLower(System.Double, System.Double)
  nameWithType: MathOps.ClampLower(Double, Double)
- uid: Vim.Math3d.MathOps.ClampLower(System.Single,System.Single)
  name: ClampLower(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.ClampLower(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.ClampLower(System.Single, System.Single)
  nameWithType: MathOps.ClampLower(Single, Single)
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: ClampLower(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.ClampLower(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: ClampLower(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.ClampLower(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: ClampLower(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.ClampLower(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: ClampLower(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.ClampLower(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: ClampLower(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.ClampLower(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: ClampLower(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.ClampLower(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.ClampLower*
  name: ClampLower
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampLower_
  commentId: Overload:Vim.Math3d.MathOps.ClampLower
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ClampLower
  nameWithType: MathOps.ClampLower
- uid: Vim.Math3d.MathOps.ClampUpper(System.Double,System.Double)
  name: ClampUpper(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.ClampUpper(System.Double, System.Double)
  nameWithType: MathOps.ClampUpper(Double, Double)
- uid: Vim.Math3d.MathOps.ClampUpper(System.Single,System.Single)
  name: ClampUpper(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.ClampUpper(System.Single, System.Single)
  nameWithType: MathOps.ClampUpper(Single, Single)
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: ClampUpper(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.ClampUpper(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: ClampUpper(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.ClampUpper(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: ClampUpper(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.ClampUpper(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: ClampUpper(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.ClampUpper(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: ClampUpper(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.ClampUpper(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: ClampUpper(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.ClampUpper(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.ClampUpper*
  name: ClampUpper
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ClampUpper_
  commentId: Overload:Vim.Math3d.MathOps.ClampUpper
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ClampUpper
  nameWithType: MathOps.ClampUpper
- uid: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Colinear(Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Colinear_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.Colinear(Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.Colinear*
  name: Colinear
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Colinear_
  commentId: Overload:Vim.Math3d.MathOps.Colinear
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Colinear
  nameWithType: MathOps.Colinear
- uid: Vim.Math3d.MathOps.Coplanar(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Coplanar(Vector3, Vector3, Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Coplanar_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Coplanar(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.Coplanar(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.Coplanar(Vector3, Vector3, Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.Coplanar*
  name: Coplanar
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Coplanar_
  commentId: Overload:Vim.Math3d.MathOps.Coplanar
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Coplanar
  nameWithType: MathOps.Coplanar
- uid: Vim.Math3d.MathOps.Cos(System.Double)
  name: Cos(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_System_Double_
  commentId: M:Vim.Math3d.MathOps.Cos(System.Double)
  fullName: Vim.Math3d.MathOps.Cos(System.Double)
  nameWithType: MathOps.Cos(Double)
- uid: Vim.Math3d.MathOps.Cos(System.Single)
  name: Cos(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_System_Single_
  commentId: M:Vim.Math3d.MathOps.Cos(System.Single)
  fullName: Vim.Math3d.MathOps.Cos(System.Single)
  nameWithType: MathOps.Cos(Single)
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector2)
  name: Cos(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector2)
  nameWithType: MathOps.Cos(DVector2)
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector3)
  name: Cos(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector3)
  nameWithType: MathOps.Cos(DVector3)
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  name: Cos(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  nameWithType: MathOps.Cos(DVector4)
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector2)
  name: Cos(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector2)
  nameWithType: MathOps.Cos(Vector2)
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  name: Cos(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  nameWithType: MathOps.Cos(Vector3)
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector4)
  name: Cos(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector4)
  nameWithType: MathOps.Cos(Vector4)
- uid: Vim.Math3d.MathOps.Cos*
  name: Cos
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cos_
  commentId: Overload:Vim.Math3d.MathOps.Cos
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Cos
  nameWithType: MathOps.Cos
- uid: Vim.Math3d.MathOps.Cosh(System.Double)
  name: Cosh(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_System_Double_
  commentId: M:Vim.Math3d.MathOps.Cosh(System.Double)
  fullName: Vim.Math3d.MathOps.Cosh(System.Double)
  nameWithType: MathOps.Cosh(Double)
- uid: Vim.Math3d.MathOps.Cosh(System.Single)
  name: Cosh(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_System_Single_
  commentId: M:Vim.Math3d.MathOps.Cosh(System.Single)
  fullName: Vim.Math3d.MathOps.Cosh(System.Single)
  nameWithType: MathOps.Cosh(Single)
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector2)
  name: Cosh(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector2)
  nameWithType: MathOps.Cosh(DVector2)
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector3)
  name: Cosh(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector3)
  nameWithType: MathOps.Cosh(DVector3)
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  name: Cosh(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  nameWithType: MathOps.Cosh(DVector4)
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector2)
  name: Cosh(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector2)
  nameWithType: MathOps.Cosh(Vector2)
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  name: Cosh(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  nameWithType: MathOps.Cosh(Vector3)
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector4)
  name: Cosh(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector4)
  nameWithType: MathOps.Cosh(Vector4)
- uid: Vim.Math3d.MathOps.Cosh*
  name: Cosh
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cosh_
  commentId: Overload:Vim.Math3d.MathOps.Cosh
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Cosh
  nameWithType: MathOps.Cosh
- uid: Vim.Math3d.MathOps.Cross(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Cross(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cross_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Cross(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Cross(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Cross(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Cross*
  name: Cross
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cross_
  commentId: Overload:Vim.Math3d.MathOps.Cross
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Cross
  nameWithType: MathOps.Cross
- uid: Vim.Math3d.MathOps.Cube(System.Double)
  name: Cube(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_System_Double_
  commentId: M:Vim.Math3d.MathOps.Cube(System.Double)
  fullName: Vim.Math3d.MathOps.Cube(System.Double)
  nameWithType: MathOps.Cube(Double)
- uid: Vim.Math3d.MathOps.Cube(System.Int32)
  name: Cube(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Cube(System.Int32)
  fullName: Vim.Math3d.MathOps.Cube(System.Int32)
  nameWithType: MathOps.Cube(Int32)
- uid: Vim.Math3d.MathOps.Cube(System.Int64)
  name: Cube(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Cube(System.Int64)
  fullName: Vim.Math3d.MathOps.Cube(System.Int64)
  nameWithType: MathOps.Cube(Int64)
- uid: Vim.Math3d.MathOps.Cube(System.Single)
  name: Cube(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_System_Single_
  commentId: M:Vim.Math3d.MathOps.Cube(System.Single)
  fullName: Vim.Math3d.MathOps.Cube(System.Single)
  nameWithType: MathOps.Cube(Single)
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector2)
  name: Cube(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector2)
  nameWithType: MathOps.Cube(DVector2)
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector3)
  name: Cube(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector3)
  nameWithType: MathOps.Cube(DVector3)
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  name: Cube(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  nameWithType: MathOps.Cube(DVector4)
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector2)
  name: Cube(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector2)
  nameWithType: MathOps.Cube(Vector2)
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  name: Cube(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  nameWithType: MathOps.Cube(Vector3)
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector4)
  name: Cube(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector4)
  nameWithType: MathOps.Cube(Vector4)
- uid: Vim.Math3d.MathOps.Cube*
  name: Cube
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Cube_
  commentId: Overload:Vim.Math3d.MathOps.Cube
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Cube
  nameWithType: MathOps.Cube
- uid: Vim.Math3d.MathOps.Distance(System.Double,System.Double)
  name: Distance(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Distance(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Distance(System.Double, System.Double)
  nameWithType: MathOps.Distance(Double, Double)
- uid: Vim.Math3d.MathOps.Distance(System.Single,System.Single)
  name: Distance(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Distance(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Distance(System.Single, System.Single)
  nameWithType: MathOps.Distance(Single, Single)
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Distance(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Distance(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Distance(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Distance(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Distance(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Distance(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Distance(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Distance(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Distance(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Distance(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Distance(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Distance(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Distance*
  name: Distance
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Distance_
  commentId: Overload:Vim.Math3d.MathOps.Distance
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Distance
  nameWithType: MathOps.Distance
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: DistanceSquared(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DistanceSquared_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.DistanceSquared(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: DistanceSquared(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DistanceSquared_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.DistanceSquared(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: DistanceSquared(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DistanceSquared_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.DistanceSquared(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: DistanceSquared(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DistanceSquared_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.DistanceSquared(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: DistanceSquared(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DistanceSquared_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.DistanceSquared(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: DistanceSquared(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DistanceSquared_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.DistanceSquared(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.DistanceSquared*
  name: DistanceSquared
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DistanceSquared_
  commentId: Overload:Vim.Math3d.MathOps.DistanceSquared
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.DistanceSquared
  nameWithType: MathOps.DistanceSquared
- uid: Vim.Math3d.MathOps.Divide(System.Double,System.Double)
  name: Divide(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Divide(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Divide(System.Double, System.Double)
  nameWithType: MathOps.Divide(Double, Double)
- uid: Vim.Math3d.MathOps.Divide(System.Int32,System.Int32)
  name: Divide(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Divide(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Divide(System.Int32, System.Int32)
  nameWithType: MathOps.Divide(Int32, Int32)
- uid: Vim.Math3d.MathOps.Divide(System.Int64,System.Int64)
  name: Divide(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Divide(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Divide(System.Int64, System.Int64)
  nameWithType: MathOps.Divide(Int64, Int64)
- uid: Vim.Math3d.MathOps.Divide(System.Single,System.Single)
  name: Divide(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Divide(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Divide(System.Single, System.Single)
  nameWithType: MathOps.Divide(Single, Single)
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Divide(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Divide(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Divide(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Divide(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Divide(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Divide(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Divide(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Divide(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Divide(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Divide(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Divide(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Divide(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Divide*
  name: Divide
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Divide_
  commentId: Overload:Vim.Math3d.MathOps.Divide
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Divide
  nameWithType: MathOps.Divide
- uid: Vim.Math3d.MathOps.DivideRoundUp(System.Int32,System.Int32)
  name: DivideRoundUp(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DivideRoundUp_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.DivideRoundUp(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.DivideRoundUp(System.Int32, System.Int32)
  nameWithType: MathOps.DivideRoundUp(Int32, Int32)
- uid: Vim.Math3d.MathOps.DivideRoundUp(System.Int64,System.Int64)
  name: DivideRoundUp(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DivideRoundUp_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.DivideRoundUp(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.DivideRoundUp(System.Int64, System.Int64)
  nameWithType: MathOps.DivideRoundUp(Int64, Int64)
- uid: Vim.Math3d.MathOps.DivideRoundUp*
  name: DivideRoundUp
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_DivideRoundUp_
  commentId: Overload:Vim.Math3d.MathOps.DivideRoundUp
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.DivideRoundUp
  nameWithType: MathOps.DivideRoundUp
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Dot(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Dot_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Dot(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Dot(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Dot_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Dot(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Dot(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Dot_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Dot(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Dot(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Dot_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Dot(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Dot(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Dot_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Dot(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Dot(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Dot_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Dot(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Dot*
  name: Dot
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Dot_
  commentId: Overload:Vim.Math3d.MathOps.Dot
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Dot
  nameWithType: MathOps.Dot
- uid: Vim.Math3d.MathOps.Eq(System.Boolean,System.Boolean)
  name: Eq(Boolean, Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Eq_System_Boolean_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.Eq(System.Boolean,System.Boolean)
  fullName: Vim.Math3d.MathOps.Eq(System.Boolean, System.Boolean)
  nameWithType: MathOps.Eq(Boolean, Boolean)
- uid: Vim.Math3d.MathOps.Eq(System.Double,System.Double)
  name: Eq(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Eq_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Eq(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Eq(System.Double, System.Double)
  nameWithType: MathOps.Eq(Double, Double)
- uid: Vim.Math3d.MathOps.Eq(System.Int32,System.Int32)
  name: Eq(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Eq_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Eq(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Eq(System.Int32, System.Int32)
  nameWithType: MathOps.Eq(Int32, Int32)
- uid: Vim.Math3d.MathOps.Eq(System.Int64,System.Int64)
  name: Eq(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Eq_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Eq(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Eq(System.Int64, System.Int64)
  nameWithType: MathOps.Eq(Int64, Int64)
- uid: Vim.Math3d.MathOps.Eq(System.Single,System.Single)
  name: Eq(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Eq_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Eq(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Eq(System.Single, System.Single)
  nameWithType: MathOps.Eq(Single, Single)
- uid: Vim.Math3d.MathOps.Eq*
  name: Eq
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Eq_
  commentId: Overload:Vim.Math3d.MathOps.Eq
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Eq
  nameWithType: MathOps.Eq
- uid: Vim.Math3d.MathOps.Exp(System.Double)
  name: Exp(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_System_Double_
  commentId: M:Vim.Math3d.MathOps.Exp(System.Double)
  fullName: Vim.Math3d.MathOps.Exp(System.Double)
  nameWithType: MathOps.Exp(Double)
- uid: Vim.Math3d.MathOps.Exp(System.Single)
  name: Exp(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_System_Single_
  commentId: M:Vim.Math3d.MathOps.Exp(System.Single)
  fullName: Vim.Math3d.MathOps.Exp(System.Single)
  nameWithType: MathOps.Exp(Single)
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector2)
  name: Exp(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector2)
  nameWithType: MathOps.Exp(DVector2)
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector3)
  name: Exp(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector3)
  nameWithType: MathOps.Exp(DVector3)
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  name: Exp(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  nameWithType: MathOps.Exp(DVector4)
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector2)
  name: Exp(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector2)
  nameWithType: MathOps.Exp(Vector2)
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  name: Exp(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  nameWithType: MathOps.Exp(Vector3)
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector4)
  name: Exp(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector4)
  nameWithType: MathOps.Exp(Vector4)
- uid: Vim.Math3d.MathOps.Exp*
  name: Exp
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Exp_
  commentId: Overload:Vim.Math3d.MathOps.Exp
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Exp
  nameWithType: MathOps.Exp
- uid: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name: Extents(IEnumerable<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name.vb: Extents(IEnumerable(Of DVector2))
  fullName: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Extents(IEnumerable<DVector2>)
  nameWithType.vb: MathOps.Extents(IEnumerable(Of DVector2))
- uid: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name: Extents(IEnumerable<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name.vb: Extents(IEnumerable(Of DVector3))
  fullName: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Extents(IEnumerable<DVector3>)
  nameWithType.vb: MathOps.Extents(IEnumerable(Of DVector3))
- uid: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name: Extents(IEnumerable<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name.vb: Extents(IEnumerable(Of DVector4))
  fullName: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Extents(IEnumerable<DVector4>)
  nameWithType.vb: MathOps.Extents(IEnumerable(Of DVector4))
- uid: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: Extents(IEnumerable<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: Extents(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Extents(IEnumerable<Vector2>)
  nameWithType.vb: MathOps.Extents(IEnumerable(Of Vector2))
- uid: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Extents(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Extents(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Extents(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.Extents(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name: Extents(IEnumerable<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name.vb: Extents(IEnumerable(Of Vector4))
  fullName: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Extents(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Extents(IEnumerable<Vector4>)
  nameWithType.vb: MathOps.Extents(IEnumerable(Of Vector4))
- uid: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.DVector2})
  name: Extents(Stats<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_Vim_Math3d_Stats_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.DVector2})
  name.vb: Extents(Stats(Of DVector2))
  fullName: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Extents(Stats<DVector2>)
  nameWithType.vb: MathOps.Extents(Stats(Of DVector2))
- uid: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name: Extents(Stats<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_Vim_Math3d_Stats_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name.vb: Extents(Stats(Of DVector3))
  fullName: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Extents(Stats<DVector3>)
  nameWithType.vb: MathOps.Extents(Stats(Of DVector3))
- uid: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.DVector4})
  name: Extents(Stats<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_Vim_Math3d_Stats_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.DVector4})
  name.vb: Extents(Stats(Of DVector4))
  fullName: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Extents(Stats<DVector4>)
  nameWithType.vb: MathOps.Extents(Stats(Of DVector4))
- uid: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.Vector2})
  name: Extents(Stats<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_Vim_Math3d_Stats_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.Vector2})
  name.vb: Extents(Stats(Of Vector2))
  fullName: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Extents(Stats<Vector2>)
  nameWithType.vb: MathOps.Extents(Stats(Of Vector2))
- uid: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name: Extents(Stats<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_Vim_Math3d_Stats_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name.vb: Extents(Stats(Of Vector3))
  fullName: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Extents(Stats<Vector3>)
  nameWithType.vb: MathOps.Extents(Stats(Of Vector3))
- uid: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.Vector4})
  name: Extents(Stats<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_Vim_Math3d_Stats_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats{Vim.Math3d.Vector4})
  name.vb: Extents(Stats(Of Vector4))
  fullName: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Extents(Vim.Math3d.Stats(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Extents(Stats<Vector4>)
  nameWithType.vb: MathOps.Extents(Stats(Of Vector4))
- uid: Vim.Math3d.MathOps.Extents*
  name: Extents
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Extents_
  commentId: Overload:Vim.Math3d.MathOps.Extents
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Extents
  nameWithType: MathOps.Extents
- uid: Vim.Math3d.MathOps.Floor(System.Double)
  name: Floor(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_System_Double_
  commentId: M:Vim.Math3d.MathOps.Floor(System.Double)
  fullName: Vim.Math3d.MathOps.Floor(System.Double)
  nameWithType: MathOps.Floor(Double)
- uid: Vim.Math3d.MathOps.Floor(System.Single)
  name: Floor(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_System_Single_
  commentId: M:Vim.Math3d.MathOps.Floor(System.Single)
  fullName: Vim.Math3d.MathOps.Floor(System.Single)
  nameWithType: MathOps.Floor(Single)
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector2)
  name: Floor(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector2)
  nameWithType: MathOps.Floor(DVector2)
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector3)
  name: Floor(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector3)
  nameWithType: MathOps.Floor(DVector3)
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  name: Floor(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  nameWithType: MathOps.Floor(DVector4)
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector2)
  name: Floor(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector2)
  nameWithType: MathOps.Floor(Vector2)
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  name: Floor(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  nameWithType: MathOps.Floor(Vector3)
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector4)
  name: Floor(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector4)
  nameWithType: MathOps.Floor(Vector4)
- uid: Vim.Math3d.MathOps.Floor*
  name: Floor
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Floor_
  commentId: Overload:Vim.Math3d.MathOps.Floor
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Floor
  nameWithType: MathOps.Floor
- uid: Vim.Math3d.MathOps.Gt(System.Double,System.Double)
  name: Gt(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Gt_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Gt(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Gt(System.Double, System.Double)
  nameWithType: MathOps.Gt(Double, Double)
- uid: Vim.Math3d.MathOps.Gt(System.Int32,System.Int32)
  name: Gt(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Gt_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Gt(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Gt(System.Int32, System.Int32)
  nameWithType: MathOps.Gt(Int32, Int32)
- uid: Vim.Math3d.MathOps.Gt(System.Int64,System.Int64)
  name: Gt(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Gt_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Gt(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Gt(System.Int64, System.Int64)
  nameWithType: MathOps.Gt(Int64, Int64)
- uid: Vim.Math3d.MathOps.Gt(System.Single,System.Single)
  name: Gt(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Gt_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Gt(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Gt(System.Single, System.Single)
  nameWithType: MathOps.Gt(Single, Single)
- uid: Vim.Math3d.MathOps.Gt*
  name: Gt
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Gt_
  commentId: Overload:Vim.Math3d.MathOps.Gt
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Gt
  nameWithType: MathOps.Gt
- uid: Vim.Math3d.MathOps.GtEq(System.Double,System.Double)
  name: GtEq(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_GtEq_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.GtEq(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.GtEq(System.Double, System.Double)
  nameWithType: MathOps.GtEq(Double, Double)
- uid: Vim.Math3d.MathOps.GtEq(System.Int32,System.Int32)
  name: GtEq(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_GtEq_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.GtEq(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.GtEq(System.Int32, System.Int32)
  nameWithType: MathOps.GtEq(Int32, Int32)
- uid: Vim.Math3d.MathOps.GtEq(System.Int64,System.Int64)
  name: GtEq(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_GtEq_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.GtEq(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.GtEq(System.Int64, System.Int64)
  nameWithType: MathOps.GtEq(Int64, Int64)
- uid: Vim.Math3d.MathOps.GtEq(System.Single,System.Single)
  name: GtEq(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_GtEq_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.GtEq(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.GtEq(System.Single, System.Single)
  nameWithType: MathOps.GtEq(Single, Single)
- uid: Vim.Math3d.MathOps.GtEq*
  name: GtEq
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_GtEq_
  commentId: Overload:Vim.Math3d.MathOps.GtEq
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.GtEq
  nameWithType: MathOps.GtEq
- uid: Vim.Math3d.MathOps.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)
  name: Hermite(Single, Single, Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Hermite_System_Single_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Hermite(System.Single, System.Single, System.Single, System.Single, System.Single)
  nameWithType: MathOps.Hermite(Single, Single, Single, Single, Single)
- uid: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Hermite(Vector3, Vector3, Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Hermite_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.Hermite(Vector3, Vector3, Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.Hermite*
  name: Hermite
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Hermite_
  commentId: Overload:Vim.Math3d.MathOps.Hermite
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Hermite
  nameWithType: MathOps.Hermite
- uid: Vim.Math3d.MathOps.Inverse(System.Double)
  name: Inverse(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_System_Double_
  commentId: M:Vim.Math3d.MathOps.Inverse(System.Double)
  fullName: Vim.Math3d.MathOps.Inverse(System.Double)
  nameWithType: MathOps.Inverse(Double)
- uid: Vim.Math3d.MathOps.Inverse(System.Single)
  name: Inverse(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_System_Single_
  commentId: M:Vim.Math3d.MathOps.Inverse(System.Single)
  fullName: Vim.Math3d.MathOps.Inverse(System.Single)
  nameWithType: MathOps.Inverse(Single)
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector2)
  name: Inverse(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector2)
  nameWithType: MathOps.Inverse(DVector2)
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector3)
  name: Inverse(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector3)
  nameWithType: MathOps.Inverse(DVector3)
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  name: Inverse(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  nameWithType: MathOps.Inverse(DVector4)
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Matrix4x4)
  name: Inverse(Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.Inverse(Matrix4x4)
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector2)
  name: Inverse(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector2)
  nameWithType: MathOps.Inverse(Vector2)
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  name: Inverse(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  nameWithType: MathOps.Inverse(Vector3)
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector4)
  name: Inverse(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector4)
  nameWithType: MathOps.Inverse(Vector4)
- uid: Vim.Math3d.MathOps.Inverse*
  name: Inverse
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Inverse_
  commentId: Overload:Vim.Math3d.MathOps.Inverse
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Inverse
  nameWithType: MathOps.Inverse
- uid: Vim.Math3d.MathOps.InverseLerp(System.Double,System.Double,System.Double)
  name: InverseLerp(Double, Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.InverseLerp(System.Double, System.Double, System.Double)
  nameWithType: MathOps.InverseLerp(Double, Double, Double)
- uid: Vim.Math3d.MathOps.InverseLerp(System.Single,System.Single,System.Single)
  name: InverseLerp(Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.InverseLerp(System.Single, System.Single, System.Single)
  nameWithType: MathOps.InverseLerp(Single, Single, Single)
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector2,Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: InverseLerp(DVector2, DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_Vim_Math3d_DVector2_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector2,Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector2, Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.InverseLerp(DVector2, DVector2, DVector2)
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector3,Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: InverseLerp(DVector3, DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_Vim_Math3d_DVector3_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector3,Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector3, Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.InverseLerp(DVector3, DVector3, DVector3)
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: InverseLerp(DVector4, DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_Vim_Math3d_DVector4_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4, Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.InverseLerp(DVector4, DVector4, DVector4)
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: InverseLerp(Vector2, Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.InverseLerp(Vector2, Vector2, Vector2)
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: InverseLerp(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.InverseLerp(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: InverseLerp(Vector4, Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_Vim_Math3d_Vector4_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector4, Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.InverseLerp(Vector4, Vector4, Vector4)
- uid: Vim.Math3d.MathOps.InverseLerp*
  name: InverseLerp
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_InverseLerp_
  commentId: Overload:Vim.Math3d.MathOps.InverseLerp
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.InverseLerp
  nameWithType: MathOps.InverseLerp
- uid: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: IsBackFace(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsBackFace_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.IsBackFace(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.IsBackFace*
  name: IsBackFace
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsBackFace_
  commentId: Overload:Vim.Math3d.MathOps.IsBackFace
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsBackFace
  nameWithType: MathOps.IsBackFace
- uid: Vim.Math3d.MathOps.IsEven(System.Int32)
  name: IsEven(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsEven_System_Int32_
  commentId: M:Vim.Math3d.MathOps.IsEven(System.Int32)
  fullName: Vim.Math3d.MathOps.IsEven(System.Int32)
  nameWithType: MathOps.IsEven(Int32)
- uid: Vim.Math3d.MathOps.IsEven(System.Int64)
  name: IsEven(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsEven_System_Int64_
  commentId: M:Vim.Math3d.MathOps.IsEven(System.Int64)
  fullName: Vim.Math3d.MathOps.IsEven(System.Int64)
  nameWithType: MathOps.IsEven(Int64)
- uid: Vim.Math3d.MathOps.IsEven*
  name: IsEven
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsEven_
  commentId: Overload:Vim.Math3d.MathOps.IsEven
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsEven
  nameWithType: MathOps.IsEven
- uid: Vim.Math3d.MathOps.IsInfinity(System.Double)
  name: IsInfinity(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsInfinity_System_Double_
  commentId: M:Vim.Math3d.MathOps.IsInfinity(System.Double)
  fullName: Vim.Math3d.MathOps.IsInfinity(System.Double)
  nameWithType: MathOps.IsInfinity(Double)
- uid: Vim.Math3d.MathOps.IsInfinity(System.Int32)
  name: IsInfinity(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsInfinity_System_Int32_
  commentId: M:Vim.Math3d.MathOps.IsInfinity(System.Int32)
  fullName: Vim.Math3d.MathOps.IsInfinity(System.Int32)
  nameWithType: MathOps.IsInfinity(Int32)
- uid: Vim.Math3d.MathOps.IsInfinity(System.Int64)
  name: IsInfinity(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsInfinity_System_Int64_
  commentId: M:Vim.Math3d.MathOps.IsInfinity(System.Int64)
  fullName: Vim.Math3d.MathOps.IsInfinity(System.Int64)
  nameWithType: MathOps.IsInfinity(Int64)
- uid: Vim.Math3d.MathOps.IsInfinity(System.Single)
  name: IsInfinity(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsInfinity_System_Single_
  commentId: M:Vim.Math3d.MathOps.IsInfinity(System.Single)
  fullName: Vim.Math3d.MathOps.IsInfinity(System.Single)
  nameWithType: MathOps.IsInfinity(Single)
- uid: Vim.Math3d.MathOps.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsInfinity_
  commentId: Overload:Vim.Math3d.MathOps.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsInfinity
  nameWithType: MathOps.IsInfinity
- uid: Vim.Math3d.MathOps.IsNaN(System.Double)
  name: IsNaN(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNaN_System_Double_
  commentId: M:Vim.Math3d.MathOps.IsNaN(System.Double)
  fullName: Vim.Math3d.MathOps.IsNaN(System.Double)
  nameWithType: MathOps.IsNaN(Double)
- uid: Vim.Math3d.MathOps.IsNaN(System.Int32)
  name: IsNaN(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNaN_System_Int32_
  commentId: M:Vim.Math3d.MathOps.IsNaN(System.Int32)
  fullName: Vim.Math3d.MathOps.IsNaN(System.Int32)
  nameWithType: MathOps.IsNaN(Int32)
- uid: Vim.Math3d.MathOps.IsNaN(System.Int64)
  name: IsNaN(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNaN_System_Int64_
  commentId: M:Vim.Math3d.MathOps.IsNaN(System.Int64)
  fullName: Vim.Math3d.MathOps.IsNaN(System.Int64)
  nameWithType: MathOps.IsNaN(Int64)
- uid: Vim.Math3d.MathOps.IsNaN(System.Single)
  name: IsNaN(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNaN_System_Single_
  commentId: M:Vim.Math3d.MathOps.IsNaN(System.Single)
  fullName: Vim.Math3d.MathOps.IsNaN(System.Single)
  nameWithType: MathOps.IsNaN(Single)
- uid: Vim.Math3d.MathOps.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNaN_
  commentId: Overload:Vim.Math3d.MathOps.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsNaN
  nameWithType: MathOps.IsNaN
- uid: Vim.Math3d.MathOps.IsNonZeroAndValid(System.Single,System.Single)
  name: IsNonZeroAndValid(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNonZeroAndValid_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.IsNonZeroAndValid(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.IsNonZeroAndValid(System.Single, System.Single)
  nameWithType: MathOps.IsNonZeroAndValid(Single, Single)
- uid: Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  name: IsNonZeroAndValid(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNonZeroAndValid_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  nameWithType: MathOps.IsNonZeroAndValid(Vector3)
- uid: Vim.Math3d.MathOps.IsNonZeroAndValid*
  name: IsNonZeroAndValid
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsNonZeroAndValid_
  commentId: Overload:Vim.Math3d.MathOps.IsNonZeroAndValid
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsNonZeroAndValid
  nameWithType: MathOps.IsNonZeroAndValid
- uid: Vim.Math3d.MathOps.IsOdd(System.Int32)
  name: IsOdd(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsOdd_System_Int32_
  commentId: M:Vim.Math3d.MathOps.IsOdd(System.Int32)
  fullName: Vim.Math3d.MathOps.IsOdd(System.Int32)
  nameWithType: MathOps.IsOdd(Int32)
- uid: Vim.Math3d.MathOps.IsOdd(System.Int64)
  name: IsOdd(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsOdd_System_Int64_
  commentId: M:Vim.Math3d.MathOps.IsOdd(System.Int64)
  fullName: Vim.Math3d.MathOps.IsOdd(System.Int64)
  nameWithType: MathOps.IsOdd(Int64)
- uid: Vim.Math3d.MathOps.IsOdd*
  name: IsOdd
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsOdd_
  commentId: Overload:Vim.Math3d.MathOps.IsOdd
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsOdd
  nameWithType: MathOps.IsOdd
- uid: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: IsPerpendicular(Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsPerpendicular_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.IsPerpendicular(Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.IsPerpendicular*
  name: IsPerpendicular
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsPerpendicular_
  commentId: Overload:Vim.Math3d.MathOps.IsPerpendicular
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsPerpendicular
  nameWithType: MathOps.IsPerpendicular
- uid: Vim.Math3d.MathOps.IsPowerOfTwo(System.Int32)
  name: IsPowerOfTwo(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsPowerOfTwo_System_Int32_
  commentId: M:Vim.Math3d.MathOps.IsPowerOfTwo(System.Int32)
  fullName: Vim.Math3d.MathOps.IsPowerOfTwo(System.Int32)
  nameWithType: MathOps.IsPowerOfTwo(Int32)
- uid: Vim.Math3d.MathOps.IsPowerOfTwo(System.Int64)
  name: IsPowerOfTwo(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsPowerOfTwo_System_Int64_
  commentId: M:Vim.Math3d.MathOps.IsPowerOfTwo(System.Int64)
  fullName: Vim.Math3d.MathOps.IsPowerOfTwo(System.Int64)
  nameWithType: MathOps.IsPowerOfTwo(Int64)
- uid: Vim.Math3d.MathOps.IsPowerOfTwo*
  name: IsPowerOfTwo
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsPowerOfTwo_
  commentId: Overload:Vim.Math3d.MathOps.IsPowerOfTwo
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsPowerOfTwo
  nameWithType: MathOps.IsPowerOfTwo
- uid: Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  name: IsZeroOrInvalid(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsZeroOrInvalid_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  nameWithType: MathOps.IsZeroOrInvalid(Vector3)
- uid: Vim.Math3d.MathOps.IsZeroOrInvalid*
  name: IsZeroOrInvalid
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_IsZeroOrInvalid_
  commentId: Overload:Vim.Math3d.MathOps.IsZeroOrInvalid
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.IsZeroOrInvalid
  nameWithType: MathOps.IsZeroOrInvalid
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector2)
  name: Length(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Length_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector2)
  nameWithType: MathOps.Length(DVector2)
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector3)
  name: Length(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Length_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector3)
  nameWithType: MathOps.Length(DVector3)
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  name: Length(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Length_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  nameWithType: MathOps.Length(DVector4)
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector2)
  name: Length(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Length_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector2)
  nameWithType: MathOps.Length(Vector2)
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  name: Length(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Length_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  nameWithType: MathOps.Length(Vector3)
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector4)
  name: Length(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Length_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector4)
  nameWithType: MathOps.Length(Vector4)
- uid: Vim.Math3d.MathOps.Length*
  name: Length
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Length_
  commentId: Overload:Vim.Math3d.MathOps.Length
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Length
  nameWithType: MathOps.Length
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector2)
  name: LengthSquared(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LengthSquared_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector2)
  nameWithType: MathOps.LengthSquared(DVector2)
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector3)
  name: LengthSquared(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LengthSquared_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector3)
  nameWithType: MathOps.LengthSquared(DVector3)
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  name: LengthSquared(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LengthSquared_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  nameWithType: MathOps.LengthSquared(DVector4)
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector2)
  name: LengthSquared(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LengthSquared_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector2)
  nameWithType: MathOps.LengthSquared(Vector2)
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  name: LengthSquared(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LengthSquared_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  nameWithType: MathOps.LengthSquared(Vector3)
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector4)
  name: LengthSquared(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LengthSquared_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector4)
  nameWithType: MathOps.LengthSquared(Vector4)
- uid: Vim.Math3d.MathOps.LengthSquared*
  name: LengthSquared
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LengthSquared_
  commentId: Overload:Vim.Math3d.MathOps.LengthSquared
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.LengthSquared
  nameWithType: MathOps.LengthSquared
- uid: Vim.Math3d.MathOps.Lerp(System.Double,System.Double,System.Single)
  name: Lerp(Double, Double, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_System_Double_System_Double_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(System.Double,System.Double,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(System.Double, System.Double, System.Single)
  nameWithType: MathOps.Lerp(Double, Double, Single)
- uid: Vim.Math3d.MathOps.Lerp(System.Single,System.Single,System.Single)
  name: Lerp(Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(System.Single, System.Single, System.Single)
  nameWithType: MathOps.Lerp(Single, Single, Single)
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector2,Vim.Math3d.DVector2,System.Single)
  name: Lerp(DVector2, DVector2, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_Vim_Math3d_DVector2_Vim_Math3d_DVector2_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector2,Vim.Math3d.DVector2,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector2, Vim.Math3d.DVector2, System.Single)
  nameWithType: MathOps.Lerp(DVector2, DVector2, Single)
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector3,Vim.Math3d.DVector3,System.Single)
  name: Lerp(DVector3, DVector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_Vim_Math3d_DVector3_Vim_Math3d_DVector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector3,Vim.Math3d.DVector3,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector3, Vim.Math3d.DVector3, System.Single)
  nameWithType: MathOps.Lerp(DVector3, DVector3, Single)
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  name: Lerp(DVector4, DVector4, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_Vim_Math3d_DVector4_Vim_Math3d_DVector4_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4, Vim.Math3d.DVector4, System.Single)
  nameWithType: MathOps.Lerp(DVector4, DVector4, Single)
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector2,Vim.Math3d.Vector2,System.Single)
  name: Lerp(Vector2, Vector2, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_Vim_Math3d_Vector2_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector2,Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector2, Vim.Math3d.Vector2, System.Single)
  nameWithType: MathOps.Lerp(Vector2, Vector2, Single)
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Lerp(Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.Lerp(Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector4,Vim.Math3d.Vector4,System.Single)
  name: Lerp(Vector4, Vector4, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_Vim_Math3d_Vector4_Vim_Math3d_Vector4_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector4,Vim.Math3d.Vector4,System.Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector4, Vim.Math3d.Vector4, System.Single)
  nameWithType: MathOps.Lerp(Vector4, Vector4, Single)
- uid: Vim.Math3d.MathOps.Lerp*
  name: Lerp
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lerp_
  commentId: Overload:Vim.Math3d.MathOps.Lerp
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Lerp
  nameWithType: MathOps.Lerp
- uid: Vim.Math3d.MathOps.LerpPrecise(System.Double,System.Double,System.Single)
  name: LerpPrecise(Double, Double, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_System_Double_System_Double_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(System.Double,System.Double,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(System.Double, System.Double, System.Single)
  nameWithType: MathOps.LerpPrecise(Double, Double, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise(System.Single,System.Single,System.Single)
  name: LerpPrecise(Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(System.Single, System.Single, System.Single)
  nameWithType: MathOps.LerpPrecise(Single, Single, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector2,Vim.Math3d.DVector2,System.Single)
  name: LerpPrecise(DVector2, DVector2, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_Vim_Math3d_DVector2_Vim_Math3d_DVector2_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector2,Vim.Math3d.DVector2,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector2, Vim.Math3d.DVector2, System.Single)
  nameWithType: MathOps.LerpPrecise(DVector2, DVector2, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector3,Vim.Math3d.DVector3,System.Single)
  name: LerpPrecise(DVector3, DVector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_Vim_Math3d_DVector3_Vim_Math3d_DVector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector3,Vim.Math3d.DVector3,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector3, Vim.Math3d.DVector3, System.Single)
  nameWithType: MathOps.LerpPrecise(DVector3, DVector3, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  name: LerpPrecise(DVector4, DVector4, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_Vim_Math3d_DVector4_Vim_Math3d_DVector4_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4, Vim.Math3d.DVector4, System.Single)
  nameWithType: MathOps.LerpPrecise(DVector4, DVector4, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector2,Vim.Math3d.Vector2,System.Single)
  name: LerpPrecise(Vector2, Vector2, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_Vim_Math3d_Vector2_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector2,Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector2, Vim.Math3d.Vector2, System.Single)
  nameWithType: MathOps.LerpPrecise(Vector2, Vector2, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: LerpPrecise(Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.LerpPrecise(Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector4,Vim.Math3d.Vector4,System.Single)
  name: LerpPrecise(Vector4, Vector4, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_Vim_Math3d_Vector4_Vim_Math3d_Vector4_System_Single_
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector4,Vim.Math3d.Vector4,System.Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector4, Vim.Math3d.Vector4, System.Single)
  nameWithType: MathOps.LerpPrecise(Vector4, Vector4, Single)
- uid: Vim.Math3d.MathOps.LerpPrecise*
  name: LerpPrecise
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LerpPrecise_
  commentId: Overload:Vim.Math3d.MathOps.LerpPrecise
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.LerpPrecise
  nameWithType: MathOps.LerpPrecise
- uid: Vim.Math3d.MathOps.Log(System.Double)
  name: Log(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_System_Double_
  commentId: M:Vim.Math3d.MathOps.Log(System.Double)
  fullName: Vim.Math3d.MathOps.Log(System.Double)
  nameWithType: MathOps.Log(Double)
- uid: Vim.Math3d.MathOps.Log(System.Single)
  name: Log(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_System_Single_
  commentId: M:Vim.Math3d.MathOps.Log(System.Single)
  fullName: Vim.Math3d.MathOps.Log(System.Single)
  nameWithType: MathOps.Log(Single)
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector2)
  name: Log(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector2)
  nameWithType: MathOps.Log(DVector2)
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector3)
  name: Log(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector3)
  nameWithType: MathOps.Log(DVector3)
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  name: Log(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  nameWithType: MathOps.Log(DVector4)
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector2)
  name: Log(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector2)
  nameWithType: MathOps.Log(Vector2)
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  name: Log(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  nameWithType: MathOps.Log(Vector3)
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector4)
  name: Log(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector4)
  nameWithType: MathOps.Log(Vector4)
- uid: Vim.Math3d.MathOps.Log*
  name: Log
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log_
  commentId: Overload:Vim.Math3d.MathOps.Log
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Log
  nameWithType: MathOps.Log
- uid: Vim.Math3d.MathOps.Log10(System.Double)
  name: Log10(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_System_Double_
  commentId: M:Vim.Math3d.MathOps.Log10(System.Double)
  fullName: Vim.Math3d.MathOps.Log10(System.Double)
  nameWithType: MathOps.Log10(Double)
- uid: Vim.Math3d.MathOps.Log10(System.Single)
  name: Log10(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_System_Single_
  commentId: M:Vim.Math3d.MathOps.Log10(System.Single)
  fullName: Vim.Math3d.MathOps.Log10(System.Single)
  nameWithType: MathOps.Log10(Single)
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector2)
  name: Log10(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector2)
  nameWithType: MathOps.Log10(DVector2)
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector3)
  name: Log10(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector3)
  nameWithType: MathOps.Log10(DVector3)
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  name: Log10(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  nameWithType: MathOps.Log10(DVector4)
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector2)
  name: Log10(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector2)
  nameWithType: MathOps.Log10(Vector2)
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  name: Log10(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  nameWithType: MathOps.Log10(Vector3)
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector4)
  name: Log10(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector4)
  nameWithType: MathOps.Log10(Vector4)
- uid: Vim.Math3d.MathOps.Log10*
  name: Log10
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Log10_
  commentId: Overload:Vim.Math3d.MathOps.Log10
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Log10
  nameWithType: MathOps.Log10
- uid: Vim.Math3d.MathOps.Lt(System.Double,System.Double)
  name: Lt(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lt_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Lt(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Lt(System.Double, System.Double)
  nameWithType: MathOps.Lt(Double, Double)
- uid: Vim.Math3d.MathOps.Lt(System.Int32,System.Int32)
  name: Lt(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lt_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Lt(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Lt(System.Int32, System.Int32)
  nameWithType: MathOps.Lt(Int32, Int32)
- uid: Vim.Math3d.MathOps.Lt(System.Int64,System.Int64)
  name: Lt(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lt_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Lt(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Lt(System.Int64, System.Int64)
  nameWithType: MathOps.Lt(Int64, Int64)
- uid: Vim.Math3d.MathOps.Lt(System.Single,System.Single)
  name: Lt(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lt_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Lt(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Lt(System.Single, System.Single)
  nameWithType: MathOps.Lt(Single, Single)
- uid: Vim.Math3d.MathOps.Lt*
  name: Lt
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Lt_
  commentId: Overload:Vim.Math3d.MathOps.Lt
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Lt
  nameWithType: MathOps.Lt
- uid: Vim.Math3d.MathOps.LtEq(System.Double,System.Double)
  name: LtEq(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LtEq_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.LtEq(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.LtEq(System.Double, System.Double)
  nameWithType: MathOps.LtEq(Double, Double)
- uid: Vim.Math3d.MathOps.LtEq(System.Int32,System.Int32)
  name: LtEq(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LtEq_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.LtEq(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.LtEq(System.Int32, System.Int32)
  nameWithType: MathOps.LtEq(Int32, Int32)
- uid: Vim.Math3d.MathOps.LtEq(System.Int64,System.Int64)
  name: LtEq(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LtEq_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.LtEq(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.LtEq(System.Int64, System.Int64)
  nameWithType: MathOps.LtEq(Int64, Int64)
- uid: Vim.Math3d.MathOps.LtEq(System.Single,System.Single)
  name: LtEq(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LtEq_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.LtEq(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.LtEq(System.Single, System.Single)
  nameWithType: MathOps.LtEq(Single, Single)
- uid: Vim.Math3d.MathOps.LtEq*
  name: LtEq
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_LtEq_
  commentId: Overload:Vim.Math3d.MathOps.LtEq
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.LtEq
  nameWithType: MathOps.LtEq
- uid: Vim.Math3d.MathOps.Magnitude(System.Double)
  name: Magnitude(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Magnitude_System_Double_
  commentId: M:Vim.Math3d.MathOps.Magnitude(System.Double)
  fullName: Vim.Math3d.MathOps.Magnitude(System.Double)
  nameWithType: MathOps.Magnitude(Double)
- uid: Vim.Math3d.MathOps.Magnitude(System.Int32)
  name: Magnitude(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Magnitude_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Magnitude(System.Int32)
  fullName: Vim.Math3d.MathOps.Magnitude(System.Int32)
  nameWithType: MathOps.Magnitude(Int32)
- uid: Vim.Math3d.MathOps.Magnitude(System.Int64)
  name: Magnitude(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Magnitude_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Magnitude(System.Int64)
  fullName: Vim.Math3d.MathOps.Magnitude(System.Int64)
  nameWithType: MathOps.Magnitude(Int64)
- uid: Vim.Math3d.MathOps.Magnitude(System.Single)
  name: Magnitude(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Magnitude_System_Single_
  commentId: M:Vim.Math3d.MathOps.Magnitude(System.Single)
  fullName: Vim.Math3d.MathOps.Magnitude(System.Single)
  nameWithType: MathOps.Magnitude(Single)
- uid: Vim.Math3d.MathOps.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Magnitude_
  commentId: Overload:Vim.Math3d.MathOps.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Magnitude
  nameWithType: MathOps.Magnitude
- uid: Vim.Math3d.MathOps.MagnitudeSquared(System.Double)
  name: MagnitudeSquared(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_MagnitudeSquared_System_Double_
  commentId: M:Vim.Math3d.MathOps.MagnitudeSquared(System.Double)
  fullName: Vim.Math3d.MathOps.MagnitudeSquared(System.Double)
  nameWithType: MathOps.MagnitudeSquared(Double)
- uid: Vim.Math3d.MathOps.MagnitudeSquared(System.Int32)
  name: MagnitudeSquared(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_MagnitudeSquared_System_Int32_
  commentId: M:Vim.Math3d.MathOps.MagnitudeSquared(System.Int32)
  fullName: Vim.Math3d.MathOps.MagnitudeSquared(System.Int32)
  nameWithType: MathOps.MagnitudeSquared(Int32)
- uid: Vim.Math3d.MathOps.MagnitudeSquared(System.Int64)
  name: MagnitudeSquared(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_MagnitudeSquared_System_Int64_
  commentId: M:Vim.Math3d.MathOps.MagnitudeSquared(System.Int64)
  fullName: Vim.Math3d.MathOps.MagnitudeSquared(System.Int64)
  nameWithType: MathOps.MagnitudeSquared(Int64)
- uid: Vim.Math3d.MathOps.MagnitudeSquared(System.Single)
  name: MagnitudeSquared(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_MagnitudeSquared_System_Single_
  commentId: M:Vim.Math3d.MathOps.MagnitudeSquared(System.Single)
  fullName: Vim.Math3d.MathOps.MagnitudeSquared(System.Single)
  nameWithType: MathOps.MagnitudeSquared(Single)
- uid: Vim.Math3d.MathOps.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.MathOps.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.MagnitudeSquared
  nameWithType: MathOps.MagnitudeSquared
- uid: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name: Max(IEnumerable<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name.vb: Max(IEnumerable(Of DVector2))
  fullName: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Max(IEnumerable<DVector2>)
  nameWithType.vb: MathOps.Max(IEnumerable(Of DVector2))
- uid: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name: Max(IEnumerable<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name.vb: Max(IEnumerable(Of DVector3))
  fullName: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Max(IEnumerable<DVector3>)
  nameWithType.vb: MathOps.Max(IEnumerable(Of DVector3))
- uid: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name: Max(IEnumerable<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name.vb: Max(IEnumerable(Of DVector4))
  fullName: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Max(IEnumerable<DVector4>)
  nameWithType.vb: MathOps.Max(IEnumerable(Of DVector4))
- uid: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: Max(IEnumerable<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: Max(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Max(IEnumerable<Vector2>)
  nameWithType.vb: MathOps.Max(IEnumerable(Of Vector2))
- uid: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Max(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Max(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Max(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.Max(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name: Max(IEnumerable<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name.vb: Max(IEnumerable(Of Vector4))
  fullName: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Max(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Max(IEnumerable<Vector4>)
  nameWithType.vb: MathOps.Max(IEnumerable(Of Vector4))
- uid: Vim.Math3d.MathOps.Max(System.Double,System.Double)
  name: Max(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Max(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Max(System.Double, System.Double)
  nameWithType: MathOps.Max(Double, Double)
- uid: Vim.Math3d.MathOps.Max(System.Int32,System.Int32)
  name: Max(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Max(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Max(System.Int32, System.Int32)
  nameWithType: MathOps.Max(Int32, Int32)
- uid: Vim.Math3d.MathOps.Max(System.Int64,System.Int64)
  name: Max(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Max(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Max(System.Int64, System.Int64)
  nameWithType: MathOps.Max(Int64, Int64)
- uid: Vim.Math3d.MathOps.Max(System.Single,System.Single)
  name: Max(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Max(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Max(System.Single, System.Single)
  nameWithType: MathOps.Max(Single, Single)
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Max(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Max(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Max(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Max(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Max(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Max(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Max(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Max(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Max(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Max(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Max(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Max(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Max*
  name: Max
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Max_
  commentId: Overload:Vim.Math3d.MathOps.Max
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Max
  nameWithType: MathOps.Max
- uid: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name: Middle(IEnumerable<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name.vb: Middle(IEnumerable(Of DVector2))
  fullName: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Middle(IEnumerable<DVector2>)
  nameWithType.vb: MathOps.Middle(IEnumerable(Of DVector2))
- uid: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name: Middle(IEnumerable<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name.vb: Middle(IEnumerable(Of DVector3))
  fullName: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Middle(IEnumerable<DVector3>)
  nameWithType.vb: MathOps.Middle(IEnumerable(Of DVector3))
- uid: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name: Middle(IEnumerable<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name.vb: Middle(IEnumerable(Of DVector4))
  fullName: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Middle(IEnumerable<DVector4>)
  nameWithType.vb: MathOps.Middle(IEnumerable(Of DVector4))
- uid: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: Middle(IEnumerable<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: Middle(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Middle(IEnumerable<Vector2>)
  nameWithType.vb: MathOps.Middle(IEnumerable(Of Vector2))
- uid: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Middle(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Middle(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Middle(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.Middle(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name: Middle(IEnumerable<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name.vb: Middle(IEnumerable(Of Vector4))
  fullName: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Middle(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Middle(IEnumerable<Vector4>)
  nameWithType.vb: MathOps.Middle(IEnumerable(Of Vector4))
- uid: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.DVector2})
  name: Middle(Stats<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_Vim_Math3d_Stats_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.DVector2})
  name.vb: Middle(Stats(Of DVector2))
  fullName: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Middle(Stats<DVector2>)
  nameWithType.vb: MathOps.Middle(Stats(Of DVector2))
- uid: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name: Middle(Stats<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_Vim_Math3d_Stats_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name.vb: Middle(Stats(Of DVector3))
  fullName: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Middle(Stats<DVector3>)
  nameWithType.vb: MathOps.Middle(Stats(Of DVector3))
- uid: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.DVector4})
  name: Middle(Stats<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_Vim_Math3d_Stats_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.DVector4})
  name.vb: Middle(Stats(Of DVector4))
  fullName: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Middle(Stats<DVector4>)
  nameWithType.vb: MathOps.Middle(Stats(Of DVector4))
- uid: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.Vector2})
  name: Middle(Stats<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_Vim_Math3d_Stats_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.Vector2})
  name.vb: Middle(Stats(Of Vector2))
  fullName: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Middle(Stats<Vector2>)
  nameWithType.vb: MathOps.Middle(Stats(Of Vector2))
- uid: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name: Middle(Stats<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_Vim_Math3d_Stats_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name.vb: Middle(Stats(Of Vector3))
  fullName: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Middle(Stats<Vector3>)
  nameWithType.vb: MathOps.Middle(Stats(Of Vector3))
- uid: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.Vector4})
  name: Middle(Stats<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_Vim_Math3d_Stats_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats{Vim.Math3d.Vector4})
  name.vb: Middle(Stats(Of Vector4))
  fullName: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Middle(Vim.Math3d.Stats(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Middle(Stats<Vector4>)
  nameWithType.vb: MathOps.Middle(Stats(Of Vector4))
- uid: Vim.Math3d.MathOps.Middle*
  name: Middle
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Middle_
  commentId: Overload:Vim.Math3d.MathOps.Middle
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Middle
  nameWithType: MathOps.Middle
- uid: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name: Min(IEnumerable<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name.vb: Min(IEnumerable(Of DVector2))
  fullName: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Min(IEnumerable<DVector2>)
  nameWithType.vb: MathOps.Min(IEnumerable(Of DVector2))
- uid: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name: Min(IEnumerable<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name.vb: Min(IEnumerable(Of DVector3))
  fullName: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Min(IEnumerable<DVector3>)
  nameWithType.vb: MathOps.Min(IEnumerable(Of DVector3))
- uid: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name: Min(IEnumerable<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name.vb: Min(IEnumerable(Of DVector4))
  fullName: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Min(IEnumerable<DVector4>)
  nameWithType.vb: MathOps.Min(IEnumerable(Of DVector4))
- uid: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: Min(IEnumerable<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: Min(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Min(IEnumerable<Vector2>)
  nameWithType.vb: MathOps.Min(IEnumerable(Of Vector2))
- uid: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Min(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Min(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Min(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.Min(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name: Min(IEnumerable<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name.vb: Min(IEnumerable(Of Vector4))
  fullName: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Min(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Min(IEnumerable<Vector4>)
  nameWithType.vb: MathOps.Min(IEnumerable(Of Vector4))
- uid: Vim.Math3d.MathOps.Min(System.Double,System.Double)
  name: Min(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Min(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Min(System.Double, System.Double)
  nameWithType: MathOps.Min(Double, Double)
- uid: Vim.Math3d.MathOps.Min(System.Int32,System.Int32)
  name: Min(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Min(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Min(System.Int32, System.Int32)
  nameWithType: MathOps.Min(Int32, Int32)
- uid: Vim.Math3d.MathOps.Min(System.Int64,System.Int64)
  name: Min(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Min(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Min(System.Int64, System.Int64)
  nameWithType: MathOps.Min(Int64, Int64)
- uid: Vim.Math3d.MathOps.Min(System.Single,System.Single)
  name: Min(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Min(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Min(System.Single, System.Single)
  nameWithType: MathOps.Min(Single, Single)
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Min(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Min(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Min(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Min(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Min(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Min(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Min(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Min(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Min(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Min(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Min(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Min(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Min*
  name: Min
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Min_
  commentId: Overload:Vim.Math3d.MathOps.Min
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Min
  nameWithType: MathOps.Min
- uid: Vim.Math3d.MathOps.Multiply(System.Double,System.Double)
  name: Multiply(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Multiply(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Multiply(System.Double, System.Double)
  nameWithType: MathOps.Multiply(Double, Double)
- uid: Vim.Math3d.MathOps.Multiply(System.Int32,System.Int32)
  name: Multiply(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Multiply(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Multiply(System.Int32, System.Int32)
  nameWithType: MathOps.Multiply(Int32, Int32)
- uid: Vim.Math3d.MathOps.Multiply(System.Int64,System.Int64)
  name: Multiply(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Multiply(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Multiply(System.Int64, System.Int64)
  nameWithType: MathOps.Multiply(Int64, Int64)
- uid: Vim.Math3d.MathOps.Multiply(System.Single,System.Single)
  name: Multiply(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Multiply(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Multiply(System.Single, System.Single)
  nameWithType: MathOps.Multiply(Single, Single)
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Multiply(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Multiply(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Multiply(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Multiply(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Multiply(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Multiply(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Multiply(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Multiply(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Multiply(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Multiply(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Multiply(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Multiply(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Multiply*
  name: Multiply
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Multiply_
  commentId: Overload:Vim.Math3d.MathOps.Multiply
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Multiply
  nameWithType: MathOps.Multiply
- uid: Vim.Math3d.MathOps.NAnd(System.Boolean,System.Boolean)
  name: NAnd(Boolean, Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NAnd_System_Boolean_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.NAnd(System.Boolean,System.Boolean)
  fullName: Vim.Math3d.MathOps.NAnd(System.Boolean, System.Boolean)
  nameWithType: MathOps.NAnd(Boolean, Boolean)
- uid: Vim.Math3d.MathOps.NAnd(System.Int32,System.Int32)
  name: NAnd(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NAnd_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.NAnd(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.NAnd(System.Int32, System.Int32)
  nameWithType: MathOps.NAnd(Int32, Int32)
- uid: Vim.Math3d.MathOps.NAnd(System.Int64,System.Int64)
  name: NAnd(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NAnd_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.NAnd(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.NAnd(System.Int64, System.Int64)
  nameWithType: MathOps.NAnd(Int64, Int64)
- uid: Vim.Math3d.MathOps.NAnd*
  name: NAnd
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NAnd_
  commentId: Overload:Vim.Math3d.MathOps.NAnd
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.NAnd
  nameWithType: MathOps.NAnd
- uid: Vim.Math3d.MathOps.Negate(System.Double)
  name: Negate(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_System_Double_
  commentId: M:Vim.Math3d.MathOps.Negate(System.Double)
  fullName: Vim.Math3d.MathOps.Negate(System.Double)
  nameWithType: MathOps.Negate(Double)
- uid: Vim.Math3d.MathOps.Negate(System.Int32)
  name: Negate(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Negate(System.Int32)
  fullName: Vim.Math3d.MathOps.Negate(System.Int32)
  nameWithType: MathOps.Negate(Int32)
- uid: Vim.Math3d.MathOps.Negate(System.Int64)
  name: Negate(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Negate(System.Int64)
  fullName: Vim.Math3d.MathOps.Negate(System.Int64)
  nameWithType: MathOps.Negate(Int64)
- uid: Vim.Math3d.MathOps.Negate(System.Single)
  name: Negate(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_System_Single_
  commentId: M:Vim.Math3d.MathOps.Negate(System.Single)
  fullName: Vim.Math3d.MathOps.Negate(System.Single)
  nameWithType: MathOps.Negate(Single)
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector2)
  name: Negate(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector2)
  nameWithType: MathOps.Negate(DVector2)
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector3)
  name: Negate(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector3)
  nameWithType: MathOps.Negate(DVector3)
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  name: Negate(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  nameWithType: MathOps.Negate(DVector4)
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector2)
  name: Negate(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector2)
  nameWithType: MathOps.Negate(Vector2)
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  name: Negate(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  nameWithType: MathOps.Negate(Vector3)
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector4)
  name: Negate(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector4)
  nameWithType: MathOps.Negate(Vector4)
- uid: Vim.Math3d.MathOps.Negate*
  name: Negate
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Negate_
  commentId: Overload:Vim.Math3d.MathOps.Negate
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Negate
  nameWithType: MathOps.Negate
- uid: Vim.Math3d.MathOps.NEq(System.Boolean,System.Boolean)
  name: NEq(Boolean, Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NEq_System_Boolean_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.NEq(System.Boolean,System.Boolean)
  fullName: Vim.Math3d.MathOps.NEq(System.Boolean, System.Boolean)
  nameWithType: MathOps.NEq(Boolean, Boolean)
- uid: Vim.Math3d.MathOps.NEq(System.Double,System.Double)
  name: NEq(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NEq_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.NEq(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.NEq(System.Double, System.Double)
  nameWithType: MathOps.NEq(Double, Double)
- uid: Vim.Math3d.MathOps.NEq(System.Int32,System.Int32)
  name: NEq(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NEq_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.NEq(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.NEq(System.Int32, System.Int32)
  nameWithType: MathOps.NEq(Int32, Int32)
- uid: Vim.Math3d.MathOps.NEq(System.Int64,System.Int64)
  name: NEq(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NEq_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.NEq(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.NEq(System.Int64, System.Int64)
  nameWithType: MathOps.NEq(Int64, Int64)
- uid: Vim.Math3d.MathOps.NEq(System.Single,System.Single)
  name: NEq(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NEq_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.NEq(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.NEq(System.Single, System.Single)
  nameWithType: MathOps.NEq(Single, Single)
- uid: Vim.Math3d.MathOps.NEq*
  name: NEq
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NEq_
  commentId: Overload:Vim.Math3d.MathOps.NEq
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.NEq
  nameWithType: MathOps.NEq
- uid: Vim.Math3d.MathOps.NOr(System.Boolean,System.Boolean)
  name: NOr(Boolean, Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NOr_System_Boolean_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.NOr(System.Boolean,System.Boolean)
  fullName: Vim.Math3d.MathOps.NOr(System.Boolean, System.Boolean)
  nameWithType: MathOps.NOr(Boolean, Boolean)
- uid: Vim.Math3d.MathOps.NOr(System.Int32,System.Int32)
  name: NOr(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NOr_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.NOr(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.NOr(System.Int32, System.Int32)
  nameWithType: MathOps.NOr(Int32, Int32)
- uid: Vim.Math3d.MathOps.NOr(System.Int64,System.Int64)
  name: NOr(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NOr_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.NOr(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.NOr(System.Int64, System.Int64)
  nameWithType: MathOps.NOr(Int64, Int64)
- uid: Vim.Math3d.MathOps.NOr*
  name: NOr
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_NOr_
  commentId: Overload:Vim.Math3d.MathOps.NOr
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.NOr
  nameWithType: MathOps.NOr
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector2)
  name: Normalize(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Normalize_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector2)
  nameWithType: MathOps.Normalize(DVector2)
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector3)
  name: Normalize(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Normalize_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector3)
  nameWithType: MathOps.Normalize(DVector3)
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  name: Normalize(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Normalize_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  nameWithType: MathOps.Normalize(DVector4)
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector2)
  name: Normalize(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Normalize_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector2)
  nameWithType: MathOps.Normalize(Vector2)
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  name: Normalize(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Normalize_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  nameWithType: MathOps.Normalize(Vector3)
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector4)
  name: Normalize(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Normalize_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector4)
  nameWithType: MathOps.Normalize(Vector4)
- uid: Vim.Math3d.MathOps.Normalize*
  name: Normalize
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Normalize_
  commentId: Overload:Vim.Math3d.MathOps.Normalize
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Normalize
  nameWithType: MathOps.Normalize
- uid: Vim.Math3d.MathOps.Not(System.Boolean)
  name: Not(Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Not_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.Not(System.Boolean)
  fullName: Vim.Math3d.MathOps.Not(System.Boolean)
  nameWithType: MathOps.Not(Boolean)
- uid: Vim.Math3d.MathOps.Not(System.Int32)
  name: Not(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Not_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Not(System.Int32)
  fullName: Vim.Math3d.MathOps.Not(System.Int32)
  nameWithType: MathOps.Not(Int32)
- uid: Vim.Math3d.MathOps.Not(System.Int64)
  name: Not(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Not_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Not(System.Int64)
  fullName: Vim.Math3d.MathOps.Not(System.Int64)
  nameWithType: MathOps.Not(Int64)
- uid: Vim.Math3d.MathOps.Not*
  name: Not
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Not_
  commentId: Overload:Vim.Math3d.MathOps.Not
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Not
  nameWithType: MathOps.Not
- uid: Vim.Math3d.MathOps.Or(System.Boolean,System.Boolean)
  name: Or(Boolean, Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Or_System_Boolean_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.Or(System.Boolean,System.Boolean)
  fullName: Vim.Math3d.MathOps.Or(System.Boolean, System.Boolean)
  nameWithType: MathOps.Or(Boolean, Boolean)
- uid: Vim.Math3d.MathOps.Or(System.Int32,System.Int32)
  name: Or(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Or_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Or(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Or(System.Int32, System.Int32)
  nameWithType: MathOps.Or(Int32, Int32)
- uid: Vim.Math3d.MathOps.Or(System.Int64,System.Int64)
  name: Or(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Or_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Or(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Or(System.Int64, System.Int64)
  nameWithType: MathOps.Or(Int64, Int64)
- uid: Vim.Math3d.MathOps.Or*
  name: Or
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Or_
  commentId: Overload:Vim.Math3d.MathOps.Or
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Or
  nameWithType: MathOps.Or
- uid: Vim.Math3d.MathOps.Percentage(System.Double,System.Double)
  name: Percentage(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Percentage_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Percentage(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Percentage(System.Double, System.Double)
  nameWithType: MathOps.Percentage(Double, Double)
- uid: Vim.Math3d.MathOps.Percentage*
  name: Percentage
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Percentage_
  commentId: Overload:Vim.Math3d.MathOps.Percentage
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Percentage
  nameWithType: MathOps.Percentage
- uid: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Projection(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Projection_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Projection(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Projection*
  name: Projection
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Projection_
  commentId: Overload:Vim.Math3d.MathOps.Projection
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Projection
  nameWithType: MathOps.Projection
- uid: Vim.Math3d.MathOps.RayFromProjectionMatrix(Vim.Math3d.Matrix4x4,Vim.Math3d.Vector2)
  name: RayFromProjectionMatrix(Matrix4x4, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_RayFromProjectionMatrix_Vim_Math3d_Matrix4x4_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.RayFromProjectionMatrix(Vim.Math3d.Matrix4x4,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.RayFromProjectionMatrix(Vim.Math3d.Matrix4x4, Vim.Math3d.Vector2)
  nameWithType: MathOps.RayFromProjectionMatrix(Matrix4x4, Vector2)
- uid: Vim.Math3d.MathOps.RayFromProjectionMatrix*
  name: RayFromProjectionMatrix
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_RayFromProjectionMatrix_
  commentId: Overload:Vim.Math3d.MathOps.RayFromProjectionMatrix
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.RayFromProjectionMatrix
  nameWithType: MathOps.RayFromProjectionMatrix
- uid: Vim.Math3d.MathOps.Reflect(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Reflect(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Reflect_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Reflect(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Reflect(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Reflect(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Reflect(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Reflect(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Reflect_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Reflect(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Reflect(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Reflect(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Reflect*
  name: Reflect
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Reflect_
  commentId: Overload:Vim.Math3d.MathOps.Reflect
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Reflect
  nameWithType: MathOps.Reflect
- uid: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Rejection(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Rejection_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Rejection(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Rejection*
  name: Rejection
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Rejection_
  commentId: Overload:Vim.Math3d.MathOps.Rejection
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Rejection
  nameWithType: MathOps.Rejection
- uid: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Rotate(Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Rotate_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.Rotate(Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.Rotate*
  name: Rotate
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Rotate_
  commentId: Overload:Vim.Math3d.MathOps.Rotate
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Rotate
  nameWithType: MathOps.Rotate
- uid: Vim.Math3d.MathOps.Round(System.Double)
  name: Round(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_System_Double_
  commentId: M:Vim.Math3d.MathOps.Round(System.Double)
  fullName: Vim.Math3d.MathOps.Round(System.Double)
  nameWithType: MathOps.Round(Double)
- uid: Vim.Math3d.MathOps.Round(System.Single)
  name: Round(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_System_Single_
  commentId: M:Vim.Math3d.MathOps.Round(System.Single)
  fullName: Vim.Math3d.MathOps.Round(System.Single)
  nameWithType: MathOps.Round(Single)
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector2)
  name: Round(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector2)
  nameWithType: MathOps.Round(DVector2)
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector3)
  name: Round(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector3)
  nameWithType: MathOps.Round(DVector3)
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  name: Round(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  nameWithType: MathOps.Round(DVector4)
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector2)
  name: Round(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector2)
  nameWithType: MathOps.Round(Vector2)
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  name: Round(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  nameWithType: MathOps.Round(Vector3)
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector4)
  name: Round(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector4)
  nameWithType: MathOps.Round(Vector4)
- uid: Vim.Math3d.MathOps.Round*
  name: Round
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Round_
  commentId: Overload:Vim.Math3d.MathOps.Round
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Round
  nameWithType: MathOps.Round
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector2)
  name: SafeNormalize(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SafeNormalize_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector2)
  nameWithType: MathOps.SafeNormalize(DVector2)
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector3)
  name: SafeNormalize(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SafeNormalize_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector3)
  nameWithType: MathOps.SafeNormalize(DVector3)
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  name: SafeNormalize(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SafeNormalize_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  nameWithType: MathOps.SafeNormalize(DVector4)
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector2)
  name: SafeNormalize(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SafeNormalize_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector2)
  nameWithType: MathOps.SafeNormalize(Vector2)
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  name: SafeNormalize(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SafeNormalize_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  nameWithType: MathOps.SafeNormalize(Vector3)
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector4)
  name: SafeNormalize(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SafeNormalize_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector4)
  nameWithType: MathOps.SafeNormalize(Vector4)
- uid: Vim.Math3d.MathOps.SafeNormalize*
  name: SafeNormalize
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SafeNormalize_
  commentId: Overload:Vim.Math3d.MathOps.SafeNormalize
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.SafeNormalize
  nameWithType: MathOps.SafeNormalize
- uid: Vim.Math3d.MathOps.Sign(System.Double)
  name: Sign(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sign_System_Double_
  commentId: M:Vim.Math3d.MathOps.Sign(System.Double)
  fullName: Vim.Math3d.MathOps.Sign(System.Double)
  nameWithType: MathOps.Sign(Double)
- uid: Vim.Math3d.MathOps.Sign(System.Single)
  name: Sign(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sign_System_Single_
  commentId: M:Vim.Math3d.MathOps.Sign(System.Single)
  fullName: Vim.Math3d.MathOps.Sign(System.Single)
  nameWithType: MathOps.Sign(Single)
- uid: Vim.Math3d.MathOps.Sign*
  name: Sign
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sign_
  commentId: Overload:Vim.Math3d.MathOps.Sign
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Sign
  nameWithType: MathOps.Sign
- uid: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: SignedAngle(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SignedAngle_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.SignedAngle(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: SignedAngle(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SignedAngle_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.SignedAngle(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.MathOps.SignedAngle*
  name: SignedAngle
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SignedAngle_
  commentId: Overload:Vim.Math3d.MathOps.SignedAngle
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.SignedAngle
  nameWithType: MathOps.SignedAngle
- uid: Vim.Math3d.MathOps.Sin(System.Double)
  name: Sin(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_System_Double_
  commentId: M:Vim.Math3d.MathOps.Sin(System.Double)
  fullName: Vim.Math3d.MathOps.Sin(System.Double)
  nameWithType: MathOps.Sin(Double)
- uid: Vim.Math3d.MathOps.Sin(System.Single)
  name: Sin(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_System_Single_
  commentId: M:Vim.Math3d.MathOps.Sin(System.Single)
  fullName: Vim.Math3d.MathOps.Sin(System.Single)
  nameWithType: MathOps.Sin(Single)
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector2)
  name: Sin(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector2)
  nameWithType: MathOps.Sin(DVector2)
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector3)
  name: Sin(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector3)
  nameWithType: MathOps.Sin(DVector3)
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  name: Sin(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  nameWithType: MathOps.Sin(DVector4)
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector2)
  name: Sin(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector2)
  nameWithType: MathOps.Sin(Vector2)
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  name: Sin(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  nameWithType: MathOps.Sin(Vector3)
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector4)
  name: Sin(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector4)
  nameWithType: MathOps.Sin(Vector4)
- uid: Vim.Math3d.MathOps.Sin*
  name: Sin
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sin_
  commentId: Overload:Vim.Math3d.MathOps.Sin
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Sin
  nameWithType: MathOps.Sin
- uid: Vim.Math3d.MathOps.Sinh(System.Double)
  name: Sinh(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_System_Double_
  commentId: M:Vim.Math3d.MathOps.Sinh(System.Double)
  fullName: Vim.Math3d.MathOps.Sinh(System.Double)
  nameWithType: MathOps.Sinh(Double)
- uid: Vim.Math3d.MathOps.Sinh(System.Single)
  name: Sinh(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_System_Single_
  commentId: M:Vim.Math3d.MathOps.Sinh(System.Single)
  fullName: Vim.Math3d.MathOps.Sinh(System.Single)
  nameWithType: MathOps.Sinh(Single)
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector2)
  name: Sinh(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector2)
  nameWithType: MathOps.Sinh(DVector2)
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector3)
  name: Sinh(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector3)
  nameWithType: MathOps.Sinh(DVector3)
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  name: Sinh(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  nameWithType: MathOps.Sinh(DVector4)
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector2)
  name: Sinh(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector2)
  nameWithType: MathOps.Sinh(Vector2)
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  name: Sinh(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  nameWithType: MathOps.Sinh(Vector3)
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector4)
  name: Sinh(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector4)
  nameWithType: MathOps.Sinh(Vector4)
- uid: Vim.Math3d.MathOps.Sinh*
  name: Sinh
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sinh_
  commentId: Overload:Vim.Math3d.MathOps.Sinh
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Sinh
  nameWithType: MathOps.Sinh
- uid: Vim.Math3d.MathOps.Smoothstep(System.Double)
  name: Smoothstep(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Smoothstep_System_Double_
  commentId: M:Vim.Math3d.MathOps.Smoothstep(System.Double)
  fullName: Vim.Math3d.MathOps.Smoothstep(System.Double)
  nameWithType: MathOps.Smoothstep(Double)
- uid: Vim.Math3d.MathOps.Smoothstep(System.Single)
  name: Smoothstep(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Smoothstep_System_Single_
  commentId: M:Vim.Math3d.MathOps.Smoothstep(System.Single)
  fullName: Vim.Math3d.MathOps.Smoothstep(System.Single)
  nameWithType: MathOps.Smoothstep(Single)
- uid: Vim.Math3d.MathOps.SmoothStep(System.Single,System.Single,System.Single)
  name: SmoothStep(Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SmoothStep_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.SmoothStep(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.SmoothStep(System.Single, System.Single, System.Single)
  nameWithType: MathOps.SmoothStep(Single, Single, Single)
- uid: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: SmoothStep(Vector3, Vector3, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SmoothStep_Vim_Math3d_Vector3_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  nameWithType: MathOps.SmoothStep(Vector3, Vector3, Single)
- uid: Vim.Math3d.MathOps.Smoothstep*
  name: Smoothstep
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Smoothstep_
  commentId: Overload:Vim.Math3d.MathOps.Smoothstep
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Smoothstep
  nameWithType: MathOps.Smoothstep
- uid: Vim.Math3d.MathOps.SmoothStep*
  name: SmoothStep
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SmoothStep_
  commentId: Overload:Vim.Math3d.MathOps.SmoothStep
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.SmoothStep
  nameWithType: MathOps.SmoothStep
- uid: Vim.Math3d.MathOps.Sqr(System.Double)
  name: Sqr(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_System_Double_
  commentId: M:Vim.Math3d.MathOps.Sqr(System.Double)
  fullName: Vim.Math3d.MathOps.Sqr(System.Double)
  nameWithType: MathOps.Sqr(Double)
- uid: Vim.Math3d.MathOps.Sqr(System.Int32)
  name: Sqr(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Sqr(System.Int32)
  fullName: Vim.Math3d.MathOps.Sqr(System.Int32)
  nameWithType: MathOps.Sqr(Int32)
- uid: Vim.Math3d.MathOps.Sqr(System.Int64)
  name: Sqr(Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Sqr(System.Int64)
  fullName: Vim.Math3d.MathOps.Sqr(System.Int64)
  nameWithType: MathOps.Sqr(Int64)
- uid: Vim.Math3d.MathOps.Sqr(System.Single)
  name: Sqr(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_System_Single_
  commentId: M:Vim.Math3d.MathOps.Sqr(System.Single)
  fullName: Vim.Math3d.MathOps.Sqr(System.Single)
  nameWithType: MathOps.Sqr(Single)
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector2)
  name: Sqr(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector2)
  nameWithType: MathOps.Sqr(DVector2)
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector3)
  name: Sqr(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector3)
  nameWithType: MathOps.Sqr(DVector3)
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  name: Sqr(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  nameWithType: MathOps.Sqr(DVector4)
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector2)
  name: Sqr(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector2)
  nameWithType: MathOps.Sqr(Vector2)
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  name: Sqr(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  nameWithType: MathOps.Sqr(Vector3)
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector4)
  name: Sqr(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector4)
  nameWithType: MathOps.Sqr(Vector4)
- uid: Vim.Math3d.MathOps.Sqr*
  name: Sqr
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqr_
  commentId: Overload:Vim.Math3d.MathOps.Sqr
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Sqr
  nameWithType: MathOps.Sqr
- uid: Vim.Math3d.MathOps.Sqrt(System.Double)
  name: Sqrt(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_System_Double_
  commentId: M:Vim.Math3d.MathOps.Sqrt(System.Double)
  fullName: Vim.Math3d.MathOps.Sqrt(System.Double)
  nameWithType: MathOps.Sqrt(Double)
- uid: Vim.Math3d.MathOps.Sqrt(System.Single)
  name: Sqrt(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_System_Single_
  commentId: M:Vim.Math3d.MathOps.Sqrt(System.Single)
  fullName: Vim.Math3d.MathOps.Sqrt(System.Single)
  nameWithType: MathOps.Sqrt(Single)
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector2)
  name: Sqrt(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector2)
  nameWithType: MathOps.Sqrt(DVector2)
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector3)
  name: Sqrt(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector3)
  nameWithType: MathOps.Sqrt(DVector3)
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  name: Sqrt(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  nameWithType: MathOps.Sqrt(DVector4)
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector2)
  name: Sqrt(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector2)
  nameWithType: MathOps.Sqrt(Vector2)
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  name: Sqrt(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  nameWithType: MathOps.Sqrt(Vector3)
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector4)
  name: Sqrt(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector4)
  nameWithType: MathOps.Sqrt(Vector4)
- uid: Vim.Math3d.MathOps.Sqrt*
  name: Sqrt
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sqrt_
  commentId: Overload:Vim.Math3d.MathOps.Sqrt
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Sqrt
  nameWithType: MathOps.Sqrt
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector2)
  name: SquareRoot(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SquareRoot_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector2)
  nameWithType: MathOps.SquareRoot(DVector2)
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector3)
  name: SquareRoot(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SquareRoot_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector3)
  nameWithType: MathOps.SquareRoot(DVector3)
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  name: SquareRoot(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SquareRoot_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  nameWithType: MathOps.SquareRoot(DVector4)
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector2)
  name: SquareRoot(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SquareRoot_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector2)
  nameWithType: MathOps.SquareRoot(Vector2)
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  name: SquareRoot(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SquareRoot_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  nameWithType: MathOps.SquareRoot(Vector3)
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector4)
  name: SquareRoot(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SquareRoot_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector4)
  nameWithType: MathOps.SquareRoot(Vector4)
- uid: Vim.Math3d.MathOps.SquareRoot*
  name: SquareRoot
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_SquareRoot_
  commentId: Overload:Vim.Math3d.MathOps.SquareRoot
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.SquareRoot
  nameWithType: MathOps.SquareRoot
- uid: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name: Stats(IEnumerable<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Stats_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name.vb: Stats(IEnumerable(Of DVector2))
  fullName: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Stats(IEnumerable<DVector2>)
  nameWithType.vb: MathOps.Stats(IEnumerable(Of DVector2))
- uid: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name: Stats(IEnumerable<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Stats_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name.vb: Stats(IEnumerable(Of DVector3))
  fullName: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Stats(IEnumerable<DVector3>)
  nameWithType.vb: MathOps.Stats(IEnumerable(Of DVector3))
- uid: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name: Stats(IEnumerable<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Stats_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name.vb: Stats(IEnumerable(Of DVector4))
  fullName: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Stats(IEnumerable<DVector4>)
  nameWithType.vb: MathOps.Stats(IEnumerable(Of DVector4))
- uid: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: Stats(IEnumerable<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Stats_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: Stats(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Stats(IEnumerable<Vector2>)
  nameWithType.vb: MathOps.Stats(IEnumerable(Of Vector2))
- uid: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Stats(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Stats_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Stats(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Stats(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.Stats(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name: Stats(IEnumerable<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Stats_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name.vb: Stats(IEnumerable(Of Vector4))
  fullName: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Stats(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Stats(IEnumerable<Vector4>)
  nameWithType.vb: MathOps.Stats(IEnumerable(Of Vector4))
- uid: Vim.Math3d.MathOps.Stats*
  name: Stats
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Stats_
  commentId: Overload:Vim.Math3d.MathOps.Stats
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Stats
  nameWithType: MathOps.Stats
- uid: Vim.Math3d.MathOps.Subtract(System.Double,System.Double)
  name: Subtract(Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Subtract(System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Subtract(System.Double, System.Double)
  nameWithType: MathOps.Subtract(Double, Double)
- uid: Vim.Math3d.MathOps.Subtract(System.Int32,System.Int32)
  name: Subtract(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Subtract(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Subtract(System.Int32, System.Int32)
  nameWithType: MathOps.Subtract(Int32, Int32)
- uid: Vim.Math3d.MathOps.Subtract(System.Int64,System.Int64)
  name: Subtract(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Subtract(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Subtract(System.Int64, System.Int64)
  nameWithType: MathOps.Subtract(Int64, Int64)
- uid: Vim.Math3d.MathOps.Subtract(System.Single,System.Single)
  name: Subtract(Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Subtract(System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Subtract(System.Single, System.Single)
  nameWithType: MathOps.Subtract(Single, Single)
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  name: Subtract(DVector2, DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_Vim_Math3d_DVector2_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector2,Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector2, Vim.Math3d.DVector2)
  nameWithType: MathOps.Subtract(DVector2, DVector2)
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  name: Subtract(DVector3, DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_Vim_Math3d_DVector3_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector3,Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector3, Vim.Math3d.DVector3)
  nameWithType: MathOps.Subtract(DVector3, DVector3)
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Subtract(DVector4, DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_Vim_Math3d_DVector4_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  nameWithType: MathOps.Subtract(DVector4, DVector4)
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Subtract(Vector2, Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: MathOps.Subtract(Vector2, Vector2)
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Subtract(Vector3, Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: MathOps.Subtract(Vector3, Vector3)
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Subtract(Vector4, Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: MathOps.Subtract(Vector4, Vector4)
- uid: Vim.Math3d.MathOps.Subtract*
  name: Subtract
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Subtract_
  commentId: Overload:Vim.Math3d.MathOps.Subtract
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Subtract
  nameWithType: MathOps.Subtract
- uid: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name: Sum(IEnumerable<DVector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sum_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector2__
  commentId: M:Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector2})
  name.vb: Sum(IEnumerable(Of DVector2))
  fullName: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector2>)
  fullName.vb: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector2))
  nameWithType: MathOps.Sum(IEnumerable<DVector2>)
  nameWithType.vb: MathOps.Sum(IEnumerable(Of DVector2))
- uid: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name: Sum(IEnumerable<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sum_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector3})
  name.vb: Sum(IEnumerable(Of DVector3))
  fullName: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.Sum(IEnumerable<DVector3>)
  nameWithType.vb: MathOps.Sum(IEnumerable(Of DVector3))
- uid: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name: Sum(IEnumerable<DVector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sum_System_Collections_Generic_IEnumerable_Vim_Math3d_DVector4__
  commentId: M:Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.DVector4})
  name.vb: Sum(IEnumerable(Of DVector4))
  fullName: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable<Vim.Math3d.DVector4>)
  fullName.vb: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable(Of Vim.Math3d.DVector4))
  nameWithType: MathOps.Sum(IEnumerable<DVector4>)
  nameWithType.vb: MathOps.Sum(IEnumerable(Of DVector4))
- uid: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name: Sum(IEnumerable<Vector2>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sum_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector2})
  name.vb: Sum(IEnumerable(Of Vector2))
  fullName: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector2))
  nameWithType: MathOps.Sum(IEnumerable<Vector2>)
  nameWithType.vb: MathOps.Sum(IEnumerable(Of Vector2))
- uid: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Sum(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sum_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Sum(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.Sum(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.Sum(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name: Sum(IEnumerable<Vector4>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sum_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector4__
  commentId: M:Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector4})
  name.vb: Sum(IEnumerable(Of Vector4))
  fullName: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector4>)
  fullName.vb: Vim.Math3d.MathOps.Sum(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector4))
  nameWithType: MathOps.Sum(IEnumerable<Vector4>)
  nameWithType.vb: MathOps.Sum(IEnumerable(Of Vector4))
- uid: Vim.Math3d.MathOps.Sum*
  name: Sum
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Sum_
  commentId: Overload:Vim.Math3d.MathOps.Sum
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Sum
  nameWithType: MathOps.Sum
- uid: Vim.Math3d.MathOps.Tan(System.Double)
  name: Tan(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_System_Double_
  commentId: M:Vim.Math3d.MathOps.Tan(System.Double)
  fullName: Vim.Math3d.MathOps.Tan(System.Double)
  nameWithType: MathOps.Tan(Double)
- uid: Vim.Math3d.MathOps.Tan(System.Single)
  name: Tan(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_System_Single_
  commentId: M:Vim.Math3d.MathOps.Tan(System.Single)
  fullName: Vim.Math3d.MathOps.Tan(System.Single)
  nameWithType: MathOps.Tan(Single)
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector2)
  name: Tan(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector2)
  nameWithType: MathOps.Tan(DVector2)
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector3)
  name: Tan(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector3)
  nameWithType: MathOps.Tan(DVector3)
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  name: Tan(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  nameWithType: MathOps.Tan(DVector4)
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector2)
  name: Tan(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector2)
  nameWithType: MathOps.Tan(Vector2)
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  name: Tan(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  nameWithType: MathOps.Tan(Vector3)
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector4)
  name: Tan(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector4)
  nameWithType: MathOps.Tan(Vector4)
- uid: Vim.Math3d.MathOps.Tan*
  name: Tan
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tan_
  commentId: Overload:Vim.Math3d.MathOps.Tan
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Tan
  nameWithType: MathOps.Tan
- uid: Vim.Math3d.MathOps.Tanh(System.Double)
  name: Tanh(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_System_Double_
  commentId: M:Vim.Math3d.MathOps.Tanh(System.Double)
  fullName: Vim.Math3d.MathOps.Tanh(System.Double)
  nameWithType: MathOps.Tanh(Double)
- uid: Vim.Math3d.MathOps.Tanh(System.Single)
  name: Tanh(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_System_Single_
  commentId: M:Vim.Math3d.MathOps.Tanh(System.Single)
  fullName: Vim.Math3d.MathOps.Tanh(System.Single)
  nameWithType: MathOps.Tanh(Single)
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector2)
  name: Tanh(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector2)
  nameWithType: MathOps.Tanh(DVector2)
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector3)
  name: Tanh(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector3)
  nameWithType: MathOps.Tanh(DVector3)
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  name: Tanh(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  nameWithType: MathOps.Tanh(DVector4)
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector2)
  name: Tanh(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector2)
  nameWithType: MathOps.Tanh(Vector2)
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  name: Tanh(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  nameWithType: MathOps.Tanh(Vector3)
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector4)
  name: Tanh(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector4)
  nameWithType: MathOps.Tanh(Vector4)
- uid: Vim.Math3d.MathOps.Tanh*
  name: Tanh
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Tanh_
  commentId: Overload:Vim.Math3d.MathOps.Tanh
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Tanh
  nameWithType: MathOps.Tanh
- uid: Vim.Math3d.MathOps.ToAABoxArray(System.Single[])
  name: ToAABoxArray(Single[])
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToAABoxArray_System_Single___
  commentId: M:Vim.Math3d.MathOps.ToAABoxArray(System.Single[])
  name.vb: ToAABoxArray(Single())
  fullName: Vim.Math3d.MathOps.ToAABoxArray(System.Single[])
  fullName.vb: Vim.Math3d.MathOps.ToAABoxArray(System.Single())
  nameWithType: MathOps.ToAABoxArray(Single[])
  nameWithType.vb: MathOps.ToAABoxArray(Single())
- uid: Vim.Math3d.MathOps.ToAABoxArray*
  name: ToAABoxArray
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToAABoxArray_
  commentId: Overload:Vim.Math3d.MathOps.ToAABoxArray
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToAABoxArray
  nameWithType: MathOps.ToAABoxArray
- uid: Vim.Math3d.MathOps.ToBox(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: ToBox(IEnumerable<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToBox_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.ToBox(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: ToBox(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.MathOps.ToBox(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.ToBox(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.ToBox(IEnumerable<Vector3>)
  nameWithType.vb: MathOps.ToBox(IEnumerable(Of Vector3))
- uid: Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name: ToBox(Stats<DVector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToBox_Vim_Math3d_Stats_Vim_Math3d_DVector3__
  commentId: M:Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats{Vim.Math3d.DVector3})
  name.vb: ToBox(Stats(Of DVector3))
  fullName: Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats<Vim.Math3d.DVector3>)
  fullName.vb: Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats(Of Vim.Math3d.DVector3))
  nameWithType: MathOps.ToBox(Stats<DVector3>)
  nameWithType.vb: MathOps.ToBox(Stats(Of DVector3))
- uid: Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name: ToBox(Stats<Vector3>)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToBox_Vim_Math3d_Stats_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats{Vim.Math3d.Vector3})
  name.vb: ToBox(Stats(Of Vector3))
  fullName: Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.MathOps.ToBox(Vim.Math3d.Stats(Of Vim.Math3d.Vector3))
  nameWithType: MathOps.ToBox(Stats<Vector3>)
  nameWithType.vb: MathOps.ToBox(Stats(Of Vector3))
- uid: Vim.Math3d.MathOps.ToBox*
  name: ToBox
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToBox_
  commentId: Overload:Vim.Math3d.MathOps.ToBox
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToBox
  nameWithType: MathOps.ToBox
- uid: Vim.Math3d.MathOps.ToDegrees(System.Double)
  name: ToDegrees(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_System_Double_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(System.Double)
  fullName: Vim.Math3d.MathOps.ToDegrees(System.Double)
  nameWithType: MathOps.ToDegrees(Double)
- uid: Vim.Math3d.MathOps.ToDegrees(System.Single)
  name: ToDegrees(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_System_Single_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(System.Single)
  fullName: Vim.Math3d.MathOps.ToDegrees(System.Single)
  nameWithType: MathOps.ToDegrees(Single)
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector2)
  name: ToDegrees(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector2)
  nameWithType: MathOps.ToDegrees(DVector2)
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector3)
  name: ToDegrees(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector3)
  nameWithType: MathOps.ToDegrees(DVector3)
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  name: ToDegrees(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  nameWithType: MathOps.ToDegrees(DVector4)
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector2)
  name: ToDegrees(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector2)
  nameWithType: MathOps.ToDegrees(Vector2)
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  name: ToDegrees(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  nameWithType: MathOps.ToDegrees(Vector3)
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector4)
  name: ToDegrees(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector4)
  nameWithType: MathOps.ToDegrees(Vector4)
- uid: Vim.Math3d.MathOps.ToDegrees*
  name: ToDegrees
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToDegrees_
  commentId: Overload:Vim.Math3d.MathOps.ToDegrees
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToDegrees
  nameWithType: MathOps.ToDegrees
- uid: Vim.Math3d.MathOps.ToFloats(Vim.Math3d.Matrix4x4)
  name: ToFloats(Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToFloats_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.ToFloats(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.ToFloats(Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.ToFloats(Matrix4x4)
- uid: Vim.Math3d.MathOps.ToFloats(Vim.Math3d.Matrix4x4[])
  name: ToFloats(Matrix4x4[])
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToFloats_Vim_Math3d_Matrix4x4___
  commentId: M:Vim.Math3d.MathOps.ToFloats(Vim.Math3d.Matrix4x4[])
  name.vb: ToFloats(Matrix4x4())
  fullName: Vim.Math3d.MathOps.ToFloats(Vim.Math3d.Matrix4x4[])
  fullName.vb: Vim.Math3d.MathOps.ToFloats(Vim.Math3d.Matrix4x4())
  nameWithType: MathOps.ToFloats(Matrix4x4[])
  nameWithType.vb: MathOps.ToFloats(Matrix4x4())
- uid: Vim.Math3d.MathOps.ToFloats*
  name: ToFloats
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToFloats_
  commentId: Overload:Vim.Math3d.MathOps.ToFloats
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToFloats
  nameWithType: MathOps.ToFloats
- uid: Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  name: ToLine(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToLine_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  nameWithType: MathOps.ToLine(Vector3)
- uid: Vim.Math3d.MathOps.ToLine*
  name: ToLine
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToLine_
  commentId: Overload:Vim.Math3d.MathOps.ToLine
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToLine
  nameWithType: MathOps.ToLine
- uid: Vim.Math3d.MathOps.ToMatrix(System.Single[])
  name: ToMatrix(Single[])
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToMatrix_System_Single___
  commentId: M:Vim.Math3d.MathOps.ToMatrix(System.Single[])
  name.vb: ToMatrix(Single())
  fullName: Vim.Math3d.MathOps.ToMatrix(System.Single[])
  fullName.vb: Vim.Math3d.MathOps.ToMatrix(System.Single())
  nameWithType: MathOps.ToMatrix(Single[])
  nameWithType.vb: MathOps.ToMatrix(Single())
- uid: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Quaternion)
  name: ToMatrix(Quaternion)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToMatrix_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Quaternion)
  nameWithType: MathOps.ToMatrix(Quaternion)
- uid: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Transform)
  name: ToMatrix(Transform)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToMatrix_Vim_Math3d_Transform_
  commentId: M:Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Transform)
  fullName: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Transform)
  nameWithType: MathOps.ToMatrix(Transform)
- uid: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  name: ToMatrix(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToMatrix_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  nameWithType: MathOps.ToMatrix(Vector3)
- uid: Vim.Math3d.MathOps.ToMatrix*
  name: ToMatrix
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToMatrix_
  commentId: Overload:Vim.Math3d.MathOps.ToMatrix
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToMatrix
  nameWithType: MathOps.ToMatrix
- uid: Vim.Math3d.MathOps.ToMatrixArray(System.Single[])
  name: ToMatrixArray(Single[])
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToMatrixArray_System_Single___
  commentId: M:Vim.Math3d.MathOps.ToMatrixArray(System.Single[])
  name.vb: ToMatrixArray(Single())
  fullName: Vim.Math3d.MathOps.ToMatrixArray(System.Single[])
  fullName.vb: Vim.Math3d.MathOps.ToMatrixArray(System.Single())
  nameWithType: MathOps.ToMatrixArray(Single[])
  nameWithType.vb: MathOps.ToMatrixArray(Single())
- uid: Vim.Math3d.MathOps.ToMatrixArray*
  name: ToMatrixArray
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToMatrixArray_
  commentId: Overload:Vim.Math3d.MathOps.ToMatrixArray
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToMatrixArray
  nameWithType: MathOps.ToMatrixArray
- uid: Vim.Math3d.MathOps.ToNearestPowOf2(System.Int32)
  name: ToNearestPowOf2(Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToNearestPowOf2_System_Int32_
  commentId: M:Vim.Math3d.MathOps.ToNearestPowOf2(System.Int32)
  fullName: Vim.Math3d.MathOps.ToNearestPowOf2(System.Int32)
  nameWithType: MathOps.ToNearestPowOf2(Int32)
- uid: Vim.Math3d.MathOps.ToNearestPowOf2*
  name: ToNearestPowOf2
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToNearestPowOf2_
  commentId: Overload:Vim.Math3d.MathOps.ToNearestPowOf2
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToNearestPowOf2
  nameWithType: MathOps.ToNearestPowOf2
- uid: Vim.Math3d.MathOps.ToRadians(System.Double)
  name: ToRadians(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_System_Double_
  commentId: M:Vim.Math3d.MathOps.ToRadians(System.Double)
  fullName: Vim.Math3d.MathOps.ToRadians(System.Double)
  nameWithType: MathOps.ToRadians(Double)
- uid: Vim.Math3d.MathOps.ToRadians(System.Single)
  name: ToRadians(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_System_Single_
  commentId: M:Vim.Math3d.MathOps.ToRadians(System.Single)
  fullName: Vim.Math3d.MathOps.ToRadians(System.Single)
  nameWithType: MathOps.ToRadians(Single)
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector2)
  name: ToRadians(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector2)
  nameWithType: MathOps.ToRadians(DVector2)
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector3)
  name: ToRadians(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector3)
  nameWithType: MathOps.ToRadians(DVector3)
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  name: ToRadians(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  nameWithType: MathOps.ToRadians(DVector4)
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector2)
  name: ToRadians(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector2)
  nameWithType: MathOps.ToRadians(Vector2)
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  name: ToRadians(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  nameWithType: MathOps.ToRadians(Vector3)
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector4)
  name: ToRadians(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector4)
  nameWithType: MathOps.ToRadians(Vector4)
- uid: Vim.Math3d.MathOps.ToRadians*
  name: ToRadians
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToRadians_
  commentId: Overload:Vim.Math3d.MathOps.ToRadians
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToRadians
  nameWithType: MathOps.ToRadians
- uid: Vim.Math3d.MathOps.ToVector2(System.Single)
  name: ToVector2(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector2_System_Single_
  commentId: M:Vim.Math3d.MathOps.ToVector2(System.Single)
  fullName: Vim.Math3d.MathOps.ToVector2(System.Single)
  nameWithType: MathOps.ToVector2(Single)
- uid: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Int2)
  name: ToVector2(Int2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector2_Vim_Math3d_Int2_
  commentId: M:Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Int2)
  fullName: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Int2)
  nameWithType: MathOps.ToVector2(Int2)
- uid: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  name: ToVector2(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector2_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  nameWithType: MathOps.ToVector2(Vector3)
- uid: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector4)
  name: ToVector2(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector2_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector4)
  nameWithType: MathOps.ToVector2(Vector4)
- uid: Vim.Math3d.MathOps.ToVector2*
  name: ToVector2
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector2_
  commentId: Overload:Vim.Math3d.MathOps.ToVector2
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToVector2
  nameWithType: MathOps.ToVector2
- uid: Vim.Math3d.MathOps.ToVector3(System.Single)
  name: ToVector3(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector3_System_Single_
  commentId: M:Vim.Math3d.MathOps.ToVector3(System.Single)
  fullName: Vim.Math3d.MathOps.ToVector3(System.Single)
  nameWithType: MathOps.ToVector3(Single)
- uid: Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Int3)
  name: ToVector3(Int3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector3_Vim_Math3d_Int3_
  commentId: M:Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Int3)
  fullName: Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Int3)
  nameWithType: MathOps.ToVector3(Int3)
- uid: Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Vector2)
  name: ToVector3(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector3_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Vector2)
  nameWithType: MathOps.ToVector3(Vector2)
- uid: Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Vector4)
  name: ToVector3(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector3_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.ToVector3(Vim.Math3d.Vector4)
  nameWithType: MathOps.ToVector3(Vector4)
- uid: Vim.Math3d.MathOps.ToVector3*
  name: ToVector3
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector3_
  commentId: Overload:Vim.Math3d.MathOps.ToVector3
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToVector3
  nameWithType: MathOps.ToVector3
- uid: Vim.Math3d.MathOps.ToVector4(System.Single)
  name: ToVector4(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector4_System_Single_
  commentId: M:Vim.Math3d.MathOps.ToVector4(System.Single)
  fullName: Vim.Math3d.MathOps.ToVector4(System.Single)
  nameWithType: MathOps.ToVector4(Single)
- uid: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector2)
  name: ToVector4(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector4_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector2)
  nameWithType: MathOps.ToVector4(Vector2)
- uid: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  name: ToVector4(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector4_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  nameWithType: MathOps.ToVector4(Vector3)
- uid: Vim.Math3d.MathOps.ToVector4*
  name: ToVector4
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_ToVector4_
  commentId: Overload:Vim.Math3d.MathOps.ToVector4
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.ToVector4
  nameWithType: MathOps.ToVector4
- uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector2,Vim.Math3d.Matrix4x4)
  name: Transform(Vector2, Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Transform_Vim_Math3d_Vector2_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector2,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector2, Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.Transform(Vector2, Matrix4x4)
- uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector2,Vim.Math3d.Quaternion)
  name: Transform(Vector2, Quaternion)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Transform_Vim_Math3d_Vector2_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector2,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector2, Vim.Math3d.Quaternion)
  nameWithType: MathOps.Transform(Vector2, Quaternion)
- uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  name: Transform(Vector3, Quaternion)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Transform_Vim_Math3d_Vector3_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3, Vim.Math3d.Quaternion)
  nameWithType: MathOps.Transform(Vector3, Quaternion)
- uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector4,Vim.Math3d.Matrix4x4)
  name: Transform(Vector4, Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Transform_Vim_Math3d_Vector4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector4, Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.Transform(Vector4, Matrix4x4)
- uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector4,Vim.Math3d.Quaternion)
  name: Transform(Vector4, Quaternion)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Transform_Vim_Math3d_Vector4_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector4,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector4, Vim.Math3d.Quaternion)
  nameWithType: MathOps.Transform(Vector4, Quaternion)
- uid: Vim.Math3d.MathOps.Transform*
  name: Transform
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Transform_
  commentId: Overload:Vim.Math3d.MathOps.Transform
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Transform
  nameWithType: MathOps.Transform
- uid: Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector2,Vim.Math3d.Matrix4x4)
  name: TransformNormal(Vector2, Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformNormal_Vim_Math3d_Vector2_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector2,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector2, Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.TransformNormal(Vector2, Matrix4x4)
- uid: Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector3,Vim.Math3d.Matrix4x4)
  name: TransformNormal(Vector3, Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformNormal_Vim_Math3d_Vector3_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector3,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector3, Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.TransformNormal(Vector3, Matrix4x4)
- uid: Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector4,Vim.Math3d.Matrix4x4)
  name: TransformNormal(Vector4, Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformNormal_Vim_Math3d_Vector4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.TransformNormal(Vim.Math3d.Vector4, Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.TransformNormal(Vector4, Matrix4x4)
- uid: Vim.Math3d.MathOps.TransformNormal*
  name: TransformNormal
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformNormal_
  commentId: Overload:Vim.Math3d.MathOps.TransformNormal
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.TransformNormal
  nameWithType: MathOps.TransformNormal
- uid: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector2,Vim.Math3d.Matrix4x4)
  name: TransformToVector4(Vector2, Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformToVector4_Vim_Math3d_Vector2_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector2,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector2, Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.TransformToVector4(Vector2, Matrix4x4)
- uid: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector2,Vim.Math3d.Quaternion)
  name: TransformToVector4(Vector2, Quaternion)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformToVector4_Vim_Math3d_Vector2_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector2,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector2, Vim.Math3d.Quaternion)
  nameWithType: MathOps.TransformToVector4(Vector2, Quaternion)
- uid: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector3,Vim.Math3d.Matrix4x4)
  name: TransformToVector4(Vector3, Matrix4x4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformToVector4_Vim_Math3d_Vector3_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector3,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector3, Vim.Math3d.Matrix4x4)
  nameWithType: MathOps.TransformToVector4(Vector3, Matrix4x4)
- uid: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  name: TransformToVector4(Vector3, Quaternion)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformToVector4_Vim_Math3d_Vector3_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.MathOps.TransformToVector4(Vim.Math3d.Vector3, Vim.Math3d.Quaternion)
  nameWithType: MathOps.TransformToVector4(Vector3, Quaternion)
- uid: Vim.Math3d.MathOps.TransformToVector4*
  name: TransformToVector4
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_TransformToVector4_
  commentId: Overload:Vim.Math3d.MathOps.TransformToVector4
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.TransformToVector4
  nameWithType: MathOps.TransformToVector4
- uid: Vim.Math3d.MathOps.Truncate(System.Double)
  name: Truncate(Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_System_Double_
  commentId: M:Vim.Math3d.MathOps.Truncate(System.Double)
  fullName: Vim.Math3d.MathOps.Truncate(System.Double)
  nameWithType: MathOps.Truncate(Double)
- uid: Vim.Math3d.MathOps.Truncate(System.Single)
  name: Truncate(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_System_Single_
  commentId: M:Vim.Math3d.MathOps.Truncate(System.Single)
  fullName: Vim.Math3d.MathOps.Truncate(System.Single)
  nameWithType: MathOps.Truncate(Single)
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector2)
  name: Truncate(DVector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_Vim_Math3d_DVector2_
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector2)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector2)
  nameWithType: MathOps.Truncate(DVector2)
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector3)
  name: Truncate(DVector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_Vim_Math3d_DVector3_
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector3)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector3)
  nameWithType: MathOps.Truncate(DVector3)
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  name: Truncate(DVector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_Vim_Math3d_DVector4_
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  nameWithType: MathOps.Truncate(DVector4)
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector2)
  name: Truncate(Vector2)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector2)
  nameWithType: MathOps.Truncate(Vector2)
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  name: Truncate(Vector3)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  nameWithType: MathOps.Truncate(Vector3)
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector4)
  name: Truncate(Vector4)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector4)
  nameWithType: MathOps.Truncate(Vector4)
- uid: Vim.Math3d.MathOps.Truncate*
  name: Truncate
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Truncate_
  commentId: Overload:Vim.Math3d.MathOps.Truncate
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Truncate
  nameWithType: MathOps.Truncate
- uid: Vim.Math3d.MathOps.Within(System.Double,System.Double,System.Double)
  name: Within(Double, Double, Double)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Within_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.MathOps.Within(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.MathOps.Within(System.Double, System.Double, System.Double)
  nameWithType: MathOps.Within(Double, Double, Double)
- uid: Vim.Math3d.MathOps.Within(System.Int32,System.Int32,System.Int32)
  name: Within(Int32, Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Within_System_Int32_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.Within(System.Int32,System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.Within(System.Int32, System.Int32, System.Int32)
  nameWithType: MathOps.Within(Int32, Int32, Int32)
- uid: Vim.Math3d.MathOps.Within(System.Int64,System.Int64,System.Int64)
  name: Within(Int64, Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Within_System_Int64_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.Within(System.Int64,System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.Within(System.Int64, System.Int64, System.Int64)
  nameWithType: MathOps.Within(Int64, Int64, Int64)
- uid: Vim.Math3d.MathOps.Within(System.Single,System.Single,System.Single)
  name: Within(Single, Single, Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Within_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.MathOps.Within(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.MathOps.Within(System.Single, System.Single, System.Single)
  nameWithType: MathOps.Within(Single, Single, Single)
- uid: Vim.Math3d.MathOps.Within*
  name: Within
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_Within_
  commentId: Overload:Vim.Math3d.MathOps.Within
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.Within
  nameWithType: MathOps.Within
- uid: Vim.Math3d.MathOps.WrapAngle(System.Single)
  name: WrapAngle(Single)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_WrapAngle_System_Single_
  commentId: M:Vim.Math3d.MathOps.WrapAngle(System.Single)
  fullName: Vim.Math3d.MathOps.WrapAngle(System.Single)
  nameWithType: MathOps.WrapAngle(Single)
- uid: Vim.Math3d.MathOps.WrapAngle*
  name: WrapAngle
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_WrapAngle_
  commentId: Overload:Vim.Math3d.MathOps.WrapAngle
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.WrapAngle
  nameWithType: MathOps.WrapAngle
- uid: Vim.Math3d.MathOps.XOr(System.Boolean,System.Boolean)
  name: XOr(Boolean, Boolean)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_XOr_System_Boolean_System_Boolean_
  commentId: M:Vim.Math3d.MathOps.XOr(System.Boolean,System.Boolean)
  fullName: Vim.Math3d.MathOps.XOr(System.Boolean, System.Boolean)
  nameWithType: MathOps.XOr(Boolean, Boolean)
- uid: Vim.Math3d.MathOps.XOr(System.Int32,System.Int32)
  name: XOr(Int32, Int32)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_XOr_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.MathOps.XOr(System.Int32,System.Int32)
  fullName: Vim.Math3d.MathOps.XOr(System.Int32, System.Int32)
  nameWithType: MathOps.XOr(Int32, Int32)
- uid: Vim.Math3d.MathOps.XOr(System.Int64,System.Int64)
  name: XOr(Int64, Int64)
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_XOr_System_Int64_System_Int64_
  commentId: M:Vim.Math3d.MathOps.XOr(System.Int64,System.Int64)
  fullName: Vim.Math3d.MathOps.XOr(System.Int64, System.Int64)
  nameWithType: MathOps.XOr(Int64, Int64)
- uid: Vim.Math3d.MathOps.XOr*
  name: XOr
  href: api/Vim.Math3d.MathOps.html#Vim_Math3d_MathOps_XOr_
  commentId: Overload:Vim.Math3d.MathOps.XOr
  isSpec: "True"
  fullName: Vim.Math3d.MathOps.XOr
  nameWithType: MathOps.XOr
- uid: Vim.Math3d.Matrix4x4
  name: Matrix4x4
  href: api/Vim.Math3d.Matrix4x4.html
  commentId: T:Vim.Math3d.Matrix4x4
  fullName: Vim.Math3d.Matrix4x4
  nameWithType: Matrix4x4
- uid: Vim.Math3d.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  name: Matrix4x4(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4__ctor_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.Matrix4x4(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.Matrix4x4(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.#ctor*
  name: Matrix4x4
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4__ctor_
  commentId: Overload:Vim.Math3d.Matrix4x4.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Matrix4x4
  nameWithType: Matrix4x4.Matrix4x4
- uid: Vim.Math3d.Matrix4x4.Add(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Add(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Add_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.Add(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Add(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Add(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Add*
  name: Add
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Add_
  commentId: Overload:Vim.Math3d.Matrix4x4.Add
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Add
  nameWithType: Matrix4x4.Add
- uid: Vim.Math3d.Matrix4x4.Col0
  name: Col0
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col0
  commentId: P:Vim.Math3d.Matrix4x4.Col0
  fullName: Vim.Math3d.Matrix4x4.Col0
  nameWithType: Matrix4x4.Col0
- uid: Vim.Math3d.Matrix4x4.Col0*
  name: Col0
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col0_
  commentId: Overload:Vim.Math3d.Matrix4x4.Col0
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Col0
  nameWithType: Matrix4x4.Col0
- uid: Vim.Math3d.Matrix4x4.Col1
  name: Col1
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col1
  commentId: P:Vim.Math3d.Matrix4x4.Col1
  fullName: Vim.Math3d.Matrix4x4.Col1
  nameWithType: Matrix4x4.Col1
- uid: Vim.Math3d.Matrix4x4.Col1*
  name: Col1
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col1_
  commentId: Overload:Vim.Math3d.Matrix4x4.Col1
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Col1
  nameWithType: Matrix4x4.Col1
- uid: Vim.Math3d.Matrix4x4.Col2
  name: Col2
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col2
  commentId: P:Vim.Math3d.Matrix4x4.Col2
  fullName: Vim.Math3d.Matrix4x4.Col2
  nameWithType: Matrix4x4.Col2
- uid: Vim.Math3d.Matrix4x4.Col2*
  name: Col2
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col2_
  commentId: Overload:Vim.Math3d.Matrix4x4.Col2
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Col2
  nameWithType: Matrix4x4.Col2
- uid: Vim.Math3d.Matrix4x4.Col3
  name: Col3
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col3
  commentId: P:Vim.Math3d.Matrix4x4.Col3
  fullName: Vim.Math3d.Matrix4x4.Col3
  nameWithType: Matrix4x4.Col3
- uid: Vim.Math3d.Matrix4x4.Col3*
  name: Col3
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Col3_
  commentId: Overload:Vim.Math3d.Matrix4x4.Col3
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Col3
  nameWithType: Matrix4x4.Col3
- uid: Vim.Math3d.Matrix4x4.CreateBillboard(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateBillboard(Vector3, Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateBillboard_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateBillboard(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateBillboard(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateBillboard(Vector3, Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateBillboard*
  name: CreateBillboard
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateBillboard_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateBillboard
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateBillboard
  nameWithType: Matrix4x4.CreateBillboard
- uid: Vim.Math3d.Matrix4x4.CreateConstrainedBillboard(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateConstrainedBillboard(Vector3, Vector3, Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateConstrainedBillboard_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateConstrainedBillboard(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateConstrainedBillboard(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateConstrainedBillboard(Vector3, Vector3, Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateConstrainedBillboard*
  name: CreateConstrainedBillboard
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateConstrainedBillboard_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateConstrainedBillboard
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateConstrainedBillboard
  nameWithType: Matrix4x4.CreateConstrainedBillboard
- uid: Vim.Math3d.Matrix4x4.CreateFromAxisAngle(Vim.Math3d.Vector3,System.Single)
  name: CreateFromAxisAngle(Vector3, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromAxisAngle_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateFromAxisAngle(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateFromAxisAngle(Vim.Math3d.Vector3, System.Single)
  nameWithType: Matrix4x4.CreateFromAxisAngle(Vector3, Single)
- uid: Vim.Math3d.Matrix4x4.CreateFromAxisAngle*
  name: CreateFromAxisAngle
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromAxisAngle_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateFromAxisAngle
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateFromAxisAngle
  nameWithType: Matrix4x4.CreateFromAxisAngle
- uid: Vim.Math3d.Matrix4x4.CreateFromQuaternion(Vim.Math3d.Quaternion)
  name: CreateFromQuaternion(Quaternion)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromQuaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Matrix4x4.CreateFromQuaternion(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Matrix4x4.CreateFromQuaternion(Vim.Math3d.Quaternion)
  nameWithType: Matrix4x4.CreateFromQuaternion(Quaternion)
- uid: Vim.Math3d.Matrix4x4.CreateFromQuaternion*
  name: CreateFromQuaternion
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromQuaternion_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateFromQuaternion
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateFromQuaternion
  nameWithType: Matrix4x4.CreateFromQuaternion
- uid: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateFromRows(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromRows_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateFromRows(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateFromRows(Vector3, Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromRows_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateFromRows(Vector3, Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: CreateFromRows(Vector4, Vector4, Vector4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromRows_Vim_Math3d_Vector4_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector4, Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Matrix4x4.CreateFromRows(Vector4, Vector4, Vector4)
- uid: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: CreateFromRows(Vector4, Vector4, Vector4, Vector4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromRows_Vim_Math3d_Vector4_Vim_Math3d_Vector4_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Matrix4x4.CreateFromRows(Vim.Math3d.Vector4, Vim.Math3d.Vector4, Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Matrix4x4.CreateFromRows(Vector4, Vector4, Vector4, Vector4)
- uid: Vim.Math3d.Matrix4x4.CreateFromRows*
  name: CreateFromRows
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromRows_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateFromRows
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateFromRows
  nameWithType: Matrix4x4.CreateFromRows
- uid: Vim.Math3d.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  name: CreateFromYawPitchRoll(Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromYawPitchRoll_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateFromYawPitchRoll(System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreateFromYawPitchRoll(Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreateFromYawPitchRoll*
  name: CreateFromYawPitchRoll
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateFromYawPitchRoll_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateFromYawPitchRoll
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateFromYawPitchRoll
  nameWithType: Matrix4x4.CreateFromYawPitchRoll
- uid: Vim.Math3d.Matrix4x4.CreateLookAt(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateLookAt(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateLookAt_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateLookAt(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateLookAt(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateLookAt(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateLookAt*
  name: CreateLookAt
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateLookAt_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateLookAt
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateLookAt
  nameWithType: Matrix4x4.CreateLookAt
- uid: Vim.Math3d.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  name: CreateOrthographic(Single, Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateOrthographic_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateOrthographic(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreateOrthographic(Single, Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreateOrthographic*
  name: CreateOrthographic
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateOrthographic_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateOrthographic
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateOrthographic
  nameWithType: Matrix4x4.CreateOrthographic
- uid: Vim.Math3d.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  name: CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateOrthographicOffCenter_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreateOrthographicOffCenter*
  name: CreateOrthographicOffCenter
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateOrthographicOffCenter_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateOrthographicOffCenter
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateOrthographicOffCenter
  nameWithType: Matrix4x4.CreateOrthographicOffCenter
- uid: Vim.Math3d.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  name: CreatePerspective(Single, Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreatePerspective_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreatePerspective(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreatePerspective(Single, Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreatePerspective*
  name: CreatePerspective
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreatePerspective_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreatePerspective
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreatePerspective
  nameWithType: Matrix4x4.CreatePerspective
- uid: Vim.Math3d.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  name: CreatePerspectiveFieldOfView(Single, Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreatePerspectiveFieldOfView_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreatePerspectiveFieldOfView(Single, Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreatePerspectiveFieldOfView*
  name: CreatePerspectiveFieldOfView
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreatePerspectiveFieldOfView_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreatePerspectiveFieldOfView
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreatePerspectiveFieldOfView
  nameWithType: Matrix4x4.CreatePerspectiveFieldOfView
- uid: Vim.Math3d.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  name: CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreatePerspectiveOffCenter_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreatePerspectiveOffCenter*
  name: CreatePerspectiveOffCenter
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreatePerspectiveOffCenter_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreatePerspectiveOffCenter
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreatePerspectiveOffCenter
  nameWithType: Matrix4x4.CreatePerspectiveOffCenter
- uid: Vim.Math3d.Matrix4x4.CreateReflection(Vim.Math3d.Plane)
  name: CreateReflection(Plane)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateReflection_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Matrix4x4.CreateReflection(Vim.Math3d.Plane)
  fullName: Vim.Math3d.Matrix4x4.CreateReflection(Vim.Math3d.Plane)
  nameWithType: Matrix4x4.CreateReflection(Plane)
- uid: Vim.Math3d.Matrix4x4.CreateReflection*
  name: CreateReflection
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateReflection_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateReflection
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateReflection
  nameWithType: Matrix4x4.CreateReflection
- uid: Vim.Math3d.Matrix4x4.CreateRotation(Vim.Math3d.Quaternion)
  name: CreateRotation(Quaternion)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotation_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Matrix4x4.CreateRotation(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Matrix4x4.CreateRotation(Vim.Math3d.Quaternion)
  nameWithType: Matrix4x4.CreateRotation(Quaternion)
- uid: Vim.Math3d.Matrix4x4.CreateRotation*
  name: CreateRotation
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotation_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateRotation
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateRotation
  nameWithType: Matrix4x4.CreateRotation
- uid: Vim.Math3d.Matrix4x4.CreateRotationX(System.Single)
  name: CreateRotationX(Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationX_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateRotationX(System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateRotationX(System.Single)
  nameWithType: Matrix4x4.CreateRotationX(Single)
- uid: Vim.Math3d.Matrix4x4.CreateRotationX(System.Single,Vim.Math3d.Vector3)
  name: CreateRotationX(Single, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationX_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateRotationX(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateRotationX(System.Single, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateRotationX(Single, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateRotationX*
  name: CreateRotationX
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationX_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateRotationX
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateRotationX
  nameWithType: Matrix4x4.CreateRotationX
- uid: Vim.Math3d.Matrix4x4.CreateRotationY(System.Single)
  name: CreateRotationY(Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationY_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateRotationY(System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateRotationY(System.Single)
  nameWithType: Matrix4x4.CreateRotationY(Single)
- uid: Vim.Math3d.Matrix4x4.CreateRotationY(System.Single,Vim.Math3d.Vector3)
  name: CreateRotationY(Single, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationY_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateRotationY(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateRotationY(System.Single, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateRotationY(Single, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateRotationY*
  name: CreateRotationY
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationY_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateRotationY
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateRotationY
  nameWithType: Matrix4x4.CreateRotationY
- uid: Vim.Math3d.Matrix4x4.CreateRotationZ(System.Single)
  name: CreateRotationZ(Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationZ_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateRotationZ(System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateRotationZ(System.Single)
  nameWithType: Matrix4x4.CreateRotationZ(Single)
- uid: Vim.Math3d.Matrix4x4.CreateRotationZ(System.Single,Vim.Math3d.Vector3)
  name: CreateRotationZ(Single, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationZ_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateRotationZ(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateRotationZ(System.Single, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateRotationZ(Single, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateRotationZ*
  name: CreateRotationZ
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateRotationZ_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateRotationZ
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateRotationZ
  nameWithType: Matrix4x4.CreateRotationZ
- uid: Vim.Math3d.Matrix4x4.CreateScale(System.Single)
  name: CreateScale(Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateScale_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateScale(System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateScale(System.Single)
  nameWithType: Matrix4x4.CreateScale(Single)
- uid: Vim.Math3d.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)
  name: CreateScale(Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateScale_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateScale(System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreateScale(Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,Vim.Math3d.Vector3)
  name: CreateScale(Single, Single, Single, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateScale_System_Single_System_Single_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateScale(System.Single, System.Single, System.Single, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateScale(Single, Single, Single, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateScale(System.Single,Vim.Math3d.Vector3)
  name: CreateScale(Single, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateScale_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateScale(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateScale(System.Single, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateScale(Single, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateScale(Vim.Math3d.Vector3)
  name: CreateScale(Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateScale_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateScale(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateScale(Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateScale(Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateScale(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateScale(Vector3, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateScale_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateScale(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateScale(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateScale(Vector3, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateScale*
  name: CreateScale
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateScale_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateScale
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateScale
  nameWithType: Matrix4x4.CreateScale
- uid: Vim.Math3d.Matrix4x4.CreateShadow(Vim.Math3d.Vector3,Vim.Math3d.Plane)
  name: CreateShadow(Vector3, Plane)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateShadow_Vim_Math3d_Vector3_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Matrix4x4.CreateShadow(Vim.Math3d.Vector3,Vim.Math3d.Plane)
  fullName: Vim.Math3d.Matrix4x4.CreateShadow(Vim.Math3d.Vector3, Vim.Math3d.Plane)
  nameWithType: Matrix4x4.CreateShadow(Vector3, Plane)
- uid: Vim.Math3d.Matrix4x4.CreateShadow*
  name: CreateShadow
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateShadow_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateShadow
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateShadow
  nameWithType: Matrix4x4.CreateShadow
- uid: Vim.Math3d.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)
  name: CreateTranslation(Single, Single, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateTranslation_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Matrix4x4.CreateTranslation(System.Single, System.Single, System.Single)
  nameWithType: Matrix4x4.CreateTranslation(Single, Single, Single)
- uid: Vim.Math3d.Matrix4x4.CreateTranslation(Vim.Math3d.Vector3)
  name: CreateTranslation(Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateTranslation_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateTranslation(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateTranslation(Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateTranslation(Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateTranslation*
  name: CreateTranslation
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateTranslation_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateTranslation
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateTranslation
  nameWithType: Matrix4x4.CreateTranslation
- uid: Vim.Math3d.Matrix4x4.CreateTRS(Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  name: CreateTRS(Vector3, Quaternion, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateTRS_Vim_Math3d_Vector3_Vim_Math3d_Quaternion_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateTRS(Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateTRS(Vim.Math3d.Vector3, Vim.Math3d.Quaternion, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateTRS(Vector3, Quaternion, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateTRS*
  name: CreateTRS
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateTRS_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateTRS
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateTRS
  nameWithType: Matrix4x4.CreateTRS
- uid: Vim.Math3d.Matrix4x4.CreateWorld(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateWorld(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateWorld_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.CreateWorld(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.CreateWorld(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.CreateWorld(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Matrix4x4.CreateWorld*
  name: CreateWorld
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_CreateWorld_
  commentId: Overload:Vim.Math3d.Matrix4x4.CreateWorld
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.CreateWorld
  nameWithType: Matrix4x4.CreateWorld
- uid: Vim.Math3d.Matrix4x4.Decompose(Vim.Math3d.Matrix4x4,Vim.Math3d.Vector3@,Vim.Math3d.Quaternion@,Vim.Math3d.Vector3@)
  name: Decompose(Matrix4x4, out Vector3, out Quaternion, out Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Decompose_Vim_Math3d_Matrix4x4_Vim_Math3d_Vector3__Vim_Math3d_Quaternion__Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Matrix4x4.Decompose(Vim.Math3d.Matrix4x4,Vim.Math3d.Vector3@,Vim.Math3d.Quaternion@,Vim.Math3d.Vector3@)
  name.vb: Decompose(Matrix4x4, ByRef Vector3, ByRef Quaternion, ByRef Vector3)
  fullName: Vim.Math3d.Matrix4x4.Decompose(Vim.Math3d.Matrix4x4, out Vim.Math3d.Vector3, out Vim.Math3d.Quaternion, out Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Matrix4x4.Decompose(Vim.Math3d.Matrix4x4, ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Quaternion, ByRef Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.Decompose(Matrix4x4, out Vector3, out Quaternion, out Vector3)
  nameWithType.vb: Matrix4x4.Decompose(Matrix4x4, ByRef Vector3, ByRef Quaternion, ByRef Vector3)
- uid: Vim.Math3d.Matrix4x4.Decompose(Vim.Math3d.Vector3@,Vim.Math3d.Quaternion@,Vim.Math3d.Vector3@)
  name: Decompose(out Vector3, out Quaternion, out Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Decompose_Vim_Math3d_Vector3__Vim_Math3d_Quaternion__Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Matrix4x4.Decompose(Vim.Math3d.Vector3@,Vim.Math3d.Quaternion@,Vim.Math3d.Vector3@)
  name.vb: Decompose(ByRef Vector3, ByRef Quaternion, ByRef Vector3)
  fullName: Vim.Math3d.Matrix4x4.Decompose(out Vim.Math3d.Vector3, out Vim.Math3d.Quaternion, out Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Matrix4x4.Decompose(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Quaternion, ByRef Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.Decompose(out Vector3, out Quaternion, out Vector3)
  nameWithType.vb: Matrix4x4.Decompose(ByRef Vector3, ByRef Quaternion, ByRef Vector3)
- uid: Vim.Math3d.Matrix4x4.Decompose*
  name: Decompose
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Decompose_
  commentId: Overload:Vim.Math3d.Matrix4x4.Decompose
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Decompose
  nameWithType: Matrix4x4.Decompose
- uid: Vim.Math3d.Matrix4x4.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Equals_System_Object_
  commentId: M:Vim.Math3d.Matrix4x4.Equals(System.Object)
  fullName: Vim.Math3d.Matrix4x4.Equals(System.Object)
  nameWithType: Matrix4x4.Equals(Object)
- uid: Vim.Math3d.Matrix4x4.Equals(Vim.Math3d.Matrix4x4)
  name: Equals(Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Equals_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.Equals(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Equals(Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Equals(Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Equals*
  name: Equals
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Equals_
  commentId: Overload:Vim.Math3d.Matrix4x4.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Equals
  nameWithType: Matrix4x4.Equals
- uid: Vim.Math3d.Matrix4x4.ExtractDirectScale
  name: ExtractDirectScale()
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_ExtractDirectScale
  commentId: M:Vim.Math3d.Matrix4x4.ExtractDirectScale
  fullName: Vim.Math3d.Matrix4x4.ExtractDirectScale()
  nameWithType: Matrix4x4.ExtractDirectScale()
- uid: Vim.Math3d.Matrix4x4.ExtractDirectScale*
  name: ExtractDirectScale
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_ExtractDirectScale_
  commentId: Overload:Vim.Math3d.Matrix4x4.ExtractDirectScale
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.ExtractDirectScale
  nameWithType: Matrix4x4.ExtractDirectScale
- uid: Vim.Math3d.Matrix4x4.Get3x3RotationDeterminant
  name: Get3x3RotationDeterminant()
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Get3x3RotationDeterminant
  commentId: M:Vim.Math3d.Matrix4x4.Get3x3RotationDeterminant
  fullName: Vim.Math3d.Matrix4x4.Get3x3RotationDeterminant()
  nameWithType: Matrix4x4.Get3x3RotationDeterminant()
- uid: Vim.Math3d.Matrix4x4.Get3x3RotationDeterminant*
  name: Get3x3RotationDeterminant
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Get3x3RotationDeterminant_
  commentId: Overload:Vim.Math3d.Matrix4x4.Get3x3RotationDeterminant
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Get3x3RotationDeterminant
  nameWithType: Matrix4x4.Get3x3RotationDeterminant
- uid: Vim.Math3d.Matrix4x4.GetCol(System.Int32)
  name: GetCol(Int32)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetCol_System_Int32_
  commentId: M:Vim.Math3d.Matrix4x4.GetCol(System.Int32)
  fullName: Vim.Math3d.Matrix4x4.GetCol(System.Int32)
  nameWithType: Matrix4x4.GetCol(Int32)
- uid: Vim.Math3d.Matrix4x4.GetCol*
  name: GetCol
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetCol_
  commentId: Overload:Vim.Math3d.Matrix4x4.GetCol
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.GetCol
  nameWithType: Matrix4x4.GetCol
- uid: Vim.Math3d.Matrix4x4.GetDeterminant
  name: GetDeterminant()
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetDeterminant
  commentId: M:Vim.Math3d.Matrix4x4.GetDeterminant
  fullName: Vim.Math3d.Matrix4x4.GetDeterminant()
  nameWithType: Matrix4x4.GetDeterminant()
- uid: Vim.Math3d.Matrix4x4.GetDeterminant*
  name: GetDeterminant
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetDeterminant_
  commentId: Overload:Vim.Math3d.Matrix4x4.GetDeterminant
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.GetDeterminant
  nameWithType: Matrix4x4.GetDeterminant
- uid: Vim.Math3d.Matrix4x4.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetHashCode
  commentId: M:Vim.Math3d.Matrix4x4.GetHashCode
  fullName: Vim.Math3d.Matrix4x4.GetHashCode()
  nameWithType: Matrix4x4.GetHashCode()
- uid: Vim.Math3d.Matrix4x4.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetHashCode_
  commentId: Overload:Vim.Math3d.Matrix4x4.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.GetHashCode
  nameWithType: Matrix4x4.GetHashCode
- uid: Vim.Math3d.Matrix4x4.GetRow(System.Int32)
  name: GetRow(Int32)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetRow_System_Int32_
  commentId: M:Vim.Math3d.Matrix4x4.GetRow(System.Int32)
  fullName: Vim.Math3d.Matrix4x4.GetRow(System.Int32)
  nameWithType: Matrix4x4.GetRow(Int32)
- uid: Vim.Math3d.Matrix4x4.GetRow*
  name: GetRow
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_GetRow_
  commentId: Overload:Vim.Math3d.Matrix4x4.GetRow
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.GetRow
  nameWithType: Matrix4x4.GetRow
- uid: Vim.Math3d.Matrix4x4.Identity
  name: Identity
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Identity
  commentId: F:Vim.Math3d.Matrix4x4.Identity
  fullName: Vim.Math3d.Matrix4x4.Identity
  nameWithType: Matrix4x4.Identity
- uid: Vim.Math3d.Matrix4x4.Invert(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4@)
  name: Invert(Matrix4x4, out Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Invert_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4__
  commentId: M:Vim.Math3d.Matrix4x4.Invert(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4@)
  name.vb: Invert(Matrix4x4, ByRef Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Invert(Vim.Math3d.Matrix4x4, out Vim.Math3d.Matrix4x4)
  fullName.vb: Vim.Math3d.Matrix4x4.Invert(Vim.Math3d.Matrix4x4, ByRef Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Invert(Matrix4x4, out Matrix4x4)
  nameWithType.vb: Matrix4x4.Invert(Matrix4x4, ByRef Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Invert*
  name: Invert
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Invert_
  commentId: Overload:Vim.Math3d.Matrix4x4.Invert
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Invert
  nameWithType: Matrix4x4.Invert
- uid: Vim.Math3d.Matrix4x4.IsIdentity
  name: IsIdentity
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_IsIdentity
  commentId: P:Vim.Math3d.Matrix4x4.IsIdentity
  fullName: Vim.Math3d.Matrix4x4.IsIdentity
  nameWithType: Matrix4x4.IsIdentity
- uid: Vim.Math3d.Matrix4x4.IsIdentity*
  name: IsIdentity
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_IsIdentity_
  commentId: Overload:Vim.Math3d.Matrix4x4.IsIdentity
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.IsIdentity
  nameWithType: Matrix4x4.IsIdentity
- uid: Vim.Math3d.Matrix4x4.IsReflection
  name: IsReflection
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_IsReflection
  commentId: P:Vim.Math3d.Matrix4x4.IsReflection
  fullName: Vim.Math3d.Matrix4x4.IsReflection
  nameWithType: Matrix4x4.IsReflection
- uid: Vim.Math3d.Matrix4x4.IsReflection*
  name: IsReflection
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_IsReflection_
  commentId: Overload:Vim.Math3d.Matrix4x4.IsReflection
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.IsReflection
  nameWithType: Matrix4x4.IsReflection
- uid: Vim.Math3d.Matrix4x4.Lerp(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4,System.Single)
  name: Lerp(Matrix4x4, Matrix4x4, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Lerp_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.Lerp(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4,System.Single)
  fullName: Vim.Math3d.Matrix4x4.Lerp(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4, System.Single)
  nameWithType: Matrix4x4.Lerp(Matrix4x4, Matrix4x4, Single)
- uid: Vim.Math3d.Matrix4x4.Lerp*
  name: Lerp
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Lerp_
  commentId: Overload:Vim.Math3d.Matrix4x4.Lerp
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Lerp
  nameWithType: Matrix4x4.Lerp
- uid: Vim.Math3d.Matrix4x4.M11
  name: M11
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M11
  commentId: F:Vim.Math3d.Matrix4x4.M11
  fullName: Vim.Math3d.Matrix4x4.M11
  nameWithType: Matrix4x4.M11
- uid: Vim.Math3d.Matrix4x4.M12
  name: M12
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M12
  commentId: F:Vim.Math3d.Matrix4x4.M12
  fullName: Vim.Math3d.Matrix4x4.M12
  nameWithType: Matrix4x4.M12
- uid: Vim.Math3d.Matrix4x4.M13
  name: M13
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M13
  commentId: F:Vim.Math3d.Matrix4x4.M13
  fullName: Vim.Math3d.Matrix4x4.M13
  nameWithType: Matrix4x4.M13
- uid: Vim.Math3d.Matrix4x4.M14
  name: M14
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M14
  commentId: F:Vim.Math3d.Matrix4x4.M14
  fullName: Vim.Math3d.Matrix4x4.M14
  nameWithType: Matrix4x4.M14
- uid: Vim.Math3d.Matrix4x4.M21
  name: M21
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M21
  commentId: F:Vim.Math3d.Matrix4x4.M21
  fullName: Vim.Math3d.Matrix4x4.M21
  nameWithType: Matrix4x4.M21
- uid: Vim.Math3d.Matrix4x4.M22
  name: M22
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M22
  commentId: F:Vim.Math3d.Matrix4x4.M22
  fullName: Vim.Math3d.Matrix4x4.M22
  nameWithType: Matrix4x4.M22
- uid: Vim.Math3d.Matrix4x4.M23
  name: M23
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M23
  commentId: F:Vim.Math3d.Matrix4x4.M23
  fullName: Vim.Math3d.Matrix4x4.M23
  nameWithType: Matrix4x4.M23
- uid: Vim.Math3d.Matrix4x4.M24
  name: M24
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M24
  commentId: F:Vim.Math3d.Matrix4x4.M24
  fullName: Vim.Math3d.Matrix4x4.M24
  nameWithType: Matrix4x4.M24
- uid: Vim.Math3d.Matrix4x4.M31
  name: M31
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M31
  commentId: F:Vim.Math3d.Matrix4x4.M31
  fullName: Vim.Math3d.Matrix4x4.M31
  nameWithType: Matrix4x4.M31
- uid: Vim.Math3d.Matrix4x4.M32
  name: M32
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M32
  commentId: F:Vim.Math3d.Matrix4x4.M32
  fullName: Vim.Math3d.Matrix4x4.M32
  nameWithType: Matrix4x4.M32
- uid: Vim.Math3d.Matrix4x4.M33
  name: M33
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M33
  commentId: F:Vim.Math3d.Matrix4x4.M33
  fullName: Vim.Math3d.Matrix4x4.M33
  nameWithType: Matrix4x4.M33
- uid: Vim.Math3d.Matrix4x4.M34
  name: M34
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M34
  commentId: F:Vim.Math3d.Matrix4x4.M34
  fullName: Vim.Math3d.Matrix4x4.M34
  nameWithType: Matrix4x4.M34
- uid: Vim.Math3d.Matrix4x4.M41
  name: M41
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M41
  commentId: F:Vim.Math3d.Matrix4x4.M41
  fullName: Vim.Math3d.Matrix4x4.M41
  nameWithType: Matrix4x4.M41
- uid: Vim.Math3d.Matrix4x4.M42
  name: M42
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M42
  commentId: F:Vim.Math3d.Matrix4x4.M42
  fullName: Vim.Math3d.Matrix4x4.M42
  nameWithType: Matrix4x4.M42
- uid: Vim.Math3d.Matrix4x4.M43
  name: M43
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M43
  commentId: F:Vim.Math3d.Matrix4x4.M43
  fullName: Vim.Math3d.Matrix4x4.M43
  nameWithType: Matrix4x4.M43
- uid: Vim.Math3d.Matrix4x4.M44
  name: M44
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_M44
  commentId: F:Vim.Math3d.Matrix4x4.M44
  fullName: Vim.Math3d.Matrix4x4.M44
  nameWithType: Matrix4x4.M44
- uid: Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4,System.Single)
  name: Multiply(Matrix4x4, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Multiply_Vim_Math3d_Matrix4x4_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4,System.Single)
  fullName: Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4, System.Single)
  nameWithType: Matrix4x4.Multiply(Matrix4x4, Single)
- uid: Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Multiply(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Multiply_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Multiply(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Multiply*
  name: Multiply
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Multiply_
  commentId: Overload:Vim.Math3d.Matrix4x4.Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Multiply
  nameWithType: Matrix4x4.Multiply
- uid: Vim.Math3d.Matrix4x4.Negate(Vim.Math3d.Matrix4x4)
  name: Negate(Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Negate_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.Negate(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Negate(Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Negate(Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Negate*
  name: Negate
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Negate_
  commentId: Overload:Vim.Math3d.Matrix4x4.Negate
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Negate
  nameWithType: Matrix4x4.Negate
- uid: Vim.Math3d.Matrix4x4.op_Addition(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Addition(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Addition_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.op_Addition(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Addition(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Addition(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Addition_
  commentId: Overload:Vim.Math3d.Matrix4x4.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Addition
  nameWithType: Matrix4x4.Addition
- uid: Vim.Math3d.Matrix4x4.op_Equality(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Equality(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Equality_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.op_Equality(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Equality(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Equality(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Equality_
  commentId: Overload:Vim.Math3d.Matrix4x4.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Equality
  nameWithType: Matrix4x4.Equality
- uid: Vim.Math3d.Matrix4x4.op_Inequality(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Inequality(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Inequality_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.op_Inequality(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Inequality(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Inequality(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Inequality_
  commentId: Overload:Vim.Math3d.Matrix4x4.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Inequality
  nameWithType: Matrix4x4.Inequality
- uid: Vim.Math3d.Matrix4x4.op_Multiply(Vim.Math3d.Matrix4x4,System.Single)
  name: Multiply(Matrix4x4, Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Multiply_Vim_Math3d_Matrix4x4_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.op_Multiply(Vim.Math3d.Matrix4x4,System.Single)
  fullName: Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4, System.Single)
  nameWithType: Matrix4x4.Multiply(Matrix4x4, Single)
- uid: Vim.Math3d.Matrix4x4.op_Multiply(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Multiply(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Multiply_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.op_Multiply(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Multiply(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Multiply(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Multiply_
  commentId: Overload:Vim.Math3d.Matrix4x4.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Multiply
  nameWithType: Matrix4x4.Multiply
- uid: Vim.Math3d.Matrix4x4.op_Subtraction(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Subtraction(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Subtraction_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.op_Subtraction(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Subtraction(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Subtraction(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_Subtraction_
  commentId: Overload:Vim.Math3d.Matrix4x4.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Subtraction
  nameWithType: Matrix4x4.Subtraction
- uid: Vim.Math3d.Matrix4x4.op_UnaryNegation(Vim.Math3d.Matrix4x4)
  name: UnaryNegation(Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_UnaryNegation_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.op_UnaryNegation(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.UnaryNegation(Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.UnaryNegation(Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Matrix4x4.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.UnaryNegation
  nameWithType: Matrix4x4.UnaryNegation
- uid: Vim.Math3d.Matrix4x4.Row0
  name: Row0
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row0
  commentId: P:Vim.Math3d.Matrix4x4.Row0
  fullName: Vim.Math3d.Matrix4x4.Row0
  nameWithType: Matrix4x4.Row0
- uid: Vim.Math3d.Matrix4x4.Row0*
  name: Row0
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row0_
  commentId: Overload:Vim.Math3d.Matrix4x4.Row0
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Row0
  nameWithType: Matrix4x4.Row0
- uid: Vim.Math3d.Matrix4x4.Row1
  name: Row1
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row1
  commentId: P:Vim.Math3d.Matrix4x4.Row1
  fullName: Vim.Math3d.Matrix4x4.Row1
  nameWithType: Matrix4x4.Row1
- uid: Vim.Math3d.Matrix4x4.Row1*
  name: Row1
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row1_
  commentId: Overload:Vim.Math3d.Matrix4x4.Row1
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Row1
  nameWithType: Matrix4x4.Row1
- uid: Vim.Math3d.Matrix4x4.Row2
  name: Row2
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row2
  commentId: P:Vim.Math3d.Matrix4x4.Row2
  fullName: Vim.Math3d.Matrix4x4.Row2
  nameWithType: Matrix4x4.Row2
- uid: Vim.Math3d.Matrix4x4.Row2*
  name: Row2
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row2_
  commentId: Overload:Vim.Math3d.Matrix4x4.Row2
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Row2
  nameWithType: Matrix4x4.Row2
- uid: Vim.Math3d.Matrix4x4.Row3
  name: Row3
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row3
  commentId: P:Vim.Math3d.Matrix4x4.Row3
  fullName: Vim.Math3d.Matrix4x4.Row3
  nameWithType: Matrix4x4.Row3
- uid: Vim.Math3d.Matrix4x4.Row3*
  name: Row3
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Row3_
  commentId: Overload:Vim.Math3d.Matrix4x4.Row3
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Row3
  nameWithType: Matrix4x4.Row3
- uid: Vim.Math3d.Matrix4x4.ScaleTranslation(System.Single)
  name: ScaleTranslation(Single)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_ScaleTranslation_System_Single_
  commentId: M:Vim.Math3d.Matrix4x4.ScaleTranslation(System.Single)
  fullName: Vim.Math3d.Matrix4x4.ScaleTranslation(System.Single)
  nameWithType: Matrix4x4.ScaleTranslation(Single)
- uid: Vim.Math3d.Matrix4x4.ScaleTranslation*
  name: ScaleTranslation
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_ScaleTranslation_
  commentId: Overload:Vim.Math3d.Matrix4x4.ScaleTranslation
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.ScaleTranslation
  nameWithType: Matrix4x4.ScaleTranslation
- uid: Vim.Math3d.Matrix4x4.SetTranslation(Vim.Math3d.Vector3)
  name: SetTranslation(Vector3)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_SetTranslation_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Matrix4x4.SetTranslation(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Matrix4x4.SetTranslation(Vim.Math3d.Vector3)
  nameWithType: Matrix4x4.SetTranslation(Vector3)
- uid: Vim.Math3d.Matrix4x4.SetTranslation*
  name: SetTranslation
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_SetTranslation_
  commentId: Overload:Vim.Math3d.Matrix4x4.SetTranslation
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.SetTranslation
  nameWithType: Matrix4x4.SetTranslation
- uid: Vim.Math3d.Matrix4x4.Subtract(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  name: Subtract(Matrix4x4, Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Subtract_Vim_Math3d_Matrix4x4_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.Subtract(Vim.Math3d.Matrix4x4,Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Subtract(Vim.Math3d.Matrix4x4, Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Subtract(Matrix4x4, Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Subtract*
  name: Subtract
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Subtract_
  commentId: Overload:Vim.Math3d.Matrix4x4.Subtract
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Subtract
  nameWithType: Matrix4x4.Subtract
- uid: Vim.Math3d.Matrix4x4.ToString
  name: ToString()
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_ToString
  commentId: M:Vim.Math3d.Matrix4x4.ToString
  fullName: Vim.Math3d.Matrix4x4.ToString()
  nameWithType: Matrix4x4.ToString()
- uid: Vim.Math3d.Matrix4x4.ToString*
  name: ToString
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_ToString_
  commentId: Overload:Vim.Math3d.Matrix4x4.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.ToString
  nameWithType: Matrix4x4.ToString
- uid: Vim.Math3d.Matrix4x4.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Transform(Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Transform(Vim.Math3d.Matrix4x4,Vim.Math3d.Quaternion)
  name: Transform(Matrix4x4, Quaternion)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Transform_Vim_Math3d_Matrix4x4_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Matrix4x4.Transform(Vim.Math3d.Matrix4x4,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Matrix4x4.Transform(Vim.Math3d.Matrix4x4, Vim.Math3d.Quaternion)
  nameWithType: Matrix4x4.Transform(Matrix4x4, Quaternion)
- uid: Vim.Math3d.Matrix4x4.Transform*
  name: Transform
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Transform_
  commentId: Overload:Vim.Math3d.Matrix4x4.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Transform
  nameWithType: Matrix4x4.Transform
- uid: Vim.Math3d.Matrix4x4.Translation
  name: Translation
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Translation
  commentId: P:Vim.Math3d.Matrix4x4.Translation
  fullName: Vim.Math3d.Matrix4x4.Translation
  nameWithType: Matrix4x4.Translation
- uid: Vim.Math3d.Matrix4x4.Translation*
  name: Translation
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Translation_
  commentId: Overload:Vim.Math3d.Matrix4x4.Translation
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Translation
  nameWithType: Matrix4x4.Translation
- uid: Vim.Math3d.Matrix4x4.Transpose
  name: Transpose()
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Transpose
  commentId: M:Vim.Math3d.Matrix4x4.Transpose
  fullName: Vim.Math3d.Matrix4x4.Transpose()
  nameWithType: Matrix4x4.Transpose()
- uid: Vim.Math3d.Matrix4x4.Transpose(Vim.Math3d.Matrix4x4)
  name: Transpose(Matrix4x4)
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Transpose_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Matrix4x4.Transpose(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Matrix4x4.Transpose(Vim.Math3d.Matrix4x4)
  nameWithType: Matrix4x4.Transpose(Matrix4x4)
- uid: Vim.Math3d.Matrix4x4.Transpose*
  name: Transpose
  href: api/Vim.Math3d.Matrix4x4.html#Vim_Math3d_Matrix4x4_Transpose_
  commentId: Overload:Vim.Math3d.Matrix4x4.Transpose
  isSpec: "True"
  fullName: Vim.Math3d.Matrix4x4.Transpose
  nameWithType: Matrix4x4.Transpose
- uid: Vim.Math3d.Motion
  name: Motion
  href: api/Vim.Math3d.Motion.html
  commentId: T:Vim.Math3d.Motion
  fullName: Vim.Math3d.Motion
  nameWithType: Motion
- uid: Vim.Math3d.Motion.#ctor(System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion})
  name: Motion((LinearMotion linear, AngularMotion angular))
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion__ctor_System_ValueTuple_Vim_Math3d_LinearMotion_Vim_Math3d_AngularMotion__
  commentId: M:Vim.Math3d.Motion.#ctor(System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion})
  name.vb: Motion((linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion))
  fullName: Vim.Math3d.Motion.Motion(System.ValueTuple<Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion>)
  fullName.vb: Vim.Math3d.Motion.Motion(System.ValueTuple(Of Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion))
  nameWithType: Motion.Motion((LinearMotion linear, AngularMotion angular))
  nameWithType.vb: Motion.Motion((linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion))
- uid: Vim.Math3d.Motion.#ctor(Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion)
  name: Motion(LinearMotion, AngularMotion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion__ctor_Vim_Math3d_LinearMotion_Vim_Math3d_AngularMotion_
  commentId: M:Vim.Math3d.Motion.#ctor(Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion)
  fullName: Vim.Math3d.Motion.Motion(Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion)
  nameWithType: Motion.Motion(LinearMotion, AngularMotion)
- uid: Vim.Math3d.Motion.#ctor*
  name: Motion
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion__ctor_
  commentId: Overload:Vim.Math3d.Motion.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Motion.Motion
  nameWithType: Motion.Motion
- uid: Vim.Math3d.Motion.AlmostEquals(Vim.Math3d.Motion,System.Single)
  name: AlmostEquals(Motion, Single)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_AlmostEquals_Vim_Math3d_Motion_System_Single_
  commentId: M:Vim.Math3d.Motion.AlmostEquals(Vim.Math3d.Motion,System.Single)
  fullName: Vim.Math3d.Motion.AlmostEquals(Vim.Math3d.Motion, System.Single)
  nameWithType: Motion.AlmostEquals(Motion, Single)
- uid: Vim.Math3d.Motion.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_AlmostEquals_
  commentId: Overload:Vim.Math3d.Motion.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Motion.AlmostEquals
  nameWithType: Motion.AlmostEquals
- uid: Vim.Math3d.Motion.Angular
  name: Angular
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Angular
  commentId: F:Vim.Math3d.Motion.Angular
  fullName: Vim.Math3d.Motion.Angular
  nameWithType: Motion.Angular
- uid: Vim.Math3d.Motion.Create(System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion})
  name: Create((LinearMotion linear, AngularMotion angular))
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Create_System_ValueTuple_Vim_Math3d_LinearMotion_Vim_Math3d_AngularMotion__
  commentId: M:Vim.Math3d.Motion.Create(System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion})
  name.vb: Create((linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion))
  fullName: Vim.Math3d.Motion.Create(System.ValueTuple<Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion>)
  fullName.vb: Vim.Math3d.Motion.Create(System.ValueTuple(Of Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion))
  nameWithType: Motion.Create((LinearMotion linear, AngularMotion angular))
  nameWithType.vb: Motion.Create((linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion))
- uid: Vim.Math3d.Motion.Create(Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion)
  name: Create(LinearMotion, AngularMotion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Create_Vim_Math3d_LinearMotion_Vim_Math3d_AngularMotion_
  commentId: M:Vim.Math3d.Motion.Create(Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion)
  fullName: Vim.Math3d.Motion.Create(Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion)
  nameWithType: Motion.Create(LinearMotion, AngularMotion)
- uid: Vim.Math3d.Motion.Create*
  name: Create
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Create_
  commentId: Overload:Vim.Math3d.Motion.Create
  isSpec: "True"
  fullName: Vim.Math3d.Motion.Create
  nameWithType: Motion.Create
- uid: Vim.Math3d.Motion.Deconstruct(Vim.Math3d.LinearMotion@,Vim.Math3d.AngularMotion@)
  name: Deconstruct(out LinearMotion, out AngularMotion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Deconstruct_Vim_Math3d_LinearMotion__Vim_Math3d_AngularMotion__
  commentId: M:Vim.Math3d.Motion.Deconstruct(Vim.Math3d.LinearMotion@,Vim.Math3d.AngularMotion@)
  name.vb: Deconstruct(ByRef LinearMotion, ByRef AngularMotion)
  fullName: Vim.Math3d.Motion.Deconstruct(out Vim.Math3d.LinearMotion, out Vim.Math3d.AngularMotion)
  fullName.vb: Vim.Math3d.Motion.Deconstruct(ByRef Vim.Math3d.LinearMotion, ByRef Vim.Math3d.AngularMotion)
  nameWithType: Motion.Deconstruct(out LinearMotion, out AngularMotion)
  nameWithType.vb: Motion.Deconstruct(ByRef LinearMotion, ByRef AngularMotion)
- uid: Vim.Math3d.Motion.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Deconstruct_
  commentId: Overload:Vim.Math3d.Motion.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Motion.Deconstruct
  nameWithType: Motion.Deconstruct
- uid: Vim.Math3d.Motion.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Equals_System_Object_
  commentId: M:Vim.Math3d.Motion.Equals(System.Object)
  fullName: Vim.Math3d.Motion.Equals(System.Object)
  nameWithType: Motion.Equals(Object)
- uid: Vim.Math3d.Motion.Equals(Vim.Math3d.Motion)
  name: Equals(Motion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Equals_Vim_Math3d_Motion_
  commentId: M:Vim.Math3d.Motion.Equals(Vim.Math3d.Motion)
  fullName: Vim.Math3d.Motion.Equals(Vim.Math3d.Motion)
  nameWithType: Motion.Equals(Motion)
- uid: Vim.Math3d.Motion.Equals*
  name: Equals
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Equals_
  commentId: Overload:Vim.Math3d.Motion.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Motion.Equals
  nameWithType: Motion.Equals
- uid: Vim.Math3d.Motion.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_GetHashCode
  commentId: M:Vim.Math3d.Motion.GetHashCode
  fullName: Vim.Math3d.Motion.GetHashCode()
  nameWithType: Motion.GetHashCode()
- uid: Vim.Math3d.Motion.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_GetHashCode_
  commentId: Overload:Vim.Math3d.Motion.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Motion.GetHashCode
  nameWithType: Motion.GetHashCode
- uid: Vim.Math3d.Motion.Linear
  name: Linear
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Linear
  commentId: F:Vim.Math3d.Motion.Linear
  fullName: Vim.Math3d.Motion.Linear
  nameWithType: Motion.Linear
- uid: Vim.Math3d.Motion.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_MaxValue
  commentId: F:Vim.Math3d.Motion.MaxValue
  fullName: Vim.Math3d.Motion.MaxValue
  nameWithType: Motion.MaxValue
- uid: Vim.Math3d.Motion.MinValue
  name: MinValue
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_MinValue
  commentId: F:Vim.Math3d.Motion.MinValue
  fullName: Vim.Math3d.Motion.MinValue
  nameWithType: Motion.MinValue
- uid: Vim.Math3d.Motion.op_Equality(Vim.Math3d.Motion,Vim.Math3d.Motion)
  name: Equality(Motion, Motion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_op_Equality_Vim_Math3d_Motion_Vim_Math3d_Motion_
  commentId: M:Vim.Math3d.Motion.op_Equality(Vim.Math3d.Motion,Vim.Math3d.Motion)
  fullName: Vim.Math3d.Motion.Equality(Vim.Math3d.Motion, Vim.Math3d.Motion)
  nameWithType: Motion.Equality(Motion, Motion)
- uid: Vim.Math3d.Motion.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_op_Equality_
  commentId: Overload:Vim.Math3d.Motion.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Motion.Equality
  nameWithType: Motion.Equality
- uid: Vim.Math3d.Motion.op_Implicit(System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion})~Vim.Math3d.Motion
  name: Implicit((LinearMotion linear, AngularMotion angular) to Motion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_op_Implicit_System_ValueTuple_Vim_Math3d_LinearMotion_Vim_Math3d_AngularMotion___Vim_Math3d_Motion
  commentId: M:Vim.Math3d.Motion.op_Implicit(System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion})~Vim.Math3d.Motion
  name.vb: Widening((linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion) to Motion)
  fullName: Vim.Math3d.Motion.Implicit(System.ValueTuple<Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion> to Vim.Math3d.Motion)
  fullName.vb: Vim.Math3d.Motion.Widening(System.ValueTuple(Of Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion) to Vim.Math3d.Motion)
  nameWithType: Motion.Implicit((LinearMotion linear, AngularMotion angular) to Motion)
  nameWithType.vb: Motion.Widening((linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion) to Motion)
- uid: Vim.Math3d.Motion.op_Implicit(Vim.Math3d.Motion)~System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion}
  name: Implicit(Motion to (LinearMotion linear, AngularMotion angular))
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_op_Implicit_Vim_Math3d_Motion__System_ValueTuple_Vim_Math3d_LinearMotion_Vim_Math3d_AngularMotion_
  commentId: M:Vim.Math3d.Motion.op_Implicit(Vim.Math3d.Motion)~System.ValueTuple{Vim.Math3d.LinearMotion,Vim.Math3d.AngularMotion}
  name.vb: Widening(Motion to (linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion))
  fullName: Vim.Math3d.Motion.Implicit(Vim.Math3d.Motion to System.ValueTuple<Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion>)
  fullName.vb: Vim.Math3d.Motion.Widening(Vim.Math3d.Motion to System.ValueTuple(Of Vim.Math3d.LinearMotion, Vim.Math3d.AngularMotion))
  nameWithType: Motion.Implicit(Motion to (LinearMotion linear, AngularMotion angular))
  nameWithType.vb: Motion.Widening(Motion to (linear As LinearMotion, angular As AngularMotion)(Of LinearMotion, AngularMotion))
- uid: Vim.Math3d.Motion.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_op_Implicit_
  commentId: Overload:Vim.Math3d.Motion.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Motion.Implicit
  fullName.vb: Vim.Math3d.Motion.Widening
  nameWithType: Motion.Implicit
  nameWithType.vb: Motion.Widening
- uid: Vim.Math3d.Motion.op_Inequality(Vim.Math3d.Motion,Vim.Math3d.Motion)
  name: Inequality(Motion, Motion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_op_Inequality_Vim_Math3d_Motion_Vim_Math3d_Motion_
  commentId: M:Vim.Math3d.Motion.op_Inequality(Vim.Math3d.Motion,Vim.Math3d.Motion)
  fullName: Vim.Math3d.Motion.Inequality(Vim.Math3d.Motion, Vim.Math3d.Motion)
  nameWithType: Motion.Inequality(Motion, Motion)
- uid: Vim.Math3d.Motion.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_op_Inequality_
  commentId: Overload:Vim.Math3d.Motion.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Motion.Inequality
  nameWithType: Motion.Inequality
- uid: Vim.Math3d.Motion.SetAngular(Vim.Math3d.AngularMotion)
  name: SetAngular(AngularMotion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_SetAngular_Vim_Math3d_AngularMotion_
  commentId: M:Vim.Math3d.Motion.SetAngular(Vim.Math3d.AngularMotion)
  fullName: Vim.Math3d.Motion.SetAngular(Vim.Math3d.AngularMotion)
  nameWithType: Motion.SetAngular(AngularMotion)
- uid: Vim.Math3d.Motion.SetAngular*
  name: SetAngular
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_SetAngular_
  commentId: Overload:Vim.Math3d.Motion.SetAngular
  isSpec: "True"
  fullName: Vim.Math3d.Motion.SetAngular
  nameWithType: Motion.SetAngular
- uid: Vim.Math3d.Motion.SetLinear(Vim.Math3d.LinearMotion)
  name: SetLinear(LinearMotion)
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_SetLinear_Vim_Math3d_LinearMotion_
  commentId: M:Vim.Math3d.Motion.SetLinear(Vim.Math3d.LinearMotion)
  fullName: Vim.Math3d.Motion.SetLinear(Vim.Math3d.LinearMotion)
  nameWithType: Motion.SetLinear(LinearMotion)
- uid: Vim.Math3d.Motion.SetLinear*
  name: SetLinear
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_SetLinear_
  commentId: Overload:Vim.Math3d.Motion.SetLinear
  isSpec: "True"
  fullName: Vim.Math3d.Motion.SetLinear
  nameWithType: Motion.SetLinear
- uid: Vim.Math3d.Motion.ToString
  name: ToString()
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_ToString
  commentId: M:Vim.Math3d.Motion.ToString
  fullName: Vim.Math3d.Motion.ToString()
  nameWithType: Motion.ToString()
- uid: Vim.Math3d.Motion.ToString*
  name: ToString
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_ToString_
  commentId: Overload:Vim.Math3d.Motion.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Motion.ToString
  nameWithType: Motion.ToString
- uid: Vim.Math3d.Motion.Zero
  name: Zero
  href: api/Vim.Math3d.Motion.html#Vim_Math3d_Motion_Zero
  commentId: F:Vim.Math3d.Motion.Zero
  fullName: Vim.Math3d.Motion.Zero
  nameWithType: Motion.Zero
- uid: Vim.Math3d.MovementExtensions
  name: MovementExtensions
  href: api/Vim.Math3d.MovementExtensions.html
  commentId: T:Vim.Math3d.MovementExtensions
  fullName: Vim.Math3d.MovementExtensions
  nameWithType: MovementExtensions
- uid: Vim.Math3d.Plane
  name: Plane
  href: api/Vim.Math3d.Plane.html
  commentId: T:Vim.Math3d.Plane
  fullName: Vim.Math3d.Plane
  nameWithType: Plane
- uid: Vim.Math3d.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  name: Plane(Single, Single, Single, Single)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane__ctor_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Plane.Plane(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Plane.Plane(Single, Single, Single, Single)
- uid: Vim.Math3d.Plane.#ctor(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name: Plane((Vector3 normal, Single d))
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane__ctor_System_ValueTuple_Vim_Math3d_Vector3_System_Single__
  commentId: M:Vim.Math3d.Plane.#ctor(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name.vb: Plane((normal As Vector3, d As Single)(Of Vector3, Single))
  fullName: Vim.Math3d.Plane.Plane(System.ValueTuple<Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.Plane.Plane(System.ValueTuple(Of Vim.Math3d.Vector3, System.Single))
  nameWithType: Plane.Plane((Vector3 normal, Single d))
  nameWithType.vb: Plane.Plane((normal As Vector3, d As Single)(Of Vector3, Single))
- uid: Vim.Math3d.Plane.#ctor(Vim.Math3d.Vector3,System.Single)
  name: Plane(Vector3, Single)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane__ctor_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Plane.#ctor(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Plane.Plane(Vim.Math3d.Vector3, System.Single)
  nameWithType: Plane.Plane(Vector3, Single)
- uid: Vim.Math3d.Plane.#ctor(Vim.Math3d.Vector4)
  name: Plane(Vector4)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane__ctor_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Plane.#ctor(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Plane.Plane(Vim.Math3d.Vector4)
  nameWithType: Plane.Plane(Vector4)
- uid: Vim.Math3d.Plane.#ctor*
  name: Plane
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane__ctor_
  commentId: Overload:Vim.Math3d.Plane.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Plane
  nameWithType: Plane.Plane
- uid: Vim.Math3d.Plane.AlmostEquals(Vim.Math3d.Plane,System.Single)
  name: AlmostEquals(Plane, Single)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_AlmostEquals_Vim_Math3d_Plane_System_Single_
  commentId: M:Vim.Math3d.Plane.AlmostEquals(Vim.Math3d.Plane,System.Single)
  fullName: Vim.Math3d.Plane.AlmostEquals(Vim.Math3d.Plane, System.Single)
  nameWithType: Plane.AlmostEquals(Plane, Single)
- uid: Vim.Math3d.Plane.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_AlmostEquals_
  commentId: Overload:Vim.Math3d.Plane.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Plane.AlmostEquals
  nameWithType: Plane.AlmostEquals
- uid: Vim.Math3d.Plane.ClassifyPoint(Vim.Math3d.Vector3)
  name: ClassifyPoint(Vector3)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ClassifyPoint_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Plane.ClassifyPoint(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Plane.ClassifyPoint(Vim.Math3d.Vector3)
  nameWithType: Plane.ClassifyPoint(Vector3)
- uid: Vim.Math3d.Plane.ClassifyPoint*
  name: ClassifyPoint
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ClassifyPoint_
  commentId: Overload:Vim.Math3d.Plane.ClassifyPoint
  isSpec: "True"
  fullName: Vim.Math3d.Plane.ClassifyPoint
  nameWithType: Plane.ClassifyPoint
- uid: Vim.Math3d.Plane.Create(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name: Create((Vector3 normal, Single d))
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Create_System_ValueTuple_Vim_Math3d_Vector3_System_Single__
  commentId: M:Vim.Math3d.Plane.Create(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name.vb: Create((normal As Vector3, d As Single)(Of Vector3, Single))
  fullName: Vim.Math3d.Plane.Create(System.ValueTuple<Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.Plane.Create(System.ValueTuple(Of Vim.Math3d.Vector3, System.Single))
  nameWithType: Plane.Create((Vector3 normal, Single d))
  nameWithType.vb: Plane.Create((normal As Vector3, d As Single)(Of Vector3, Single))
- uid: Vim.Math3d.Plane.Create(Vim.Math3d.Vector3,System.Single)
  name: Create(Vector3, Single)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Create_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Plane.Create(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Plane.Create(Vim.Math3d.Vector3, System.Single)
  nameWithType: Plane.Create(Vector3, Single)
- uid: Vim.Math3d.Plane.Create*
  name: Create
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Create_
  commentId: Overload:Vim.Math3d.Plane.Create
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Create
  nameWithType: Plane.Create
- uid: Vim.Math3d.Plane.CreateFromNormalAndPoint(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateFromNormalAndPoint(Vector3, Vector3)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_CreateFromNormalAndPoint_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Plane.CreateFromNormalAndPoint(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Plane.CreateFromNormalAndPoint(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Plane.CreateFromNormalAndPoint(Vector3, Vector3)
- uid: Vim.Math3d.Plane.CreateFromNormalAndPoint*
  name: CreateFromNormalAndPoint
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_CreateFromNormalAndPoint_
  commentId: Overload:Vim.Math3d.Plane.CreateFromNormalAndPoint
  isSpec: "True"
  fullName: Vim.Math3d.Plane.CreateFromNormalAndPoint
  nameWithType: Plane.CreateFromNormalAndPoint
- uid: Vim.Math3d.Plane.CreateFromVertices(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateFromVertices(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_CreateFromVertices_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Plane.CreateFromVertices(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Plane.CreateFromVertices(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Plane.CreateFromVertices(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Plane.CreateFromVertices*
  name: CreateFromVertices
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_CreateFromVertices_
  commentId: Overload:Vim.Math3d.Plane.CreateFromVertices
  isSpec: "True"
  fullName: Vim.Math3d.Plane.CreateFromVertices
  nameWithType: Plane.CreateFromVertices
- uid: Vim.Math3d.Plane.D
  name: D
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_D
  commentId: F:Vim.Math3d.Plane.D
  fullName: Vim.Math3d.Plane.D
  nameWithType: Plane.D
- uid: Vim.Math3d.Plane.Deconstruct(Vim.Math3d.Vector3@,System.Single@)
  name: Deconstruct(out Vector3, out Single)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Deconstruct_Vim_Math3d_Vector3__System_Single__
  commentId: M:Vim.Math3d.Plane.Deconstruct(Vim.Math3d.Vector3@,System.Single@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Single)
  fullName: Vim.Math3d.Plane.Deconstruct(out Vim.Math3d.Vector3, out System.Single)
  fullName.vb: Vim.Math3d.Plane.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef System.Single)
  nameWithType: Plane.Deconstruct(out Vector3, out Single)
  nameWithType.vb: Plane.Deconstruct(ByRef Vector3, ByRef Single)
- uid: Vim.Math3d.Plane.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Deconstruct_
  commentId: Overload:Vim.Math3d.Plane.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Deconstruct
  nameWithType: Plane.Deconstruct
- uid: Vim.Math3d.Plane.Dot(Vim.Math3d.Plane,Vim.Math3d.Vector4)
  name: Dot(Plane, Vector4)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Dot_Vim_Math3d_Plane_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Plane.Dot(Vim.Math3d.Plane,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Plane.Dot(Vim.Math3d.Plane, Vim.Math3d.Vector4)
  nameWithType: Plane.Dot(Plane, Vector4)
- uid: Vim.Math3d.Plane.Dot(Vim.Math3d.Vector4)
  name: Dot(Vector4)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Dot_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Plane.Dot(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Plane.Dot(Vim.Math3d.Vector4)
  nameWithType: Plane.Dot(Vector4)
- uid: Vim.Math3d.Plane.Dot*
  name: Dot
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Dot_
  commentId: Overload:Vim.Math3d.Plane.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Dot
  nameWithType: Plane.Dot
- uid: Vim.Math3d.Plane.DotCoordinate(Vim.Math3d.Plane,Vim.Math3d.Vector3)
  name: DotCoordinate(Plane, Vector3)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_DotCoordinate_Vim_Math3d_Plane_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Plane.DotCoordinate(Vim.Math3d.Plane,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Plane.DotCoordinate(Vim.Math3d.Plane, Vim.Math3d.Vector3)
  nameWithType: Plane.DotCoordinate(Plane, Vector3)
- uid: Vim.Math3d.Plane.DotCoordinate*
  name: DotCoordinate
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_DotCoordinate_
  commentId: Overload:Vim.Math3d.Plane.DotCoordinate
  isSpec: "True"
  fullName: Vim.Math3d.Plane.DotCoordinate
  nameWithType: Plane.DotCoordinate
- uid: Vim.Math3d.Plane.DotNormal(Vim.Math3d.Plane,Vim.Math3d.Vector3)
  name: DotNormal(Plane, Vector3)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_DotNormal_Vim_Math3d_Plane_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Plane.DotNormal(Vim.Math3d.Plane,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Plane.DotNormal(Vim.Math3d.Plane, Vim.Math3d.Vector3)
  nameWithType: Plane.DotNormal(Plane, Vector3)
- uid: Vim.Math3d.Plane.DotNormal*
  name: DotNormal
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_DotNormal_
  commentId: Overload:Vim.Math3d.Plane.DotNormal
  isSpec: "True"
  fullName: Vim.Math3d.Plane.DotNormal
  nameWithType: Plane.DotNormal
- uid: Vim.Math3d.Plane.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Equals_System_Object_
  commentId: M:Vim.Math3d.Plane.Equals(System.Object)
  fullName: Vim.Math3d.Plane.Equals(System.Object)
  nameWithType: Plane.Equals(Object)
- uid: Vim.Math3d.Plane.Equals(Vim.Math3d.Plane)
  name: Equals(Plane)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Equals_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Plane.Equals(Vim.Math3d.Plane)
  fullName: Vim.Math3d.Plane.Equals(Vim.Math3d.Plane)
  nameWithType: Plane.Equals(Plane)
- uid: Vim.Math3d.Plane.Equals*
  name: Equals
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Equals_
  commentId: Overload:Vim.Math3d.Plane.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Equals
  nameWithType: Plane.Equals
- uid: Vim.Math3d.Plane.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_GetHashCode
  commentId: M:Vim.Math3d.Plane.GetHashCode
  fullName: Vim.Math3d.Plane.GetHashCode()
  nameWithType: Plane.GetHashCode()
- uid: Vim.Math3d.Plane.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_GetHashCode_
  commentId: Overload:Vim.Math3d.Plane.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Plane.GetHashCode
  nameWithType: Plane.GetHashCode
- uid: Vim.Math3d.Plane.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_MaxValue
  commentId: F:Vim.Math3d.Plane.MaxValue
  fullName: Vim.Math3d.Plane.MaxValue
  nameWithType: Plane.MaxValue
- uid: Vim.Math3d.Plane.MinValue
  name: MinValue
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_MinValue
  commentId: F:Vim.Math3d.Plane.MinValue
  fullName: Vim.Math3d.Plane.MinValue
  nameWithType: Plane.MinValue
- uid: Vim.Math3d.Plane.Normal
  name: Normal
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Normal
  commentId: F:Vim.Math3d.Plane.Normal
  fullName: Vim.Math3d.Plane.Normal
  nameWithType: Plane.Normal
- uid: Vim.Math3d.Plane.Normalize(Vim.Math3d.Plane)
  name: Normalize(Plane)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Normalize_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Plane.Normalize(Vim.Math3d.Plane)
  fullName: Vim.Math3d.Plane.Normalize(Vim.Math3d.Plane)
  nameWithType: Plane.Normalize(Plane)
- uid: Vim.Math3d.Plane.Normalize*
  name: Normalize
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Normalize_
  commentId: Overload:Vim.Math3d.Plane.Normalize
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Normalize
  nameWithType: Plane.Normalize
- uid: Vim.Math3d.Plane.op_Equality(Vim.Math3d.Plane,Vim.Math3d.Plane)
  name: Equality(Plane, Plane)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_op_Equality_Vim_Math3d_Plane_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Plane.op_Equality(Vim.Math3d.Plane,Vim.Math3d.Plane)
  fullName: Vim.Math3d.Plane.Equality(Vim.Math3d.Plane, Vim.Math3d.Plane)
  nameWithType: Plane.Equality(Plane, Plane)
- uid: Vim.Math3d.Plane.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_op_Equality_
  commentId: Overload:Vim.Math3d.Plane.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Equality
  nameWithType: Plane.Equality
- uid: Vim.Math3d.Plane.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,System.Single})~Vim.Math3d.Plane
  name: Implicit((Vector3 normal, Single d) to Plane)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_System_Single___Vim_Math3d_Plane
  commentId: M:Vim.Math3d.Plane.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,System.Single})~Vim.Math3d.Plane
  name.vb: Widening((normal As Vector3, d As Single)(Of Vector3, Single) to Plane)
  fullName: Vim.Math3d.Plane.Implicit(System.ValueTuple<Vim.Math3d.Vector3, System.Single> to Vim.Math3d.Plane)
  fullName.vb: Vim.Math3d.Plane.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, System.Single) to Vim.Math3d.Plane)
  nameWithType: Plane.Implicit((Vector3 normal, Single d) to Plane)
  nameWithType.vb: Plane.Widening((normal As Vector3, d As Single)(Of Vector3, Single) to Plane)
- uid: Vim.Math3d.Plane.op_Implicit(Vim.Math3d.Plane)~System.ValueTuple{Vim.Math3d.Vector3,System.Single}
  name: Implicit(Plane to (Vector3 normal, Single d))
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_op_Implicit_Vim_Math3d_Plane__System_ValueTuple_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Plane.op_Implicit(Vim.Math3d.Plane)~System.ValueTuple{Vim.Math3d.Vector3,System.Single}
  name.vb: Widening(Plane to (normal As Vector3, d As Single)(Of Vector3, Single))
  fullName: Vim.Math3d.Plane.Implicit(Vim.Math3d.Plane to System.ValueTuple<Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.Plane.Widening(Vim.Math3d.Plane to System.ValueTuple(Of Vim.Math3d.Vector3, System.Single))
  nameWithType: Plane.Implicit(Plane to (Vector3 normal, Single d))
  nameWithType.vb: Plane.Widening(Plane to (normal As Vector3, d As Single)(Of Vector3, Single))
- uid: Vim.Math3d.Plane.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_op_Implicit_
  commentId: Overload:Vim.Math3d.Plane.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Plane.Implicit
  fullName.vb: Vim.Math3d.Plane.Widening
  nameWithType: Plane.Implicit
  nameWithType.vb: Plane.Widening
- uid: Vim.Math3d.Plane.op_Inequality(Vim.Math3d.Plane,Vim.Math3d.Plane)
  name: Inequality(Plane, Plane)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_op_Inequality_Vim_Math3d_Plane_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Plane.op_Inequality(Vim.Math3d.Plane,Vim.Math3d.Plane)
  fullName: Vim.Math3d.Plane.Inequality(Vim.Math3d.Plane, Vim.Math3d.Plane)
  nameWithType: Plane.Inequality(Plane, Plane)
- uid: Vim.Math3d.Plane.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_op_Inequality_
  commentId: Overload:Vim.Math3d.Plane.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Inequality
  nameWithType: Plane.Inequality
- uid: Vim.Math3d.Plane.ProjectPointOntoPlane(Vim.Math3d.Plane,Vim.Math3d.Vector3)
  name: ProjectPointOntoPlane(Plane, Vector3)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ProjectPointOntoPlane_Vim_Math3d_Plane_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Plane.ProjectPointOntoPlane(Vim.Math3d.Plane,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Plane.ProjectPointOntoPlane(Vim.Math3d.Plane, Vim.Math3d.Vector3)
  nameWithType: Plane.ProjectPointOntoPlane(Plane, Vector3)
- uid: Vim.Math3d.Plane.ProjectPointOntoPlane*
  name: ProjectPointOntoPlane
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ProjectPointOntoPlane_
  commentId: Overload:Vim.Math3d.Plane.ProjectPointOntoPlane
  isSpec: "True"
  fullName: Vim.Math3d.Plane.ProjectPointOntoPlane
  nameWithType: Plane.ProjectPointOntoPlane
- uid: Vim.Math3d.Plane.SetD(System.Single)
  name: SetD(Single)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_SetD_System_Single_
  commentId: M:Vim.Math3d.Plane.SetD(System.Single)
  fullName: Vim.Math3d.Plane.SetD(System.Single)
  nameWithType: Plane.SetD(Single)
- uid: Vim.Math3d.Plane.SetD*
  name: SetD
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_SetD_
  commentId: Overload:Vim.Math3d.Plane.SetD
  isSpec: "True"
  fullName: Vim.Math3d.Plane.SetD
  nameWithType: Plane.SetD
- uid: Vim.Math3d.Plane.SetNormal(Vim.Math3d.Vector3)
  name: SetNormal(Vector3)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_SetNormal_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Plane.SetNormal(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Plane.SetNormal(Vim.Math3d.Vector3)
  nameWithType: Plane.SetNormal(Vector3)
- uid: Vim.Math3d.Plane.SetNormal*
  name: SetNormal
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_SetNormal_
  commentId: Overload:Vim.Math3d.Plane.SetNormal
  isSpec: "True"
  fullName: Vim.Math3d.Plane.SetNormal
  nameWithType: Plane.SetNormal
- uid: Vim.Math3d.Plane.ToString
  name: ToString()
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ToString
  commentId: M:Vim.Math3d.Plane.ToString
  fullName: Vim.Math3d.Plane.ToString()
  nameWithType: Plane.ToString()
- uid: Vim.Math3d.Plane.ToString*
  name: ToString
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ToString_
  commentId: Overload:Vim.Math3d.Plane.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Plane.ToString
  nameWithType: Plane.ToString
- uid: Vim.Math3d.Plane.ToVector4
  name: ToVector4()
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ToVector4
  commentId: M:Vim.Math3d.Plane.ToVector4
  fullName: Vim.Math3d.Plane.ToVector4()
  nameWithType: Plane.ToVector4()
- uid: Vim.Math3d.Plane.ToVector4*
  name: ToVector4
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_ToVector4_
  commentId: Overload:Vim.Math3d.Plane.ToVector4
  isSpec: "True"
  fullName: Vim.Math3d.Plane.ToVector4
  nameWithType: Plane.ToVector4
- uid: Vim.Math3d.Plane.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Plane.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Plane.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Plane.Transform(Matrix4x4)
- uid: Vim.Math3d.Plane.Transform(Vim.Math3d.Quaternion)
  name: Transform(Quaternion)
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Transform_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Plane.Transform(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Plane.Transform(Vim.Math3d.Quaternion)
  nameWithType: Plane.Transform(Quaternion)
- uid: Vim.Math3d.Plane.Transform*
  name: Transform
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Transform_
  commentId: Overload:Vim.Math3d.Plane.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Plane.Transform
  nameWithType: Plane.Transform
- uid: Vim.Math3d.Plane.Zero
  name: Zero
  href: api/Vim.Math3d.Plane.html#Vim_Math3d_Plane_Zero
  commentId: F:Vim.Math3d.Plane.Zero
  fullName: Vim.Math3d.Plane.Zero
  nameWithType: Plane.Zero
- uid: Vim.Math3d.PlaneIntersectionType
  name: PlaneIntersectionType
  href: api/Vim.Math3d.PlaneIntersectionType.html
  commentId: T:Vim.Math3d.PlaneIntersectionType
  fullName: Vim.Math3d.PlaneIntersectionType
  nameWithType: PlaneIntersectionType
- uid: Vim.Math3d.PlaneIntersectionType.Back
  name: Back
  href: api/Vim.Math3d.PlaneIntersectionType.html#Vim_Math3d_PlaneIntersectionType_Back
  commentId: F:Vim.Math3d.PlaneIntersectionType.Back
  fullName: Vim.Math3d.PlaneIntersectionType.Back
  nameWithType: PlaneIntersectionType.Back
- uid: Vim.Math3d.PlaneIntersectionType.Front
  name: Front
  href: api/Vim.Math3d.PlaneIntersectionType.html#Vim_Math3d_PlaneIntersectionType_Front
  commentId: F:Vim.Math3d.PlaneIntersectionType.Front
  fullName: Vim.Math3d.PlaneIntersectionType.Front
  nameWithType: PlaneIntersectionType.Front
- uid: Vim.Math3d.PlaneIntersectionType.Intersecting
  name: Intersecting
  href: api/Vim.Math3d.PlaneIntersectionType.html#Vim_Math3d_PlaneIntersectionType_Intersecting
  commentId: F:Vim.Math3d.PlaneIntersectionType.Intersecting
  fullName: Vim.Math3d.PlaneIntersectionType.Intersecting
  nameWithType: PlaneIntersectionType.Intersecting
- uid: Vim.Math3d.PolarCoordinate
  name: PolarCoordinate
  href: api/Vim.Math3d.PolarCoordinate.html
  commentId: T:Vim.Math3d.PolarCoordinate
  fullName: Vim.Math3d.PolarCoordinate
  nameWithType: PolarCoordinate
- uid: Vim.Math3d.PolarCoordinate.#ctor(System.Double,System.Double)
  name: PolarCoordinate(Double, Double)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate__ctor_System_Double_System_Double_
  commentId: M:Vim.Math3d.PolarCoordinate.#ctor(System.Double,System.Double)
  fullName: Vim.Math3d.PolarCoordinate.PolarCoordinate(System.Double, System.Double)
  nameWithType: PolarCoordinate.PolarCoordinate(Double, Double)
- uid: Vim.Math3d.PolarCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name: PolarCoordinate((Double radius, Double azimuth))
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate__ctor_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.PolarCoordinate.#ctor(System.ValueTuple{System.Double,System.Double})
  name.vb: PolarCoordinate((radius As Double, azimuth As Double)(Of Double, Double))
  fullName: Vim.Math3d.PolarCoordinate.PolarCoordinate(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.PolarCoordinate.PolarCoordinate(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: PolarCoordinate.PolarCoordinate((Double radius, Double azimuth))
  nameWithType.vb: PolarCoordinate.PolarCoordinate((radius As Double, azimuth As Double)(Of Double, Double))
- uid: Vim.Math3d.PolarCoordinate.#ctor*
  name: PolarCoordinate
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate__ctor_
  commentId: Overload:Vim.Math3d.PolarCoordinate.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.PolarCoordinate
  nameWithType: PolarCoordinate.PolarCoordinate
- uid: Vim.Math3d.PolarCoordinate.AlmostEquals(Vim.Math3d.PolarCoordinate,System.Single)
  name: AlmostEquals(PolarCoordinate, Single)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_AlmostEquals_Vim_Math3d_PolarCoordinate_System_Single_
  commentId: M:Vim.Math3d.PolarCoordinate.AlmostEquals(Vim.Math3d.PolarCoordinate,System.Single)
  fullName: Vim.Math3d.PolarCoordinate.AlmostEquals(Vim.Math3d.PolarCoordinate, System.Single)
  nameWithType: PolarCoordinate.AlmostEquals(PolarCoordinate, Single)
- uid: Vim.Math3d.PolarCoordinate.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_AlmostEquals_
  commentId: Overload:Vim.Math3d.PolarCoordinate.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.AlmostEquals
  nameWithType: PolarCoordinate.AlmostEquals
- uid: Vim.Math3d.PolarCoordinate.Azimuth
  name: Azimuth
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Azimuth
  commentId: F:Vim.Math3d.PolarCoordinate.Azimuth
  fullName: Vim.Math3d.PolarCoordinate.Azimuth
  nameWithType: PolarCoordinate.Azimuth
- uid: Vim.Math3d.PolarCoordinate.Create(System.Double,System.Double)
  name: Create(Double, Double)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Create_System_Double_System_Double_
  commentId: M:Vim.Math3d.PolarCoordinate.Create(System.Double,System.Double)
  fullName: Vim.Math3d.PolarCoordinate.Create(System.Double, System.Double)
  nameWithType: PolarCoordinate.Create(Double, Double)
- uid: Vim.Math3d.PolarCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name: Create((Double radius, Double azimuth))
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Create_System_ValueTuple_System_Double_System_Double__
  commentId: M:Vim.Math3d.PolarCoordinate.Create(System.ValueTuple{System.Double,System.Double})
  name.vb: Create((radius As Double, azimuth As Double)(Of Double, Double))
  fullName: Vim.Math3d.PolarCoordinate.Create(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.PolarCoordinate.Create(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: PolarCoordinate.Create((Double radius, Double azimuth))
  nameWithType.vb: PolarCoordinate.Create((radius As Double, azimuth As Double)(Of Double, Double))
- uid: Vim.Math3d.PolarCoordinate.Create*
  name: Create
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Create_
  commentId: Overload:Vim.Math3d.PolarCoordinate.Create
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.Create
  nameWithType: PolarCoordinate.Create
- uid: Vim.Math3d.PolarCoordinate.Deconstruct(System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Deconstruct_System_Double__System_Double__
  commentId: M:Vim.Math3d.PolarCoordinate.Deconstruct(System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
  fullName: Vim.Math3d.PolarCoordinate.Deconstruct(out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.PolarCoordinate.Deconstruct(ByRef System.Double, ByRef System.Double)
  nameWithType: PolarCoordinate.Deconstruct(out Double, out Double)
  nameWithType.vb: PolarCoordinate.Deconstruct(ByRef Double, ByRef Double)
- uid: Vim.Math3d.PolarCoordinate.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Deconstruct_
  commentId: Overload:Vim.Math3d.PolarCoordinate.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.Deconstruct
  nameWithType: PolarCoordinate.Deconstruct
- uid: Vim.Math3d.PolarCoordinate.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Equals_System_Object_
  commentId: M:Vim.Math3d.PolarCoordinate.Equals(System.Object)
  fullName: Vim.Math3d.PolarCoordinate.Equals(System.Object)
  nameWithType: PolarCoordinate.Equals(Object)
- uid: Vim.Math3d.PolarCoordinate.Equals(Vim.Math3d.PolarCoordinate)
  name: Equals(PolarCoordinate)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Equals_Vim_Math3d_PolarCoordinate_
  commentId: M:Vim.Math3d.PolarCoordinate.Equals(Vim.Math3d.PolarCoordinate)
  fullName: Vim.Math3d.PolarCoordinate.Equals(Vim.Math3d.PolarCoordinate)
  nameWithType: PolarCoordinate.Equals(PolarCoordinate)
- uid: Vim.Math3d.PolarCoordinate.Equals*
  name: Equals
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Equals_
  commentId: Overload:Vim.Math3d.PolarCoordinate.Equals
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.Equals
  nameWithType: PolarCoordinate.Equals
- uid: Vim.Math3d.PolarCoordinate.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_GetHashCode
  commentId: M:Vim.Math3d.PolarCoordinate.GetHashCode
  fullName: Vim.Math3d.PolarCoordinate.GetHashCode()
  nameWithType: PolarCoordinate.GetHashCode()
- uid: Vim.Math3d.PolarCoordinate.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_GetHashCode_
  commentId: Overload:Vim.Math3d.PolarCoordinate.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.GetHashCode
  nameWithType: PolarCoordinate.GetHashCode
- uid: Vim.Math3d.PolarCoordinate.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_MaxValue
  commentId: F:Vim.Math3d.PolarCoordinate.MaxValue
  fullName: Vim.Math3d.PolarCoordinate.MaxValue
  nameWithType: PolarCoordinate.MaxValue
- uid: Vim.Math3d.PolarCoordinate.MinValue
  name: MinValue
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_MinValue
  commentId: F:Vim.Math3d.PolarCoordinate.MinValue
  fullName: Vim.Math3d.PolarCoordinate.MinValue
  nameWithType: PolarCoordinate.MinValue
- uid: Vim.Math3d.PolarCoordinate.op_Equality(Vim.Math3d.PolarCoordinate,Vim.Math3d.PolarCoordinate)
  name: Equality(PolarCoordinate, PolarCoordinate)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_op_Equality_Vim_Math3d_PolarCoordinate_Vim_Math3d_PolarCoordinate_
  commentId: M:Vim.Math3d.PolarCoordinate.op_Equality(Vim.Math3d.PolarCoordinate,Vim.Math3d.PolarCoordinate)
  fullName: Vim.Math3d.PolarCoordinate.Equality(Vim.Math3d.PolarCoordinate, Vim.Math3d.PolarCoordinate)
  nameWithType: PolarCoordinate.Equality(PolarCoordinate, PolarCoordinate)
- uid: Vim.Math3d.PolarCoordinate.op_Equality*
  name: Equality
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_op_Equality_
  commentId: Overload:Vim.Math3d.PolarCoordinate.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.Equality
  nameWithType: PolarCoordinate.Equality
- uid: Vim.Math3d.PolarCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.PolarCoordinate
  name: Implicit((Double radius, Double azimuth) to PolarCoordinate)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_op_Implicit_System_ValueTuple_System_Double_System_Double___Vim_Math3d_PolarCoordinate
  commentId: M:Vim.Math3d.PolarCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double})~Vim.Math3d.PolarCoordinate
  name.vb: Widening((radius As Double, azimuth As Double)(Of Double, Double) to PolarCoordinate)
  fullName: Vim.Math3d.PolarCoordinate.Implicit(System.ValueTuple<System.Double, System.Double> to Vim.Math3d.PolarCoordinate)
  fullName.vb: Vim.Math3d.PolarCoordinate.Widening(System.ValueTuple(Of System.Double, System.Double) to Vim.Math3d.PolarCoordinate)
  nameWithType: PolarCoordinate.Implicit((Double radius, Double azimuth) to PolarCoordinate)
  nameWithType.vb: PolarCoordinate.Widening((radius As Double, azimuth As Double)(Of Double, Double) to PolarCoordinate)
- uid: Vim.Math3d.PolarCoordinate.op_Implicit(Vim.Math3d.PolarCoordinate)~System.ValueTuple{System.Double,System.Double}
  name: Implicit(PolarCoordinate to (Double radius, Double azimuth))
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_op_Implicit_Vim_Math3d_PolarCoordinate__System_ValueTuple_System_Double_System_Double_
  commentId: M:Vim.Math3d.PolarCoordinate.op_Implicit(Vim.Math3d.PolarCoordinate)~System.ValueTuple{System.Double,System.Double}
  name.vb: Widening(PolarCoordinate to (radius As Double, azimuth As Double)(Of Double, Double))
  fullName: Vim.Math3d.PolarCoordinate.Implicit(Vim.Math3d.PolarCoordinate to System.ValueTuple<System.Double, System.Double>)
  fullName.vb: Vim.Math3d.PolarCoordinate.Widening(Vim.Math3d.PolarCoordinate to System.ValueTuple(Of System.Double, System.Double))
  nameWithType: PolarCoordinate.Implicit(PolarCoordinate to (Double radius, Double azimuth))
  nameWithType.vb: PolarCoordinate.Widening(PolarCoordinate to (radius As Double, azimuth As Double)(Of Double, Double))
- uid: Vim.Math3d.PolarCoordinate.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_op_Implicit_
  commentId: Overload:Vim.Math3d.PolarCoordinate.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.PolarCoordinate.Implicit
  fullName.vb: Vim.Math3d.PolarCoordinate.Widening
  nameWithType: PolarCoordinate.Implicit
  nameWithType.vb: PolarCoordinate.Widening
- uid: Vim.Math3d.PolarCoordinate.op_Inequality(Vim.Math3d.PolarCoordinate,Vim.Math3d.PolarCoordinate)
  name: Inequality(PolarCoordinate, PolarCoordinate)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_op_Inequality_Vim_Math3d_PolarCoordinate_Vim_Math3d_PolarCoordinate_
  commentId: M:Vim.Math3d.PolarCoordinate.op_Inequality(Vim.Math3d.PolarCoordinate,Vim.Math3d.PolarCoordinate)
  fullName: Vim.Math3d.PolarCoordinate.Inequality(Vim.Math3d.PolarCoordinate, Vim.Math3d.PolarCoordinate)
  nameWithType: PolarCoordinate.Inequality(PolarCoordinate, PolarCoordinate)
- uid: Vim.Math3d.PolarCoordinate.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_op_Inequality_
  commentId: Overload:Vim.Math3d.PolarCoordinate.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.Inequality
  nameWithType: PolarCoordinate.Inequality
- uid: Vim.Math3d.PolarCoordinate.Radius
  name: Radius
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Radius
  commentId: F:Vim.Math3d.PolarCoordinate.Radius
  fullName: Vim.Math3d.PolarCoordinate.Radius
  nameWithType: PolarCoordinate.Radius
- uid: Vim.Math3d.PolarCoordinate.SetAzimuth(System.Double)
  name: SetAzimuth(Double)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_SetAzimuth_System_Double_
  commentId: M:Vim.Math3d.PolarCoordinate.SetAzimuth(System.Double)
  fullName: Vim.Math3d.PolarCoordinate.SetAzimuth(System.Double)
  nameWithType: PolarCoordinate.SetAzimuth(Double)
- uid: Vim.Math3d.PolarCoordinate.SetAzimuth*
  name: SetAzimuth
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_SetAzimuth_
  commentId: Overload:Vim.Math3d.PolarCoordinate.SetAzimuth
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.SetAzimuth
  nameWithType: PolarCoordinate.SetAzimuth
- uid: Vim.Math3d.PolarCoordinate.SetRadius(System.Double)
  name: SetRadius(Double)
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_SetRadius_System_Double_
  commentId: M:Vim.Math3d.PolarCoordinate.SetRadius(System.Double)
  fullName: Vim.Math3d.PolarCoordinate.SetRadius(System.Double)
  nameWithType: PolarCoordinate.SetRadius(Double)
- uid: Vim.Math3d.PolarCoordinate.SetRadius*
  name: SetRadius
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_SetRadius_
  commentId: Overload:Vim.Math3d.PolarCoordinate.SetRadius
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.SetRadius
  nameWithType: PolarCoordinate.SetRadius
- uid: Vim.Math3d.PolarCoordinate.ToString
  name: ToString()
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_ToString
  commentId: M:Vim.Math3d.PolarCoordinate.ToString
  fullName: Vim.Math3d.PolarCoordinate.ToString()
  nameWithType: PolarCoordinate.ToString()
- uid: Vim.Math3d.PolarCoordinate.ToString*
  name: ToString
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_ToString_
  commentId: Overload:Vim.Math3d.PolarCoordinate.ToString
  isSpec: "True"
  fullName: Vim.Math3d.PolarCoordinate.ToString
  nameWithType: PolarCoordinate.ToString
- uid: Vim.Math3d.PolarCoordinate.Zero
  name: Zero
  href: api/Vim.Math3d.PolarCoordinate.html#Vim_Math3d_PolarCoordinate_Zero
  commentId: F:Vim.Math3d.PolarCoordinate.Zero
  fullName: Vim.Math3d.PolarCoordinate.Zero
  nameWithType: PolarCoordinate.Zero
- uid: Vim.Math3d.Quad
  name: Quad
  href: api/Vim.Math3d.Quad.html
  commentId: T:Vim.Math3d.Quad
  fullName: Vim.Math3d.Quad
  nameWithType: Quad
- uid: Vim.Math3d.Quad.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Quad((Vector3 a, Vector3 b, Vector3 c, Vector3 d))
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad__ctor_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Quad.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Quad((a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3))
  fullName: Vim.Math3d.Quad.Quad(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Quad.Quad(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Quad.Quad((Vector3 a, Vector3 b, Vector3 c, Vector3 d))
  nameWithType.vb: Quad.Quad((a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3))
- uid: Vim.Math3d.Quad.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Quad(Vector3, Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad__ctor_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quad.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quad.Quad(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Quad.Quad(Vector3, Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Quad.#ctor*
  name: Quad
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad__ctor_
  commentId: Overload:Vim.Math3d.Quad.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Quad
  nameWithType: Quad.Quad
- uid: Vim.Math3d.Quad.A
  name: A
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_A
  commentId: F:Vim.Math3d.Quad.A
  fullName: Vim.Math3d.Quad.A
  nameWithType: Quad.A
- uid: Vim.Math3d.Quad.AlmostEquals(Vim.Math3d.Quad,System.Single)
  name: AlmostEquals(Quad, Single)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_AlmostEquals_Vim_Math3d_Quad_System_Single_
  commentId: M:Vim.Math3d.Quad.AlmostEquals(Vim.Math3d.Quad,System.Single)
  fullName: Vim.Math3d.Quad.AlmostEquals(Vim.Math3d.Quad, System.Single)
  nameWithType: Quad.AlmostEquals(Quad, Single)
- uid: Vim.Math3d.Quad.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_AlmostEquals_
  commentId: Overload:Vim.Math3d.Quad.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Quad.AlmostEquals
  nameWithType: Quad.AlmostEquals
- uid: Vim.Math3d.Quad.B
  name: B
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_B
  commentId: F:Vim.Math3d.Quad.B
  fullName: Vim.Math3d.Quad.B
  nameWithType: Quad.B
- uid: Vim.Math3d.Quad.C
  name: C
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_C
  commentId: F:Vim.Math3d.Quad.C
  fullName: Vim.Math3d.Quad.C
  nameWithType: Quad.C
- uid: Vim.Math3d.Quad.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Create((Vector3 a, Vector3 b, Vector3 c, Vector3 d))
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Create_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Quad.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Create((a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3))
  fullName: Vim.Math3d.Quad.Create(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Quad.Create(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Quad.Create((Vector3 a, Vector3 b, Vector3 c, Vector3 d))
  nameWithType.vb: Quad.Create((a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3))
- uid: Vim.Math3d.Quad.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Create(Vector3, Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Create_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quad.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quad.Create(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Quad.Create(Vector3, Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Quad.Create*
  name: Create
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Create_
  commentId: Overload:Vim.Math3d.Quad.Create
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Create
  nameWithType: Quad.Create
- uid: Vim.Math3d.Quad.D
  name: D
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_D
  commentId: F:Vim.Math3d.Quad.D
  fullName: Vim.Math3d.Quad.D
  nameWithType: Quad.D
- uid: Vim.Math3d.Quad.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name: Deconstruct(out Vector3, out Vector3, out Vector3, out Vector3)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Deconstruct_Vim_Math3d_Vector3__Vim_Math3d_Vector3__Vim_Math3d_Vector3__Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Quad.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3)
  fullName: Vim.Math3d.Quad.Deconstruct(out Vim.Math3d.Vector3, out Vim.Math3d.Vector3, out Vim.Math3d.Vector3, out Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Quad.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3)
  nameWithType: Quad.Deconstruct(out Vector3, out Vector3, out Vector3, out Vector3)
  nameWithType.vb: Quad.Deconstruct(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: Vim.Math3d.Quad.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Deconstruct_
  commentId: Overload:Vim.Math3d.Quad.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Deconstruct
  nameWithType: Quad.Deconstruct
- uid: Vim.Math3d.Quad.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Equals_System_Object_
  commentId: M:Vim.Math3d.Quad.Equals(System.Object)
  fullName: Vim.Math3d.Quad.Equals(System.Object)
  nameWithType: Quad.Equals(Object)
- uid: Vim.Math3d.Quad.Equals(Vim.Math3d.Quad)
  name: Equals(Quad)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Equals_Vim_Math3d_Quad_
  commentId: M:Vim.Math3d.Quad.Equals(Vim.Math3d.Quad)
  fullName: Vim.Math3d.Quad.Equals(Vim.Math3d.Quad)
  nameWithType: Quad.Equals(Quad)
- uid: Vim.Math3d.Quad.Equals*
  name: Equals
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Equals_
  commentId: Overload:Vim.Math3d.Quad.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Equals
  nameWithType: Quad.Equals
- uid: Vim.Math3d.Quad.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_GetHashCode
  commentId: M:Vim.Math3d.Quad.GetHashCode
  fullName: Vim.Math3d.Quad.GetHashCode()
  nameWithType: Quad.GetHashCode()
- uid: Vim.Math3d.Quad.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_GetHashCode_
  commentId: Overload:Vim.Math3d.Quad.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Quad.GetHashCode
  nameWithType: Quad.GetHashCode
- uid: Vim.Math3d.Quad.GetPoint(System.Int32)
  name: GetPoint(Int32)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_GetPoint_System_Int32_
  commentId: M:Vim.Math3d.Quad.GetPoint(System.Int32)
  fullName: Vim.Math3d.Quad.GetPoint(System.Int32)
  nameWithType: Quad.GetPoint(Int32)
- uid: Vim.Math3d.Quad.GetPoint*
  name: GetPoint
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_GetPoint_
  commentId: Overload:Vim.Math3d.Quad.GetPoint
  isSpec: "True"
  fullName: Vim.Math3d.Quad.GetPoint
  nameWithType: Quad.GetPoint
- uid: Vim.Math3d.Quad.Map(System.Func{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Map(Func<Vector3, Vector3>)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Map_System_Func_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Quad.Map(System.Func{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Map(Func(Of Vector3, Vector3))
  fullName: Vim.Math3d.Quad.Map(System.Func<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Quad.Map(System.Func(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Quad.Map(Func<Vector3, Vector3>)
  nameWithType.vb: Quad.Map(Func(Of Vector3, Vector3))
- uid: Vim.Math3d.Quad.Map*
  name: Map
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Map_
  commentId: Overload:Vim.Math3d.Quad.Map
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Map
  nameWithType: Quad.Map
- uid: Vim.Math3d.Quad.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_MaxValue
  commentId: F:Vim.Math3d.Quad.MaxValue
  fullName: Vim.Math3d.Quad.MaxValue
  nameWithType: Quad.MaxValue
- uid: Vim.Math3d.Quad.MinValue
  name: MinValue
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_MinValue
  commentId: F:Vim.Math3d.Quad.MinValue
  fullName: Vim.Math3d.Quad.MinValue
  nameWithType: Quad.MinValue
- uid: Vim.Math3d.Quad.NumPoints
  name: NumPoints
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_NumPoints
  commentId: P:Vim.Math3d.Quad.NumPoints
  fullName: Vim.Math3d.Quad.NumPoints
  nameWithType: Quad.NumPoints
- uid: Vim.Math3d.Quad.NumPoints*
  name: NumPoints
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_NumPoints_
  commentId: Overload:Vim.Math3d.Quad.NumPoints
  isSpec: "True"
  fullName: Vim.Math3d.Quad.NumPoints
  nameWithType: Quad.NumPoints
- uid: Vim.Math3d.Quad.op_Equality(Vim.Math3d.Quad,Vim.Math3d.Quad)
  name: Equality(Quad, Quad)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_op_Equality_Vim_Math3d_Quad_Vim_Math3d_Quad_
  commentId: M:Vim.Math3d.Quad.op_Equality(Vim.Math3d.Quad,Vim.Math3d.Quad)
  fullName: Vim.Math3d.Quad.Equality(Vim.Math3d.Quad, Vim.Math3d.Quad)
  nameWithType: Quad.Equality(Quad, Quad)
- uid: Vim.Math3d.Quad.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_op_Equality_
  commentId: Overload:Vim.Math3d.Quad.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Equality
  nameWithType: Quad.Equality
- uid: Vim.Math3d.Quad.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Quad
  name: Implicit((Vector3 a, Vector3 b, Vector3 c, Vector3 d) to Quad)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3___Vim_Math3d_Quad
  commentId: M:Vim.Math3d.Quad.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Quad
  name.vb: Widening((a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3) to Quad)
  fullName: Vim.Math3d.Quad.Implicit(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3> to Vim.Math3d.Quad)
  fullName.vb: Vim.Math3d.Quad.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3) to Vim.Math3d.Quad)
  nameWithType: Quad.Implicit((Vector3 a, Vector3 b, Vector3 c, Vector3 d) to Quad)
  nameWithType.vb: Quad.Widening((a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3) to Quad)
- uid: Vim.Math3d.Quad.op_Implicit(Vim.Math3d.Quad)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name: Implicit(Quad to (Vector3 a, Vector3 b, Vector3 c, Vector3 d))
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_op_Implicit_Vim_Math3d_Quad__System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quad.op_Implicit(Vim.Math3d.Quad)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name.vb: Widening(Quad to (a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3))
  fullName: Vim.Math3d.Quad.Implicit(Vim.Math3d.Quad to System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Quad.Widening(Vim.Math3d.Quad to System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Quad.Implicit(Quad to (Vector3 a, Vector3 b, Vector3 c, Vector3 d))
  nameWithType.vb: Quad.Widening(Quad to (a As Vector3, b As Vector3, c As Vector3, d As Vector3)(Of Vector3, Vector3, Vector3, Vector3))
- uid: Vim.Math3d.Quad.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_op_Implicit_
  commentId: Overload:Vim.Math3d.Quad.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Quad.Implicit
  fullName.vb: Vim.Math3d.Quad.Widening
  nameWithType: Quad.Implicit
  nameWithType.vb: Quad.Widening
- uid: Vim.Math3d.Quad.op_Inequality(Vim.Math3d.Quad,Vim.Math3d.Quad)
  name: Inequality(Quad, Quad)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_op_Inequality_Vim_Math3d_Quad_Vim_Math3d_Quad_
  commentId: M:Vim.Math3d.Quad.op_Inequality(Vim.Math3d.Quad,Vim.Math3d.Quad)
  fullName: Vim.Math3d.Quad.Inequality(Vim.Math3d.Quad, Vim.Math3d.Quad)
  nameWithType: Quad.Inequality(Quad, Quad)
- uid: Vim.Math3d.Quad.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_op_Inequality_
  commentId: Overload:Vim.Math3d.Quad.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Inequality
  nameWithType: Quad.Inequality
- uid: Vim.Math3d.Quad.SetA(Vim.Math3d.Vector3)
  name: SetA(Vector3)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetA_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quad.SetA(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quad.SetA(Vim.Math3d.Vector3)
  nameWithType: Quad.SetA(Vector3)
- uid: Vim.Math3d.Quad.SetA*
  name: SetA
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetA_
  commentId: Overload:Vim.Math3d.Quad.SetA
  isSpec: "True"
  fullName: Vim.Math3d.Quad.SetA
  nameWithType: Quad.SetA
- uid: Vim.Math3d.Quad.SetB(Vim.Math3d.Vector3)
  name: SetB(Vector3)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetB_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quad.SetB(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quad.SetB(Vim.Math3d.Vector3)
  nameWithType: Quad.SetB(Vector3)
- uid: Vim.Math3d.Quad.SetB*
  name: SetB
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetB_
  commentId: Overload:Vim.Math3d.Quad.SetB
  isSpec: "True"
  fullName: Vim.Math3d.Quad.SetB
  nameWithType: Quad.SetB
- uid: Vim.Math3d.Quad.SetC(Vim.Math3d.Vector3)
  name: SetC(Vector3)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetC_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quad.SetC(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quad.SetC(Vim.Math3d.Vector3)
  nameWithType: Quad.SetC(Vector3)
- uid: Vim.Math3d.Quad.SetC*
  name: SetC
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetC_
  commentId: Overload:Vim.Math3d.Quad.SetC
  isSpec: "True"
  fullName: Vim.Math3d.Quad.SetC
  nameWithType: Quad.SetC
- uid: Vim.Math3d.Quad.SetD(Vim.Math3d.Vector3)
  name: SetD(Vector3)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetD_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quad.SetD(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quad.SetD(Vim.Math3d.Vector3)
  nameWithType: Quad.SetD(Vector3)
- uid: Vim.Math3d.Quad.SetD*
  name: SetD
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_SetD_
  commentId: Overload:Vim.Math3d.Quad.SetD
  isSpec: "True"
  fullName: Vim.Math3d.Quad.SetD
  nameWithType: Quad.SetD
- uid: Vim.Math3d.Quad.ToString
  name: ToString()
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_ToString
  commentId: M:Vim.Math3d.Quad.ToString
  fullName: Vim.Math3d.Quad.ToString()
  nameWithType: Quad.ToString()
- uid: Vim.Math3d.Quad.ToString*
  name: ToString
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_ToString_
  commentId: Overload:Vim.Math3d.Quad.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Quad.ToString
  nameWithType: Quad.ToString
- uid: Vim.Math3d.Quad.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Quad.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Quad.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Quad.Transform(Matrix4x4)
- uid: Vim.Math3d.Quad.Transform*
  name: Transform
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Transform_
  commentId: Overload:Vim.Math3d.Quad.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Quad.Transform
  nameWithType: Quad.Transform
- uid: Vim.Math3d.Quad.Zero
  name: Zero
  href: api/Vim.Math3d.Quad.html#Vim_Math3d_Quad_Zero
  commentId: F:Vim.Math3d.Quad.Zero
  fullName: Vim.Math3d.Quad.Zero
  nameWithType: Quad.Zero
- uid: Vim.Math3d.Quad2D
  name: Quad2D
  href: api/Vim.Math3d.Quad2D.html
  commentId: T:Vim.Math3d.Quad2D
  fullName: Vim.Math3d.Quad2D
  nameWithType: Quad2D
- uid: Vim.Math3d.Quad2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: Quad2D((Vector2 a, Vector2 b, Vector2 c, Vector2 d))
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D__ctor_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Quad2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: Quad2D((a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2))
  fullName: Vim.Math3d.Quad2D.Quad2D(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Quad2D.Quad2D(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Quad2D.Quad2D((Vector2 a, Vector2 b, Vector2 c, Vector2 d))
  nameWithType.vb: Quad2D.Quad2D((a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2))
- uid: Vim.Math3d.Quad2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Quad2D(Vector2, Vector2, Vector2, Vector2)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D__ctor_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Quad2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Quad2D.Quad2D(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Quad2D.Quad2D(Vector2, Vector2, Vector2, Vector2)
- uid: Vim.Math3d.Quad2D.#ctor*
  name: Quad2D
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D__ctor_
  commentId: Overload:Vim.Math3d.Quad2D.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.Quad2D
  nameWithType: Quad2D.Quad2D
- uid: Vim.Math3d.Quad2D.A
  name: A
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_A
  commentId: F:Vim.Math3d.Quad2D.A
  fullName: Vim.Math3d.Quad2D.A
  nameWithType: Quad2D.A
- uid: Vim.Math3d.Quad2D.AlmostEquals(Vim.Math3d.Quad2D,System.Single)
  name: AlmostEquals(Quad2D, Single)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_AlmostEquals_Vim_Math3d_Quad2D_System_Single_
  commentId: M:Vim.Math3d.Quad2D.AlmostEquals(Vim.Math3d.Quad2D,System.Single)
  fullName: Vim.Math3d.Quad2D.AlmostEquals(Vim.Math3d.Quad2D, System.Single)
  nameWithType: Quad2D.AlmostEquals(Quad2D, Single)
- uid: Vim.Math3d.Quad2D.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_AlmostEquals_
  commentId: Overload:Vim.Math3d.Quad2D.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.AlmostEquals
  nameWithType: Quad2D.AlmostEquals
- uid: Vim.Math3d.Quad2D.B
  name: B
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_B
  commentId: F:Vim.Math3d.Quad2D.B
  fullName: Vim.Math3d.Quad2D.B
  nameWithType: Quad2D.B
- uid: Vim.Math3d.Quad2D.C
  name: C
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_C
  commentId: F:Vim.Math3d.Quad2D.C
  fullName: Vim.Math3d.Quad2D.C
  nameWithType: Quad2D.C
- uid: Vim.Math3d.Quad2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: Create((Vector2 a, Vector2 b, Vector2 c, Vector2 d))
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Create_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Quad2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: Create((a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2))
  fullName: Vim.Math3d.Quad2D.Create(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Quad2D.Create(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Quad2D.Create((Vector2 a, Vector2 b, Vector2 c, Vector2 d))
  nameWithType.vb: Quad2D.Create((a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2))
- uid: Vim.Math3d.Quad2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Create(Vector2, Vector2, Vector2, Vector2)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Create_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Quad2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Quad2D.Create(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Quad2D.Create(Vector2, Vector2, Vector2, Vector2)
- uid: Vim.Math3d.Quad2D.Create*
  name: Create
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Create_
  commentId: Overload:Vim.Math3d.Quad2D.Create
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.Create
  nameWithType: Quad2D.Create
- uid: Vim.Math3d.Quad2D.D
  name: D
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_D
  commentId: F:Vim.Math3d.Quad2D.D
  fullName: Vim.Math3d.Quad2D.D
  nameWithType: Quad2D.D
- uid: Vim.Math3d.Quad2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@,Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name: Deconstruct(out Vector2, out Vector2, out Vector2, out Vector2)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Deconstruct_Vim_Math3d_Vector2__Vim_Math3d_Vector2__Vim_Math3d_Vector2__Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Quad2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@,Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name.vb: Deconstruct(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2)
  fullName: Vim.Math3d.Quad2D.Deconstruct(out Vim.Math3d.Vector2, out Vim.Math3d.Vector2, out Vim.Math3d.Vector2, out Vim.Math3d.Vector2)
  fullName.vb: Vim.Math3d.Quad2D.Deconstruct(ByRef Vim.Math3d.Vector2, ByRef Vim.Math3d.Vector2, ByRef Vim.Math3d.Vector2, ByRef Vim.Math3d.Vector2)
  nameWithType: Quad2D.Deconstruct(out Vector2, out Vector2, out Vector2, out Vector2)
  nameWithType.vb: Quad2D.Deconstruct(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: Vim.Math3d.Quad2D.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Deconstruct_
  commentId: Overload:Vim.Math3d.Quad2D.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.Deconstruct
  nameWithType: Quad2D.Deconstruct
- uid: Vim.Math3d.Quad2D.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Equals_System_Object_
  commentId: M:Vim.Math3d.Quad2D.Equals(System.Object)
  fullName: Vim.Math3d.Quad2D.Equals(System.Object)
  nameWithType: Quad2D.Equals(Object)
- uid: Vim.Math3d.Quad2D.Equals(Vim.Math3d.Quad2D)
  name: Equals(Quad2D)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Equals_Vim_Math3d_Quad2D_
  commentId: M:Vim.Math3d.Quad2D.Equals(Vim.Math3d.Quad2D)
  fullName: Vim.Math3d.Quad2D.Equals(Vim.Math3d.Quad2D)
  nameWithType: Quad2D.Equals(Quad2D)
- uid: Vim.Math3d.Quad2D.Equals*
  name: Equals
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Equals_
  commentId: Overload:Vim.Math3d.Quad2D.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.Equals
  nameWithType: Quad2D.Equals
- uid: Vim.Math3d.Quad2D.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_GetHashCode
  commentId: M:Vim.Math3d.Quad2D.GetHashCode
  fullName: Vim.Math3d.Quad2D.GetHashCode()
  nameWithType: Quad2D.GetHashCode()
- uid: Vim.Math3d.Quad2D.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_GetHashCode_
  commentId: Overload:Vim.Math3d.Quad2D.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.GetHashCode
  nameWithType: Quad2D.GetHashCode
- uid: Vim.Math3d.Quad2D.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_MaxValue
  commentId: F:Vim.Math3d.Quad2D.MaxValue
  fullName: Vim.Math3d.Quad2D.MaxValue
  nameWithType: Quad2D.MaxValue
- uid: Vim.Math3d.Quad2D.MinValue
  name: MinValue
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_MinValue
  commentId: F:Vim.Math3d.Quad2D.MinValue
  fullName: Vim.Math3d.Quad2D.MinValue
  nameWithType: Quad2D.MinValue
- uid: Vim.Math3d.Quad2D.op_Equality(Vim.Math3d.Quad2D,Vim.Math3d.Quad2D)
  name: Equality(Quad2D, Quad2D)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_op_Equality_Vim_Math3d_Quad2D_Vim_Math3d_Quad2D_
  commentId: M:Vim.Math3d.Quad2D.op_Equality(Vim.Math3d.Quad2D,Vim.Math3d.Quad2D)
  fullName: Vim.Math3d.Quad2D.Equality(Vim.Math3d.Quad2D, Vim.Math3d.Quad2D)
  nameWithType: Quad2D.Equality(Quad2D, Quad2D)
- uid: Vim.Math3d.Quad2D.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_op_Equality_
  commentId: Overload:Vim.Math3d.Quad2D.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.Equality
  nameWithType: Quad2D.Equality
- uid: Vim.Math3d.Quad2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.Quad2D
  name: Implicit((Vector2 a, Vector2 b, Vector2 c, Vector2 d) to Quad2D)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_op_Implicit_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2___Vim_Math3d_Quad2D
  commentId: M:Vim.Math3d.Quad2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.Quad2D
  name.vb: Widening((a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2) to Quad2D)
  fullName: Vim.Math3d.Quad2D.Implicit(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2> to Vim.Math3d.Quad2D)
  fullName.vb: Vim.Math3d.Quad2D.Widening(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2) to Vim.Math3d.Quad2D)
  nameWithType: Quad2D.Implicit((Vector2 a, Vector2 b, Vector2 c, Vector2 d) to Quad2D)
  nameWithType.vb: Quad2D.Widening((a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2) to Quad2D)
- uid: Vim.Math3d.Quad2D.op_Implicit(Vim.Math3d.Quad2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name: Implicit(Quad2D to (Vector2 a, Vector2 b, Vector2 c, Vector2 d))
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_op_Implicit_Vim_Math3d_Quad2D__System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Quad2D.op_Implicit(Vim.Math3d.Quad2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name.vb: Widening(Quad2D to (a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2))
  fullName: Vim.Math3d.Quad2D.Implicit(Vim.Math3d.Quad2D to System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Quad2D.Widening(Vim.Math3d.Quad2D to System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Quad2D.Implicit(Quad2D to (Vector2 a, Vector2 b, Vector2 c, Vector2 d))
  nameWithType.vb: Quad2D.Widening(Quad2D to (a As Vector2, b As Vector2, c As Vector2, d As Vector2)(Of Vector2, Vector2, Vector2, Vector2))
- uid: Vim.Math3d.Quad2D.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_op_Implicit_
  commentId: Overload:Vim.Math3d.Quad2D.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Quad2D.Implicit
  fullName.vb: Vim.Math3d.Quad2D.Widening
  nameWithType: Quad2D.Implicit
  nameWithType.vb: Quad2D.Widening
- uid: Vim.Math3d.Quad2D.op_Inequality(Vim.Math3d.Quad2D,Vim.Math3d.Quad2D)
  name: Inequality(Quad2D, Quad2D)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_op_Inequality_Vim_Math3d_Quad2D_Vim_Math3d_Quad2D_
  commentId: M:Vim.Math3d.Quad2D.op_Inequality(Vim.Math3d.Quad2D,Vim.Math3d.Quad2D)
  fullName: Vim.Math3d.Quad2D.Inequality(Vim.Math3d.Quad2D, Vim.Math3d.Quad2D)
  nameWithType: Quad2D.Inequality(Quad2D, Quad2D)
- uid: Vim.Math3d.Quad2D.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_op_Inequality_
  commentId: Overload:Vim.Math3d.Quad2D.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.Inequality
  nameWithType: Quad2D.Inequality
- uid: Vim.Math3d.Quad2D.SetA(Vim.Math3d.Vector2)
  name: SetA(Vector2)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetA_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Quad2D.SetA(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Quad2D.SetA(Vim.Math3d.Vector2)
  nameWithType: Quad2D.SetA(Vector2)
- uid: Vim.Math3d.Quad2D.SetA*
  name: SetA
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetA_
  commentId: Overload:Vim.Math3d.Quad2D.SetA
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.SetA
  nameWithType: Quad2D.SetA
- uid: Vim.Math3d.Quad2D.SetB(Vim.Math3d.Vector2)
  name: SetB(Vector2)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetB_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Quad2D.SetB(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Quad2D.SetB(Vim.Math3d.Vector2)
  nameWithType: Quad2D.SetB(Vector2)
- uid: Vim.Math3d.Quad2D.SetB*
  name: SetB
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetB_
  commentId: Overload:Vim.Math3d.Quad2D.SetB
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.SetB
  nameWithType: Quad2D.SetB
- uid: Vim.Math3d.Quad2D.SetC(Vim.Math3d.Vector2)
  name: SetC(Vector2)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetC_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Quad2D.SetC(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Quad2D.SetC(Vim.Math3d.Vector2)
  nameWithType: Quad2D.SetC(Vector2)
- uid: Vim.Math3d.Quad2D.SetC*
  name: SetC
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetC_
  commentId: Overload:Vim.Math3d.Quad2D.SetC
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.SetC
  nameWithType: Quad2D.SetC
- uid: Vim.Math3d.Quad2D.SetD(Vim.Math3d.Vector2)
  name: SetD(Vector2)
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetD_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Quad2D.SetD(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Quad2D.SetD(Vim.Math3d.Vector2)
  nameWithType: Quad2D.SetD(Vector2)
- uid: Vim.Math3d.Quad2D.SetD*
  name: SetD
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_SetD_
  commentId: Overload:Vim.Math3d.Quad2D.SetD
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.SetD
  nameWithType: Quad2D.SetD
- uid: Vim.Math3d.Quad2D.ToString
  name: ToString()
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_ToString
  commentId: M:Vim.Math3d.Quad2D.ToString
  fullName: Vim.Math3d.Quad2D.ToString()
  nameWithType: Quad2D.ToString()
- uid: Vim.Math3d.Quad2D.ToString*
  name: ToString
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_ToString_
  commentId: Overload:Vim.Math3d.Quad2D.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Quad2D.ToString
  nameWithType: Quad2D.ToString
- uid: Vim.Math3d.Quad2D.Zero
  name: Zero
  href: api/Vim.Math3d.Quad2D.html#Vim_Math3d_Quad2D_Zero
  commentId: F:Vim.Math3d.Quad2D.Zero
  fullName: Vim.Math3d.Quad2D.Zero
  nameWithType: Quad2D.Zero
- uid: Vim.Math3d.Quaternion
  name: Quaternion
  href: api/Vim.Math3d.Quaternion.html
  commentId: T:Vim.Math3d.Quaternion
  fullName: Vim.Math3d.Quaternion
  nameWithType: Quaternion
- uid: Vim.Math3d.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  name: Quaternion(Single, Single, Single, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion__ctor_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Quaternion.Quaternion(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Quaternion.Quaternion(Single, Single, Single, Single)
- uid: Vim.Math3d.Quaternion.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name: Quaternion((Single x, Single y, Single z, Single w))
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion__ctor_System_ValueTuple_System_Single_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.Quaternion.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name.vb: Quaternion((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.Quaternion.Quaternion(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Quaternion.Quaternion(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: Quaternion.Quaternion((Single x, Single y, Single z, Single w))
  nameWithType.vb: Quaternion.Quaternion((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.Quaternion.#ctor(Vim.Math3d.Vector3,System.Single)
  name: Quaternion(Vector3, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion__ctor_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Quaternion.#ctor(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Quaternion.Quaternion(Vim.Math3d.Vector3, System.Single)
  nameWithType: Quaternion.Quaternion(Vector3, Single)
- uid: Vim.Math3d.Quaternion.#ctor*
  name: Quaternion
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion__ctor_
  commentId: Overload:Vim.Math3d.Quaternion.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Quaternion
  nameWithType: Quaternion.Quaternion
- uid: Vim.Math3d.Quaternion.AlmostEquals(Vim.Math3d.Quaternion,System.Single)
  name: AlmostEquals(Quaternion, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_AlmostEquals_Vim_Math3d_Quaternion_System_Single_
  commentId: M:Vim.Math3d.Quaternion.AlmostEquals(Vim.Math3d.Quaternion,System.Single)
  fullName: Vim.Math3d.Quaternion.AlmostEquals(Vim.Math3d.Quaternion, System.Single)
  nameWithType: Quaternion.AlmostEquals(Quaternion, Single)
- uid: Vim.Math3d.Quaternion.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_AlmostEquals_
  commentId: Overload:Vim.Math3d.Quaternion.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.AlmostEquals
  nameWithType: Quaternion.AlmostEquals
- uid: Vim.Math3d.Quaternion.Concatenate(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Concatenate(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Concatenate_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.Concatenate(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Concatenate(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Concatenate(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.Concatenate*
  name: Concatenate
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Concatenate_
  commentId: Overload:Vim.Math3d.Quaternion.Concatenate
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Concatenate
  nameWithType: Quaternion.Concatenate
- uid: Vim.Math3d.Quaternion.Conjugate
  name: Conjugate()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Conjugate
  commentId: M:Vim.Math3d.Quaternion.Conjugate
  fullName: Vim.Math3d.Quaternion.Conjugate()
  nameWithType: Quaternion.Conjugate()
- uid: Vim.Math3d.Quaternion.Conjugate*
  name: Conjugate
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Conjugate_
  commentId: Overload:Vim.Math3d.Quaternion.Conjugate
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Conjugate
  nameWithType: Quaternion.Conjugate
- uid: Vim.Math3d.Quaternion.Create(System.Single,System.Single,System.Single,System.Single)
  name: Create(Single, Single, Single, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Create_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Quaternion.Create(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Quaternion.Create(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Quaternion.Create(Single, Single, Single, Single)
- uid: Vim.Math3d.Quaternion.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name: Create((Single x, Single y, Single z, Single w))
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Create_System_ValueTuple_System_Single_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.Quaternion.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name.vb: Create((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.Quaternion.Create(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Quaternion.Create(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: Quaternion.Create((Single x, Single y, Single z, Single w))
  nameWithType.vb: Quaternion.Create((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.Quaternion.Create*
  name: Create
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Create_
  commentId: Overload:Vim.Math3d.Quaternion.Create
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Create
  nameWithType: Quaternion.Create
- uid: Vim.Math3d.Quaternion.CreateFromAxisAngle(Vim.Math3d.Vector3,System.Single)
  name: CreateFromAxisAngle(Vector3, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromAxisAngle_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Quaternion.CreateFromAxisAngle(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Quaternion.CreateFromAxisAngle(Vim.Math3d.Vector3, System.Single)
  nameWithType: Quaternion.CreateFromAxisAngle(Vector3, Single)
- uid: Vim.Math3d.Quaternion.CreateFromAxisAngle*
  name: CreateFromAxisAngle
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromAxisAngle_
  commentId: Overload:Vim.Math3d.Quaternion.CreateFromAxisAngle
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateFromAxisAngle
  nameWithType: Quaternion.CreateFromAxisAngle
- uid: Vim.Math3d.Quaternion.CreateFromEulerAngles(Vim.Math3d.Vector3)
  name: CreateFromEulerAngles(Vector3)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromEulerAngles_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quaternion.CreateFromEulerAngles(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quaternion.CreateFromEulerAngles(Vim.Math3d.Vector3)
  nameWithType: Quaternion.CreateFromEulerAngles(Vector3)
- uid: Vim.Math3d.Quaternion.CreateFromEulerAngles*
  name: CreateFromEulerAngles
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromEulerAngles_
  commentId: Overload:Vim.Math3d.Quaternion.CreateFromEulerAngles
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateFromEulerAngles
  nameWithType: Quaternion.CreateFromEulerAngles
- uid: Vim.Math3d.Quaternion.CreateFromRotationMatrix(Vim.Math3d.Matrix4x4)
  name: CreateFromRotationMatrix(Matrix4x4)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromRotationMatrix_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Quaternion.CreateFromRotationMatrix(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Quaternion.CreateFromRotationMatrix(Vim.Math3d.Matrix4x4)
  nameWithType: Quaternion.CreateFromRotationMatrix(Matrix4x4)
- uid: Vim.Math3d.Quaternion.CreateFromRotationMatrix*
  name: CreateFromRotationMatrix
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromRotationMatrix_
  commentId: Overload:Vim.Math3d.Quaternion.CreateFromRotationMatrix
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateFromRotationMatrix
  nameWithType: Quaternion.CreateFromRotationMatrix
- uid: Vim.Math3d.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  name: CreateFromYawPitchRoll(Single, Single, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromYawPitchRoll_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Quaternion.CreateFromYawPitchRoll(System.Single, System.Single, System.Single)
  nameWithType: Quaternion.CreateFromYawPitchRoll(Single, Single, Single)
- uid: Vim.Math3d.Quaternion.CreateFromYawPitchRoll*
  name: CreateFromYawPitchRoll
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateFromYawPitchRoll_
  commentId: Overload:Vim.Math3d.Quaternion.CreateFromYawPitchRoll
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateFromYawPitchRoll
  nameWithType: Quaternion.CreateFromYawPitchRoll
- uid: Vim.Math3d.Quaternion.CreateRotationFromAToB(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: CreateRotationFromAToB(Vector3, Vector3)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateRotationFromAToB_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quaternion.CreateRotationFromAToB(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quaternion.CreateRotationFromAToB(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Quaternion.CreateRotationFromAToB(Vector3, Vector3)
- uid: Vim.Math3d.Quaternion.CreateRotationFromAToB*
  name: CreateRotationFromAToB
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateRotationFromAToB_
  commentId: Overload:Vim.Math3d.Quaternion.CreateRotationFromAToB
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateRotationFromAToB
  nameWithType: Quaternion.CreateRotationFromAToB
- uid: Vim.Math3d.Quaternion.CreateXRotation(System.Single)
  name: CreateXRotation(Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateXRotation_System_Single_
  commentId: M:Vim.Math3d.Quaternion.CreateXRotation(System.Single)
  fullName: Vim.Math3d.Quaternion.CreateXRotation(System.Single)
  nameWithType: Quaternion.CreateXRotation(Single)
- uid: Vim.Math3d.Quaternion.CreateXRotation*
  name: CreateXRotation
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateXRotation_
  commentId: Overload:Vim.Math3d.Quaternion.CreateXRotation
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateXRotation
  nameWithType: Quaternion.CreateXRotation
- uid: Vim.Math3d.Quaternion.CreateYRotation(System.Single)
  name: CreateYRotation(Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateYRotation_System_Single_
  commentId: M:Vim.Math3d.Quaternion.CreateYRotation(System.Single)
  fullName: Vim.Math3d.Quaternion.CreateYRotation(System.Single)
  nameWithType: Quaternion.CreateYRotation(Single)
- uid: Vim.Math3d.Quaternion.CreateYRotation*
  name: CreateYRotation
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateYRotation_
  commentId: Overload:Vim.Math3d.Quaternion.CreateYRotation
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateYRotation
  nameWithType: Quaternion.CreateYRotation
- uid: Vim.Math3d.Quaternion.CreateZRotation(System.Single)
  name: CreateZRotation(Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateZRotation_System_Single_
  commentId: M:Vim.Math3d.Quaternion.CreateZRotation(System.Single)
  fullName: Vim.Math3d.Quaternion.CreateZRotation(System.Single)
  nameWithType: Quaternion.CreateZRotation(Single)
- uid: Vim.Math3d.Quaternion.CreateZRotation*
  name: CreateZRotation
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_CreateZRotation_
  commentId: Overload:Vim.Math3d.Quaternion.CreateZRotation
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.CreateZRotation
  nameWithType: Quaternion.CreateZRotation
- uid: Vim.Math3d.Quaternion.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  name: Deconstruct(out Single, out Single, out Single, out Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Deconstruct_System_Single__System_Single__System_Single__System_Single__
  commentId: M:Vim.Math3d.Quaternion.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  name.vb: Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  fullName: Vim.Math3d.Quaternion.Deconstruct(out System.Single, out System.Single, out System.Single, out System.Single)
  fullName.vb: Vim.Math3d.Quaternion.Deconstruct(ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  nameWithType: Quaternion.Deconstruct(out Single, out Single, out Single, out Single)
  nameWithType.vb: Quaternion.Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
- uid: Vim.Math3d.Quaternion.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Deconstruct_
  commentId: Overload:Vim.Math3d.Quaternion.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Deconstruct
  nameWithType: Quaternion.Deconstruct
- uid: Vim.Math3d.Quaternion.Dot(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Dot(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Dot_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.Dot(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Dot(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Dot(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.Dot*
  name: Dot
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Dot_
  commentId: Overload:Vim.Math3d.Quaternion.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Dot
  nameWithType: Quaternion.Dot
- uid: Vim.Math3d.Quaternion.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Equals_System_Object_
  commentId: M:Vim.Math3d.Quaternion.Equals(System.Object)
  fullName: Vim.Math3d.Quaternion.Equals(System.Object)
  nameWithType: Quaternion.Equals(Object)
- uid: Vim.Math3d.Quaternion.Equals(Vim.Math3d.Quaternion)
  name: Equals(Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Equals_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.Equals(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Equals(Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
- uid: Vim.Math3d.Quaternion.Equals*
  name: Equals
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Equals_
  commentId: Overload:Vim.Math3d.Quaternion.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Equals
  nameWithType: Quaternion.Equals
- uid: Vim.Math3d.Quaternion.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_GetHashCode
  commentId: M:Vim.Math3d.Quaternion.GetHashCode
  fullName: Vim.Math3d.Quaternion.GetHashCode()
  nameWithType: Quaternion.GetHashCode()
- uid: Vim.Math3d.Quaternion.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_GetHashCode_
  commentId: Overload:Vim.Math3d.Quaternion.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.GetHashCode
  nameWithType: Quaternion.GetHashCode
- uid: Vim.Math3d.Quaternion.Identity
  name: Identity
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Identity
  commentId: P:Vim.Math3d.Quaternion.Identity
  fullName: Vim.Math3d.Quaternion.Identity
  nameWithType: Quaternion.Identity
- uid: Vim.Math3d.Quaternion.Identity*
  name: Identity
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Identity_
  commentId: Overload:Vim.Math3d.Quaternion.Identity
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Identity
  nameWithType: Quaternion.Identity
- uid: Vim.Math3d.Quaternion.Inverse
  name: Inverse()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Inverse
  commentId: M:Vim.Math3d.Quaternion.Inverse
  fullName: Vim.Math3d.Quaternion.Inverse()
  nameWithType: Quaternion.Inverse()
- uid: Vim.Math3d.Quaternion.Inverse*
  name: Inverse
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Inverse_
  commentId: Overload:Vim.Math3d.Quaternion.Inverse
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Inverse
  nameWithType: Quaternion.Inverse
- uid: Vim.Math3d.Quaternion.IsIdentity
  name: IsIdentity
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_IsIdentity
  commentId: P:Vim.Math3d.Quaternion.IsIdentity
  fullName: Vim.Math3d.Quaternion.IsIdentity
  nameWithType: Quaternion.IsIdentity
- uid: Vim.Math3d.Quaternion.IsIdentity*
  name: IsIdentity
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_IsIdentity_
  commentId: Overload:Vim.Math3d.Quaternion.IsIdentity
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.IsIdentity
  nameWithType: Quaternion.IsIdentity
- uid: Vim.Math3d.Quaternion.Length
  name: Length()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Length
  commentId: M:Vim.Math3d.Quaternion.Length
  fullName: Vim.Math3d.Quaternion.Length()
  nameWithType: Quaternion.Length()
- uid: Vim.Math3d.Quaternion.Length*
  name: Length
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Length_
  commentId: Overload:Vim.Math3d.Quaternion.Length
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Length
  nameWithType: Quaternion.Length
- uid: Vim.Math3d.Quaternion.LengthSquared
  name: LengthSquared()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_LengthSquared
  commentId: M:Vim.Math3d.Quaternion.LengthSquared
  fullName: Vim.Math3d.Quaternion.LengthSquared()
  nameWithType: Quaternion.LengthSquared()
- uid: Vim.Math3d.Quaternion.LengthSquared*
  name: LengthSquared
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_LengthSquared_
  commentId: Overload:Vim.Math3d.Quaternion.LengthSquared
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.LengthSquared
  nameWithType: Quaternion.LengthSquared
- uid: Vim.Math3d.Quaternion.Lerp(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  name: Lerp(Quaternion, Quaternion, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Lerp_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single_
  commentId: M:Vim.Math3d.Quaternion.Lerp(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  fullName: Vim.Math3d.Quaternion.Lerp(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single)
  nameWithType: Quaternion.Lerp(Quaternion, Quaternion, Single)
- uid: Vim.Math3d.Quaternion.Lerp*
  name: Lerp
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Lerp_
  commentId: Overload:Vim.Math3d.Quaternion.Lerp
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Lerp
  nameWithType: Quaternion.Lerp
- uid: Vim.Math3d.Quaternion.LookAt(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: LookAt(Vector3, Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_LookAt_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Quaternion.LookAt(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Quaternion.LookAt(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Quaternion.LookAt(Vector3, Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Quaternion.LookAt*
  name: LookAt
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_LookAt_
  commentId: Overload:Vim.Math3d.Quaternion.LookAt
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.LookAt
  nameWithType: Quaternion.LookAt
- uid: Vim.Math3d.Quaternion.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_MaxValue
  commentId: F:Vim.Math3d.Quaternion.MaxValue
  fullName: Vim.Math3d.Quaternion.MaxValue
  nameWithType: Quaternion.MaxValue
- uid: Vim.Math3d.Quaternion.MinValue
  name: MinValue
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_MinValue
  commentId: F:Vim.Math3d.Quaternion.MinValue
  fullName: Vim.Math3d.Quaternion.MinValue
  nameWithType: Quaternion.MinValue
- uid: Vim.Math3d.Quaternion.Normalize
  name: Normalize()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Normalize
  commentId: M:Vim.Math3d.Quaternion.Normalize
  fullName: Vim.Math3d.Quaternion.Normalize()
  nameWithType: Quaternion.Normalize()
- uid: Vim.Math3d.Quaternion.Normalize*
  name: Normalize
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Normalize_
  commentId: Overload:Vim.Math3d.Quaternion.Normalize
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Normalize
  nameWithType: Quaternion.Normalize
- uid: Vim.Math3d.Quaternion.op_Addition(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Addition(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Addition_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.op_Addition(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Addition(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Addition(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Addition_
  commentId: Overload:Vim.Math3d.Quaternion.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Addition
  nameWithType: Quaternion.Addition
- uid: Vim.Math3d.Quaternion.op_Division(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Division(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Division_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.op_Division(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Division(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Division(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.op_Division*
  name: Division
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Division_
  commentId: Overload:Vim.Math3d.Quaternion.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Division
  nameWithType: Quaternion.Division
- uid: Vim.Math3d.Quaternion.op_Equality(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Equality(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Equality_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.op_Equality(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Equality(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Equality(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Equality_
  commentId: Overload:Vim.Math3d.Quaternion.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Equality
  nameWithType: Quaternion.Equality
- uid: Vim.Math3d.Quaternion.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.Quaternion
  name: Implicit((Single x, Single y, Single z, Single w) to Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Implicit_System_ValueTuple_System_Single_System_Single_System_Single_System_Single___Vim_Math3d_Quaternion
  commentId: M:Vim.Math3d.Quaternion.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.Quaternion
  name.vb: Widening((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single) to Quaternion)
  fullName: Vim.Math3d.Quaternion.Implicit(System.ValueTuple<System.Single, System.Single, System.Single, System.Single> to Vim.Math3d.Quaternion)
  fullName.vb: Vim.Math3d.Quaternion.Widening(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single) to Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Implicit((Single x, Single y, Single z, Single w) to Quaternion)
  nameWithType.vb: Quaternion.Widening((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single) to Quaternion)
- uid: Vim.Math3d.Quaternion.op_Implicit(Vim.Math3d.Quaternion)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  name: Implicit(Quaternion to (Single x, Single y, Single z, Single w))
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Implicit_Vim_Math3d_Quaternion__System_ValueTuple_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Quaternion.op_Implicit(Vim.Math3d.Quaternion)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  name.vb: Widening(Quaternion to (x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.Quaternion.Implicit(Vim.Math3d.Quaternion to System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Quaternion.Widening(Vim.Math3d.Quaternion to System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: Quaternion.Implicit(Quaternion to (Single x, Single y, Single z, Single w))
  nameWithType.vb: Quaternion.Widening(Quaternion to (x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.Quaternion.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Implicit_
  commentId: Overload:Vim.Math3d.Quaternion.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Quaternion.Implicit
  fullName.vb: Vim.Math3d.Quaternion.Widening
  nameWithType: Quaternion.Implicit
  nameWithType.vb: Quaternion.Widening
- uid: Vim.Math3d.Quaternion.op_Inequality(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Inequality(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Inequality_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.op_Inequality(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Inequality(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Inequality(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Inequality_
  commentId: Overload:Vim.Math3d.Quaternion.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Inequality
  nameWithType: Quaternion.Inequality
- uid: Vim.Math3d.Quaternion.op_Multiply(Vim.Math3d.Quaternion,System.Single)
  name: Multiply(Quaternion, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Multiply_Vim_Math3d_Quaternion_System_Single_
  commentId: M:Vim.Math3d.Quaternion.op_Multiply(Vim.Math3d.Quaternion,System.Single)
  fullName: Vim.Math3d.Quaternion.Multiply(Vim.Math3d.Quaternion, System.Single)
  nameWithType: Quaternion.Multiply(Quaternion, Single)
- uid: Vim.Math3d.Quaternion.op_Multiply(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Multiply(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Multiply_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.op_Multiply(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Multiply(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Multiply_
  commentId: Overload:Vim.Math3d.Quaternion.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Multiply
  nameWithType: Quaternion.Multiply
- uid: Vim.Math3d.Quaternion.op_Subtraction(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  name: Subtraction(Quaternion, Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Subtraction_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.op_Subtraction(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.Subtraction(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion)
  nameWithType: Quaternion.Subtraction(Quaternion, Quaternion)
- uid: Vim.Math3d.Quaternion.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_Subtraction_
  commentId: Overload:Vim.Math3d.Quaternion.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Subtraction
  nameWithType: Quaternion.Subtraction
- uid: Vim.Math3d.Quaternion.op_UnaryNegation(Vim.Math3d.Quaternion)
  name: UnaryNegation(Quaternion)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_UnaryNegation_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Quaternion.op_UnaryNegation(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Quaternion.UnaryNegation(Vim.Math3d.Quaternion)
  nameWithType: Quaternion.UnaryNegation(Quaternion)
- uid: Vim.Math3d.Quaternion.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Quaternion.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.UnaryNegation
  nameWithType: Quaternion.UnaryNegation
- uid: Vim.Math3d.Quaternion.SetW(System.Single)
  name: SetW(Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetW_System_Single_
  commentId: M:Vim.Math3d.Quaternion.SetW(System.Single)
  fullName: Vim.Math3d.Quaternion.SetW(System.Single)
  nameWithType: Quaternion.SetW(Single)
- uid: Vim.Math3d.Quaternion.SetW*
  name: SetW
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetW_
  commentId: Overload:Vim.Math3d.Quaternion.SetW
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.SetW
  nameWithType: Quaternion.SetW
- uid: Vim.Math3d.Quaternion.SetX(System.Single)
  name: SetX(Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetX_System_Single_
  commentId: M:Vim.Math3d.Quaternion.SetX(System.Single)
  fullName: Vim.Math3d.Quaternion.SetX(System.Single)
  nameWithType: Quaternion.SetX(Single)
- uid: Vim.Math3d.Quaternion.SetX*
  name: SetX
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetX_
  commentId: Overload:Vim.Math3d.Quaternion.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.SetX
  nameWithType: Quaternion.SetX
- uid: Vim.Math3d.Quaternion.SetY(System.Single)
  name: SetY(Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetY_System_Single_
  commentId: M:Vim.Math3d.Quaternion.SetY(System.Single)
  fullName: Vim.Math3d.Quaternion.SetY(System.Single)
  nameWithType: Quaternion.SetY(Single)
- uid: Vim.Math3d.Quaternion.SetY*
  name: SetY
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetY_
  commentId: Overload:Vim.Math3d.Quaternion.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.SetY
  nameWithType: Quaternion.SetY
- uid: Vim.Math3d.Quaternion.SetZ(System.Single)
  name: SetZ(Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetZ_System_Single_
  commentId: M:Vim.Math3d.Quaternion.SetZ(System.Single)
  fullName: Vim.Math3d.Quaternion.SetZ(System.Single)
  nameWithType: Quaternion.SetZ(Single)
- uid: Vim.Math3d.Quaternion.SetZ*
  name: SetZ
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_SetZ_
  commentId: Overload:Vim.Math3d.Quaternion.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.SetZ
  nameWithType: Quaternion.SetZ
- uid: Vim.Math3d.Quaternion.Slerp(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  name: Slerp(Quaternion, Quaternion, Single)
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Slerp_Vim_Math3d_Quaternion_Vim_Math3d_Quaternion_System_Single_
  commentId: M:Vim.Math3d.Quaternion.Slerp(Vim.Math3d.Quaternion,Vim.Math3d.Quaternion,System.Single)
  fullName: Vim.Math3d.Quaternion.Slerp(Vim.Math3d.Quaternion, Vim.Math3d.Quaternion, System.Single)
  nameWithType: Quaternion.Slerp(Quaternion, Quaternion, Single)
- uid: Vim.Math3d.Quaternion.Slerp*
  name: Slerp
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Slerp_
  commentId: Overload:Vim.Math3d.Quaternion.Slerp
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Slerp
  nameWithType: Quaternion.Slerp
- uid: Vim.Math3d.Quaternion.ToEulerAngles
  name: ToEulerAngles()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_ToEulerAngles
  commentId: M:Vim.Math3d.Quaternion.ToEulerAngles
  fullName: Vim.Math3d.Quaternion.ToEulerAngles()
  nameWithType: Quaternion.ToEulerAngles()
- uid: Vim.Math3d.Quaternion.ToEulerAngles*
  name: ToEulerAngles
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_ToEulerAngles_
  commentId: Overload:Vim.Math3d.Quaternion.ToEulerAngles
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.ToEulerAngles
  nameWithType: Quaternion.ToEulerAngles
- uid: Vim.Math3d.Quaternion.ToString
  name: ToString()
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_ToString
  commentId: M:Vim.Math3d.Quaternion.ToString
  fullName: Vim.Math3d.Quaternion.ToString()
  nameWithType: Quaternion.ToString()
- uid: Vim.Math3d.Quaternion.ToString*
  name: ToString
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_ToString_
  commentId: Overload:Vim.Math3d.Quaternion.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.ToString
  nameWithType: Quaternion.ToString
- uid: Vim.Math3d.Quaternion.Vector4
  name: Vector4
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Vector4
  commentId: P:Vim.Math3d.Quaternion.Vector4
  fullName: Vim.Math3d.Quaternion.Vector4
  nameWithType: Quaternion.Vector4
- uid: Vim.Math3d.Quaternion.Vector4*
  name: Vector4
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Vector4_
  commentId: Overload:Vim.Math3d.Quaternion.Vector4
  isSpec: "True"
  fullName: Vim.Math3d.Quaternion.Vector4
  nameWithType: Quaternion.Vector4
- uid: Vim.Math3d.Quaternion.W
  name: W
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_W
  commentId: F:Vim.Math3d.Quaternion.W
  fullName: Vim.Math3d.Quaternion.W
  nameWithType: Quaternion.W
- uid: Vim.Math3d.Quaternion.X
  name: X
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_X
  commentId: F:Vim.Math3d.Quaternion.X
  fullName: Vim.Math3d.Quaternion.X
  nameWithType: Quaternion.X
- uid: Vim.Math3d.Quaternion.Y
  name: Y
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Y
  commentId: F:Vim.Math3d.Quaternion.Y
  fullName: Vim.Math3d.Quaternion.Y
  nameWithType: Quaternion.Y
- uid: Vim.Math3d.Quaternion.Z
  name: Z
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Z
  commentId: F:Vim.Math3d.Quaternion.Z
  fullName: Vim.Math3d.Quaternion.Z
  nameWithType: Quaternion.Z
- uid: Vim.Math3d.Quaternion.Zero
  name: Zero
  href: api/Vim.Math3d.Quaternion.html#Vim_Math3d_Quaternion_Zero
  commentId: F:Vim.Math3d.Quaternion.Zero
  fullName: Vim.Math3d.Quaternion.Zero
  nameWithType: Quaternion.Zero
- uid: Vim.Math3d.Ray
  name: Ray
  href: api/Vim.Math3d.Ray.html
  commentId: T:Vim.Math3d.Ray
  fullName: Vim.Math3d.Ray
  nameWithType: Ray
- uid: Vim.Math3d.Ray.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Ray((Vector3 position, Vector3 direction))
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray__ctor_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Ray.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Ray((position As Vector3, direction As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.Ray.Ray(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Ray.Ray(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Ray.Ray((Vector3 position, Vector3 direction))
  nameWithType.vb: Ray.Ray((position As Vector3, direction As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.Ray.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Ray(Vector3, Vector3)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray__ctor_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Ray.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Ray.Ray(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Ray.Ray(Vector3, Vector3)
- uid: Vim.Math3d.Ray.#ctor*
  name: Ray
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray__ctor_
  commentId: Overload:Vim.Math3d.Ray.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Ray
  nameWithType: Ray.Ray
- uid: Vim.Math3d.Ray.AlmostEquals(Vim.Math3d.Ray,System.Single)
  name: AlmostEquals(Ray, Single)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_AlmostEquals_Vim_Math3d_Ray_System_Single_
  commentId: M:Vim.Math3d.Ray.AlmostEquals(Vim.Math3d.Ray,System.Single)
  fullName: Vim.Math3d.Ray.AlmostEquals(Vim.Math3d.Ray, System.Single)
  nameWithType: Ray.AlmostEquals(Ray, Single)
- uid: Vim.Math3d.Ray.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_AlmostEquals_
  commentId: Overload:Vim.Math3d.Ray.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Ray.AlmostEquals
  nameWithType: Ray.AlmostEquals
- uid: Vim.Math3d.Ray.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Create((Vector3 position, Vector3 direction))
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Create_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Ray.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Create((position As Vector3, direction As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.Ray.Create(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Ray.Create(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Ray.Create((Vector3 position, Vector3 direction))
  nameWithType.vb: Ray.Create((position As Vector3, direction As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.Ray.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Create(Vector3, Vector3)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Create_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Ray.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Ray.Create(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Ray.Create(Vector3, Vector3)
- uid: Vim.Math3d.Ray.Create*
  name: Create
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Create_
  commentId: Overload:Vim.Math3d.Ray.Create
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Create
  nameWithType: Ray.Create
- uid: Vim.Math3d.Ray.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name: Deconstruct(out Vector3, out Vector3)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Deconstruct_Vim_Math3d_Vector3__Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Ray.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Vector3)
  fullName: Vim.Math3d.Ray.Deconstruct(out Vim.Math3d.Vector3, out Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Ray.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3)
  nameWithType: Ray.Deconstruct(out Vector3, out Vector3)
  nameWithType.vb: Ray.Deconstruct(ByRef Vector3, ByRef Vector3)
- uid: Vim.Math3d.Ray.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Deconstruct_
  commentId: Overload:Vim.Math3d.Ray.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Deconstruct
  nameWithType: Ray.Deconstruct
- uid: Vim.Math3d.Ray.Direction
  name: Direction
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Direction
  commentId: F:Vim.Math3d.Ray.Direction
  fullName: Vim.Math3d.Ray.Direction
  nameWithType: Ray.Direction
- uid: Vim.Math3d.Ray.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Equals_System_Object_
  commentId: M:Vim.Math3d.Ray.Equals(System.Object)
  fullName: Vim.Math3d.Ray.Equals(System.Object)
  nameWithType: Ray.Equals(Object)
- uid: Vim.Math3d.Ray.Equals(Vim.Math3d.Ray)
  name: Equals(Ray)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Equals_Vim_Math3d_Ray_
  commentId: M:Vim.Math3d.Ray.Equals(Vim.Math3d.Ray)
  fullName: Vim.Math3d.Ray.Equals(Vim.Math3d.Ray)
  nameWithType: Ray.Equals(Ray)
- uid: Vim.Math3d.Ray.Equals*
  name: Equals
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Equals_
  commentId: Overload:Vim.Math3d.Ray.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Equals
  nameWithType: Ray.Equals
- uid: Vim.Math3d.Ray.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_GetHashCode
  commentId: M:Vim.Math3d.Ray.GetHashCode
  fullName: Vim.Math3d.Ray.GetHashCode()
  nameWithType: Ray.GetHashCode()
- uid: Vim.Math3d.Ray.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_GetHashCode_
  commentId: Overload:Vim.Math3d.Ray.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Ray.GetHashCode
  nameWithType: Ray.GetHashCode
- uid: Vim.Math3d.Ray.Intersects(Vim.Math3d.AABox)
  name: Intersects(AABox)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Intersects_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.Ray.Intersects(Vim.Math3d.AABox)
  fullName: Vim.Math3d.Ray.Intersects(Vim.Math3d.AABox)
  nameWithType: Ray.Intersects(AABox)
- uid: Vim.Math3d.Ray.Intersects(Vim.Math3d.Plane,System.Single)
  name: Intersects(Plane, Single)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Intersects_Vim_Math3d_Plane_System_Single_
  commentId: M:Vim.Math3d.Ray.Intersects(Vim.Math3d.Plane,System.Single)
  fullName: Vim.Math3d.Ray.Intersects(Vim.Math3d.Plane, System.Single)
  nameWithType: Ray.Intersects(Plane, Single)
- uid: Vim.Math3d.Ray.Intersects(Vim.Math3d.Sphere)
  name: Intersects(Sphere)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Intersects_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Ray.Intersects(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Ray.Intersects(Vim.Math3d.Sphere)
  nameWithType: Ray.Intersects(Sphere)
- uid: Vim.Math3d.Ray.Intersects(Vim.Math3d.Triangle,System.Single)
  name: Intersects(Triangle, Single)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Intersects_Vim_Math3d_Triangle_System_Single_
  commentId: M:Vim.Math3d.Ray.Intersects(Vim.Math3d.Triangle,System.Single)
  fullName: Vim.Math3d.Ray.Intersects(Vim.Math3d.Triangle, System.Single)
  nameWithType: Ray.Intersects(Triangle, Single)
- uid: Vim.Math3d.Ray.Intersects*
  name: Intersects
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Intersects_
  commentId: Overload:Vim.Math3d.Ray.Intersects
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Intersects
  nameWithType: Ray.Intersects
- uid: Vim.Math3d.Ray.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_MaxValue
  commentId: F:Vim.Math3d.Ray.MaxValue
  fullName: Vim.Math3d.Ray.MaxValue
  nameWithType: Ray.MaxValue
- uid: Vim.Math3d.Ray.MinValue
  name: MinValue
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_MinValue
  commentId: F:Vim.Math3d.Ray.MinValue
  fullName: Vim.Math3d.Ray.MinValue
  nameWithType: Ray.MinValue
- uid: Vim.Math3d.Ray.op_Equality(Vim.Math3d.Ray,Vim.Math3d.Ray)
  name: Equality(Ray, Ray)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_op_Equality_Vim_Math3d_Ray_Vim_Math3d_Ray_
  commentId: M:Vim.Math3d.Ray.op_Equality(Vim.Math3d.Ray,Vim.Math3d.Ray)
  fullName: Vim.Math3d.Ray.Equality(Vim.Math3d.Ray, Vim.Math3d.Ray)
  nameWithType: Ray.Equality(Ray, Ray)
- uid: Vim.Math3d.Ray.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_op_Equality_
  commentId: Overload:Vim.Math3d.Ray.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Equality
  nameWithType: Ray.Equality
- uid: Vim.Math3d.Ray.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Ray
  name: Implicit((Vector3 position, Vector3 direction) to Ray)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3___Vim_Math3d_Ray
  commentId: M:Vim.Math3d.Ray.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Ray
  name.vb: Widening((position As Vector3, direction As Vector3)(Of Vector3, Vector3) to Ray)
  fullName: Vim.Math3d.Ray.Implicit(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3> to Vim.Math3d.Ray)
  fullName.vb: Vim.Math3d.Ray.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3) to Vim.Math3d.Ray)
  nameWithType: Ray.Implicit((Vector3 position, Vector3 direction) to Ray)
  nameWithType.vb: Ray.Widening((position As Vector3, direction As Vector3)(Of Vector3, Vector3) to Ray)
- uid: Vim.Math3d.Ray.op_Implicit(Vim.Math3d.Ray)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name: Implicit(Ray to (Vector3 position, Vector3 direction))
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_op_Implicit_Vim_Math3d_Ray__System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Ray.op_Implicit(Vim.Math3d.Ray)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name.vb: Widening(Ray to (position As Vector3, direction As Vector3)(Of Vector3, Vector3))
  fullName: Vim.Math3d.Ray.Implicit(Vim.Math3d.Ray to System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Ray.Widening(Vim.Math3d.Ray to System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Ray.Implicit(Ray to (Vector3 position, Vector3 direction))
  nameWithType.vb: Ray.Widening(Ray to (position As Vector3, direction As Vector3)(Of Vector3, Vector3))
- uid: Vim.Math3d.Ray.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_op_Implicit_
  commentId: Overload:Vim.Math3d.Ray.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Ray.Implicit
  fullName.vb: Vim.Math3d.Ray.Widening
  nameWithType: Ray.Implicit
  nameWithType.vb: Ray.Widening
- uid: Vim.Math3d.Ray.op_Inequality(Vim.Math3d.Ray,Vim.Math3d.Ray)
  name: Inequality(Ray, Ray)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_op_Inequality_Vim_Math3d_Ray_Vim_Math3d_Ray_
  commentId: M:Vim.Math3d.Ray.op_Inequality(Vim.Math3d.Ray,Vim.Math3d.Ray)
  fullName: Vim.Math3d.Ray.Inequality(Vim.Math3d.Ray, Vim.Math3d.Ray)
  nameWithType: Ray.Inequality(Ray, Ray)
- uid: Vim.Math3d.Ray.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_op_Inequality_
  commentId: Overload:Vim.Math3d.Ray.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Inequality
  nameWithType: Ray.Inequality
- uid: Vim.Math3d.Ray.Position
  name: Position
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Position
  commentId: F:Vim.Math3d.Ray.Position
  fullName: Vim.Math3d.Ray.Position
  nameWithType: Ray.Position
- uid: Vim.Math3d.Ray.SetDirection(Vim.Math3d.Vector3)
  name: SetDirection(Vector3)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_SetDirection_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Ray.SetDirection(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Ray.SetDirection(Vim.Math3d.Vector3)
  nameWithType: Ray.SetDirection(Vector3)
- uid: Vim.Math3d.Ray.SetDirection*
  name: SetDirection
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_SetDirection_
  commentId: Overload:Vim.Math3d.Ray.SetDirection
  isSpec: "True"
  fullName: Vim.Math3d.Ray.SetDirection
  nameWithType: Ray.SetDirection
- uid: Vim.Math3d.Ray.SetPosition(Vim.Math3d.Vector3)
  name: SetPosition(Vector3)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_SetPosition_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Ray.SetPosition(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Ray.SetPosition(Vim.Math3d.Vector3)
  nameWithType: Ray.SetPosition(Vector3)
- uid: Vim.Math3d.Ray.SetPosition*
  name: SetPosition
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_SetPosition_
  commentId: Overload:Vim.Math3d.Ray.SetPosition
  isSpec: "True"
  fullName: Vim.Math3d.Ray.SetPosition
  nameWithType: Ray.SetPosition
- uid: Vim.Math3d.Ray.ToString
  name: ToString()
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_ToString
  commentId: M:Vim.Math3d.Ray.ToString
  fullName: Vim.Math3d.Ray.ToString()
  nameWithType: Ray.ToString()
- uid: Vim.Math3d.Ray.ToString*
  name: ToString
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_ToString_
  commentId: Overload:Vim.Math3d.Ray.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Ray.ToString
  nameWithType: Ray.ToString
- uid: Vim.Math3d.Ray.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Ray.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Ray.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Ray.Transform(Matrix4x4)
- uid: Vim.Math3d.Ray.Transform*
  name: Transform
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Transform_
  commentId: Overload:Vim.Math3d.Ray.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Ray.Transform
  nameWithType: Ray.Transform
- uid: Vim.Math3d.Ray.Zero
  name: Zero
  href: api/Vim.Math3d.Ray.html#Vim_Math3d_Ray_Zero
  commentId: F:Vim.Math3d.Ray.Zero
  fullName: Vim.Math3d.Ray.Zero
  nameWithType: Ray.Zero
- uid: Vim.Math3d.Sphere
  name: Sphere
  href: api/Vim.Math3d.Sphere.html
  commentId: T:Vim.Math3d.Sphere
  fullName: Vim.Math3d.Sphere
  nameWithType: Sphere
- uid: Vim.Math3d.Sphere.#ctor(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name: Sphere((Vector3 center, Single radius))
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere__ctor_System_ValueTuple_Vim_Math3d_Vector3_System_Single__
  commentId: M:Vim.Math3d.Sphere.#ctor(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name.vb: Sphere((center As Vector3, radius As Single)(Of Vector3, Single))
  fullName: Vim.Math3d.Sphere.Sphere(System.ValueTuple<Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.Sphere.Sphere(System.ValueTuple(Of Vim.Math3d.Vector3, System.Single))
  nameWithType: Sphere.Sphere((Vector3 center, Single radius))
  nameWithType.vb: Sphere.Sphere((center As Vector3, radius As Single)(Of Vector3, Single))
- uid: Vim.Math3d.Sphere.#ctor(Vim.Math3d.Vector3,System.Single)
  name: Sphere(Vector3, Single)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere__ctor_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Sphere.#ctor(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Sphere.Sphere(Vim.Math3d.Vector3, System.Single)
  nameWithType: Sphere.Sphere(Vector3, Single)
- uid: Vim.Math3d.Sphere.#ctor*
  name: Sphere
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere__ctor_
  commentId: Overload:Vim.Math3d.Sphere.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Sphere
  nameWithType: Sphere.Sphere
- uid: Vim.Math3d.Sphere.AlmostEquals(Vim.Math3d.Sphere,System.Single)
  name: AlmostEquals(Sphere, Single)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_AlmostEquals_Vim_Math3d_Sphere_System_Single_
  commentId: M:Vim.Math3d.Sphere.AlmostEquals(Vim.Math3d.Sphere,System.Single)
  fullName: Vim.Math3d.Sphere.AlmostEquals(Vim.Math3d.Sphere, System.Single)
  nameWithType: Sphere.AlmostEquals(Sphere, Single)
- uid: Vim.Math3d.Sphere.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_AlmostEquals_
  commentId: Overload:Vim.Math3d.Sphere.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.AlmostEquals
  nameWithType: Sphere.AlmostEquals
- uid: Vim.Math3d.Sphere.Center
  name: Center
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Center
  commentId: F:Vim.Math3d.Sphere.Center
  fullName: Vim.Math3d.Sphere.Center
  nameWithType: Sphere.Center
- uid: Vim.Math3d.Sphere.Contains(Vim.Math3d.AABox)
  name: Contains(AABox)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Contains_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.Sphere.Contains(Vim.Math3d.AABox)
  fullName: Vim.Math3d.Sphere.Contains(Vim.Math3d.AABox)
  nameWithType: Sphere.Contains(AABox)
- uid: Vim.Math3d.Sphere.Contains(Vim.Math3d.Sphere)
  name: Contains(Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Contains_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Sphere.Contains(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Sphere.Contains(Vim.Math3d.Sphere)
  nameWithType: Sphere.Contains(Sphere)
- uid: Vim.Math3d.Sphere.Contains(Vim.Math3d.Vector3)
  name: Contains(Vector3)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Contains_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Sphere.Contains(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Sphere.Contains(Vim.Math3d.Vector3)
  nameWithType: Sphere.Contains(Vector3)
- uid: Vim.Math3d.Sphere.Contains(Vim.Math3d.Vector3,Vim.Math3d.ContainmentType@)
  name: Contains(Vector3, out ContainmentType)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Contains_Vim_Math3d_Vector3_Vim_Math3d_ContainmentType__
  commentId: M:Vim.Math3d.Sphere.Contains(Vim.Math3d.Vector3,Vim.Math3d.ContainmentType@)
  name.vb: Contains(Vector3, ByRef ContainmentType)
  fullName: Vim.Math3d.Sphere.Contains(Vim.Math3d.Vector3, out Vim.Math3d.ContainmentType)
  fullName.vb: Vim.Math3d.Sphere.Contains(Vim.Math3d.Vector3, ByRef Vim.Math3d.ContainmentType)
  nameWithType: Sphere.Contains(Vector3, out ContainmentType)
  nameWithType.vb: Sphere.Contains(Vector3, ByRef ContainmentType)
- uid: Vim.Math3d.Sphere.Contains*
  name: Contains
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Contains_
  commentId: Overload:Vim.Math3d.Sphere.Contains
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Contains
  nameWithType: Sphere.Contains
- uid: Vim.Math3d.Sphere.Create(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name: Create(IEnumerable<Vector3>)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Create_System_Collections_Generic_IEnumerable_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Sphere.Create(System.Collections.Generic.IEnumerable{Vim.Math3d.Vector3})
  name.vb: Create(IEnumerable(Of Vector3))
  fullName: Vim.Math3d.Sphere.Create(System.Collections.Generic.IEnumerable<Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Sphere.Create(System.Collections.Generic.IEnumerable(Of Vim.Math3d.Vector3))
  nameWithType: Sphere.Create(IEnumerable<Vector3>)
  nameWithType.vb: Sphere.Create(IEnumerable(Of Vector3))
- uid: Vim.Math3d.Sphere.Create(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name: Create((Vector3 center, Single radius))
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Create_System_ValueTuple_Vim_Math3d_Vector3_System_Single__
  commentId: M:Vim.Math3d.Sphere.Create(System.ValueTuple{Vim.Math3d.Vector3,System.Single})
  name.vb: Create((center As Vector3, radius As Single)(Of Vector3, Single))
  fullName: Vim.Math3d.Sphere.Create(System.ValueTuple<Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.Sphere.Create(System.ValueTuple(Of Vim.Math3d.Vector3, System.Single))
  nameWithType: Sphere.Create((Vector3 center, Single radius))
  nameWithType.vb: Sphere.Create((center As Vector3, radius As Single)(Of Vector3, Single))
- uid: Vim.Math3d.Sphere.Create(Vim.Math3d.AABox)
  name: Create(AABox)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Create_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.Sphere.Create(Vim.Math3d.AABox)
  fullName: Vim.Math3d.Sphere.Create(Vim.Math3d.AABox)
  nameWithType: Sphere.Create(AABox)
- uid: Vim.Math3d.Sphere.Create(Vim.Math3d.Vector3,System.Single)
  name: Create(Vector3, Single)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Create_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Sphere.Create(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Sphere.Create(Vim.Math3d.Vector3, System.Single)
  nameWithType: Sphere.Create(Vector3, Single)
- uid: Vim.Math3d.Sphere.Create(Vim.Math3d.Vector3[])
  name: Create(Vector3[])
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Create_Vim_Math3d_Vector3___
  commentId: M:Vim.Math3d.Sphere.Create(Vim.Math3d.Vector3[])
  name.vb: Create(Vector3())
  fullName: Vim.Math3d.Sphere.Create(Vim.Math3d.Vector3[])
  fullName.vb: Vim.Math3d.Sphere.Create(Vim.Math3d.Vector3())
  nameWithType: Sphere.Create(Vector3[])
  nameWithType.vb: Sphere.Create(Vector3())
- uid: Vim.Math3d.Sphere.Create*
  name: Create
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Create_
  commentId: Overload:Vim.Math3d.Sphere.Create
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Create
  nameWithType: Sphere.Create
- uid: Vim.Math3d.Sphere.Deconstruct(Vim.Math3d.Vector3@,System.Single@)
  name: Deconstruct(out Vector3, out Single)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Deconstruct_Vim_Math3d_Vector3__System_Single__
  commentId: M:Vim.Math3d.Sphere.Deconstruct(Vim.Math3d.Vector3@,System.Single@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Single)
  fullName: Vim.Math3d.Sphere.Deconstruct(out Vim.Math3d.Vector3, out System.Single)
  fullName.vb: Vim.Math3d.Sphere.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef System.Single)
  nameWithType: Sphere.Deconstruct(out Vector3, out Single)
  nameWithType.vb: Sphere.Deconstruct(ByRef Vector3, ByRef Single)
- uid: Vim.Math3d.Sphere.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Deconstruct_
  commentId: Overload:Vim.Math3d.Sphere.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Deconstruct
  nameWithType: Sphere.Deconstruct
- uid: Vim.Math3d.Sphere.Distance(Vim.Math3d.Sphere)
  name: Distance(Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Distance_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Sphere.Distance(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Sphere.Distance(Vim.Math3d.Sphere)
  nameWithType: Sphere.Distance(Sphere)
- uid: Vim.Math3d.Sphere.Distance(Vim.Math3d.Vector3)
  name: Distance(Vector3)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Distance_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Sphere.Distance(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Sphere.Distance(Vim.Math3d.Vector3)
  nameWithType: Sphere.Distance(Vector3)
- uid: Vim.Math3d.Sphere.Distance*
  name: Distance
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Distance_
  commentId: Overload:Vim.Math3d.Sphere.Distance
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Distance
  nameWithType: Sphere.Distance
- uid: Vim.Math3d.Sphere.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Equals_System_Object_
  commentId: M:Vim.Math3d.Sphere.Equals(System.Object)
  fullName: Vim.Math3d.Sphere.Equals(System.Object)
  nameWithType: Sphere.Equals(Object)
- uid: Vim.Math3d.Sphere.Equals(Vim.Math3d.Sphere)
  name: Equals(Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Equals_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Sphere.Equals(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Sphere.Equals(Vim.Math3d.Sphere)
  nameWithType: Sphere.Equals(Sphere)
- uid: Vim.Math3d.Sphere.Equals*
  name: Equals
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Equals_
  commentId: Overload:Vim.Math3d.Sphere.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Equals
  nameWithType: Sphere.Equals
- uid: Vim.Math3d.Sphere.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_GetHashCode
  commentId: M:Vim.Math3d.Sphere.GetHashCode
  fullName: Vim.Math3d.Sphere.GetHashCode()
  nameWithType: Sphere.GetHashCode()
- uid: Vim.Math3d.Sphere.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_GetHashCode_
  commentId: Overload:Vim.Math3d.Sphere.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.GetHashCode
  nameWithType: Sphere.GetHashCode
- uid: Vim.Math3d.Sphere.Intersects(Vim.Math3d.AABox)
  name: Intersects(AABox)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Intersects_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.Sphere.Intersects(Vim.Math3d.AABox)
  fullName: Vim.Math3d.Sphere.Intersects(Vim.Math3d.AABox)
  nameWithType: Sphere.Intersects(AABox)
- uid: Vim.Math3d.Sphere.Intersects(Vim.Math3d.Plane)
  name: Intersects(Plane)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Intersects_Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Sphere.Intersects(Vim.Math3d.Plane)
  fullName: Vim.Math3d.Sphere.Intersects(Vim.Math3d.Plane)
  nameWithType: Sphere.Intersects(Plane)
- uid: Vim.Math3d.Sphere.Intersects(Vim.Math3d.Ray)
  name: Intersects(Ray)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Intersects_Vim_Math3d_Ray_
  commentId: M:Vim.Math3d.Sphere.Intersects(Vim.Math3d.Ray)
  fullName: Vim.Math3d.Sphere.Intersects(Vim.Math3d.Ray)
  nameWithType: Sphere.Intersects(Ray)
- uid: Vim.Math3d.Sphere.Intersects(Vim.Math3d.Sphere)
  name: Intersects(Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Intersects_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Sphere.Intersects(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Sphere.Intersects(Vim.Math3d.Sphere)
  nameWithType: Sphere.Intersects(Sphere)
- uid: Vim.Math3d.Sphere.Intersects*
  name: Intersects
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Intersects_
  commentId: Overload:Vim.Math3d.Sphere.Intersects
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Intersects
  nameWithType: Sphere.Intersects
- uid: Vim.Math3d.Sphere.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_MaxValue
  commentId: F:Vim.Math3d.Sphere.MaxValue
  fullName: Vim.Math3d.Sphere.MaxValue
  nameWithType: Sphere.MaxValue
- uid: Vim.Math3d.Sphere.Merge(Vim.Math3d.Sphere)
  name: Merge(Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Merge_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Sphere.Merge(Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Sphere.Merge(Vim.Math3d.Sphere)
  nameWithType: Sphere.Merge(Sphere)
- uid: Vim.Math3d.Sphere.Merge*
  name: Merge
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Merge_
  commentId: Overload:Vim.Math3d.Sphere.Merge
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Merge
  nameWithType: Sphere.Merge
- uid: Vim.Math3d.Sphere.MinValue
  name: MinValue
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_MinValue
  commentId: F:Vim.Math3d.Sphere.MinValue
  fullName: Vim.Math3d.Sphere.MinValue
  nameWithType: Sphere.MinValue
- uid: Vim.Math3d.Sphere.op_Equality(Vim.Math3d.Sphere,Vim.Math3d.Sphere)
  name: Equality(Sphere, Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_op_Equality_Vim_Math3d_Sphere_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Sphere.op_Equality(Vim.Math3d.Sphere,Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Sphere.Equality(Vim.Math3d.Sphere, Vim.Math3d.Sphere)
  nameWithType: Sphere.Equality(Sphere, Sphere)
- uid: Vim.Math3d.Sphere.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_op_Equality_
  commentId: Overload:Vim.Math3d.Sphere.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Equality
  nameWithType: Sphere.Equality
- uid: Vim.Math3d.Sphere.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,System.Single})~Vim.Math3d.Sphere
  name: Implicit((Vector3 center, Single radius) to Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_System_Single___Vim_Math3d_Sphere
  commentId: M:Vim.Math3d.Sphere.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,System.Single})~Vim.Math3d.Sphere
  name.vb: Widening((center As Vector3, radius As Single)(Of Vector3, Single) to Sphere)
  fullName: Vim.Math3d.Sphere.Implicit(System.ValueTuple<Vim.Math3d.Vector3, System.Single> to Vim.Math3d.Sphere)
  fullName.vb: Vim.Math3d.Sphere.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, System.Single) to Vim.Math3d.Sphere)
  nameWithType: Sphere.Implicit((Vector3 center, Single radius) to Sphere)
  nameWithType.vb: Sphere.Widening((center As Vector3, radius As Single)(Of Vector3, Single) to Sphere)
- uid: Vim.Math3d.Sphere.op_Implicit(Vim.Math3d.Sphere)~System.ValueTuple{Vim.Math3d.Vector3,System.Single}
  name: Implicit(Sphere to (Vector3 center, Single radius))
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_op_Implicit_Vim_Math3d_Sphere__System_ValueTuple_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Sphere.op_Implicit(Vim.Math3d.Sphere)~System.ValueTuple{Vim.Math3d.Vector3,System.Single}
  name.vb: Widening(Sphere to (center As Vector3, radius As Single)(Of Vector3, Single))
  fullName: Vim.Math3d.Sphere.Implicit(Vim.Math3d.Sphere to System.ValueTuple<Vim.Math3d.Vector3, System.Single>)
  fullName.vb: Vim.Math3d.Sphere.Widening(Vim.Math3d.Sphere to System.ValueTuple(Of Vim.Math3d.Vector3, System.Single))
  nameWithType: Sphere.Implicit(Sphere to (Vector3 center, Single radius))
  nameWithType.vb: Sphere.Widening(Sphere to (center As Vector3, radius As Single)(Of Vector3, Single))
- uid: Vim.Math3d.Sphere.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_op_Implicit_
  commentId: Overload:Vim.Math3d.Sphere.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Sphere.Implicit
  fullName.vb: Vim.Math3d.Sphere.Widening
  nameWithType: Sphere.Implicit
  nameWithType.vb: Sphere.Widening
- uid: Vim.Math3d.Sphere.op_Inequality(Vim.Math3d.Sphere,Vim.Math3d.Sphere)
  name: Inequality(Sphere, Sphere)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_op_Inequality_Vim_Math3d_Sphere_Vim_Math3d_Sphere_
  commentId: M:Vim.Math3d.Sphere.op_Inequality(Vim.Math3d.Sphere,Vim.Math3d.Sphere)
  fullName: Vim.Math3d.Sphere.Inequality(Vim.Math3d.Sphere, Vim.Math3d.Sphere)
  nameWithType: Sphere.Inequality(Sphere, Sphere)
- uid: Vim.Math3d.Sphere.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_op_Inequality_
  commentId: Overload:Vim.Math3d.Sphere.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Inequality
  nameWithType: Sphere.Inequality
- uid: Vim.Math3d.Sphere.Radius
  name: Radius
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Radius
  commentId: F:Vim.Math3d.Sphere.Radius
  fullName: Vim.Math3d.Sphere.Radius
  nameWithType: Sphere.Radius
- uid: Vim.Math3d.Sphere.SetCenter(Vim.Math3d.Vector3)
  name: SetCenter(Vector3)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_SetCenter_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Sphere.SetCenter(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Sphere.SetCenter(Vim.Math3d.Vector3)
  nameWithType: Sphere.SetCenter(Vector3)
- uid: Vim.Math3d.Sphere.SetCenter*
  name: SetCenter
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_SetCenter_
  commentId: Overload:Vim.Math3d.Sphere.SetCenter
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.SetCenter
  nameWithType: Sphere.SetCenter
- uid: Vim.Math3d.Sphere.SetRadius(System.Single)
  name: SetRadius(Single)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_SetRadius_System_Single_
  commentId: M:Vim.Math3d.Sphere.SetRadius(System.Single)
  fullName: Vim.Math3d.Sphere.SetRadius(System.Single)
  nameWithType: Sphere.SetRadius(Single)
- uid: Vim.Math3d.Sphere.SetRadius*
  name: SetRadius
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_SetRadius_
  commentId: Overload:Vim.Math3d.Sphere.SetRadius
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.SetRadius
  nameWithType: Sphere.SetRadius
- uid: Vim.Math3d.Sphere.ToString
  name: ToString()
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_ToString
  commentId: M:Vim.Math3d.Sphere.ToString
  fullName: Vim.Math3d.Sphere.ToString()
  nameWithType: Sphere.ToString()
- uid: Vim.Math3d.Sphere.ToString*
  name: ToString
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_ToString_
  commentId: Overload:Vim.Math3d.Sphere.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.ToString
  nameWithType: Sphere.ToString
- uid: Vim.Math3d.Sphere.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Sphere.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Sphere.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Sphere.Transform(Matrix4x4)
- uid: Vim.Math3d.Sphere.Transform*
  name: Transform
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Transform_
  commentId: Overload:Vim.Math3d.Sphere.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Transform
  nameWithType: Sphere.Transform
- uid: Vim.Math3d.Sphere.Translate(Vim.Math3d.Vector3)
  name: Translate(Vector3)
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Translate_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Sphere.Translate(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Sphere.Translate(Vim.Math3d.Vector3)
  nameWithType: Sphere.Translate(Vector3)
- uid: Vim.Math3d.Sphere.Translate*
  name: Translate
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Translate_
  commentId: Overload:Vim.Math3d.Sphere.Translate
  isSpec: "True"
  fullName: Vim.Math3d.Sphere.Translate
  nameWithType: Sphere.Translate
- uid: Vim.Math3d.Sphere.Zero
  name: Zero
  href: api/Vim.Math3d.Sphere.html#Vim_Math3d_Sphere_Zero
  commentId: F:Vim.Math3d.Sphere.Zero
  fullName: Vim.Math3d.Sphere.Zero
  nameWithType: Sphere.Zero
- uid: Vim.Math3d.SphericalCoordinate
  name: SphericalCoordinate
  href: api/Vim.Math3d.SphericalCoordinate.html
  commentId: T:Vim.Math3d.SphericalCoordinate
  fullName: Vim.Math3d.SphericalCoordinate
  nameWithType: SphericalCoordinate
- uid: Vim.Math3d.SphericalCoordinate.#ctor(System.Double,System.Double,System.Double)
  name: SphericalCoordinate(Double, Double, Double)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate__ctor_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.SphericalCoordinate.#ctor(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.SphericalCoordinate.SphericalCoordinate(System.Double, System.Double, System.Double)
  nameWithType: SphericalCoordinate.SphericalCoordinate(Double, Double, Double)
- uid: Vim.Math3d.SphericalCoordinate.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name: SphericalCoordinate((Double radius, Double azimuth, Double inclination))
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate__ctor_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.SphericalCoordinate.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: SphericalCoordinate((radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.SphericalCoordinate.SphericalCoordinate(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.SphericalCoordinate.SphericalCoordinate(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: SphericalCoordinate.SphericalCoordinate((Double radius, Double azimuth, Double inclination))
  nameWithType.vb: SphericalCoordinate.SphericalCoordinate((radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.SphericalCoordinate.#ctor*
  name: SphericalCoordinate
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate__ctor_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.SphericalCoordinate
  nameWithType: SphericalCoordinate.SphericalCoordinate
- uid: Vim.Math3d.SphericalCoordinate.AlmostEquals(Vim.Math3d.SphericalCoordinate,System.Single)
  name: AlmostEquals(SphericalCoordinate, Single)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_AlmostEquals_Vim_Math3d_SphericalCoordinate_System_Single_
  commentId: M:Vim.Math3d.SphericalCoordinate.AlmostEquals(Vim.Math3d.SphericalCoordinate,System.Single)
  fullName: Vim.Math3d.SphericalCoordinate.AlmostEquals(Vim.Math3d.SphericalCoordinate, System.Single)
  nameWithType: SphericalCoordinate.AlmostEquals(SphericalCoordinate, Single)
- uid: Vim.Math3d.SphericalCoordinate.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_AlmostEquals_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.AlmostEquals
  nameWithType: SphericalCoordinate.AlmostEquals
- uid: Vim.Math3d.SphericalCoordinate.Azimuth
  name: Azimuth
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Azimuth
  commentId: F:Vim.Math3d.SphericalCoordinate.Azimuth
  fullName: Vim.Math3d.SphericalCoordinate.Azimuth
  nameWithType: SphericalCoordinate.Azimuth
- uid: Vim.Math3d.SphericalCoordinate.Create(System.Double,System.Double,System.Double)
  name: Create(Double, Double, Double)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Create_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.SphericalCoordinate.Create(System.Double,System.Double,System.Double)
  fullName: Vim.Math3d.SphericalCoordinate.Create(System.Double, System.Double, System.Double)
  nameWithType: SphericalCoordinate.Create(Double, Double, Double)
- uid: Vim.Math3d.SphericalCoordinate.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name: Create((Double radius, Double azimuth, Double inclination))
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Create_System_ValueTuple_System_Double_System_Double_System_Double__
  commentId: M:Vim.Math3d.SphericalCoordinate.Create(System.ValueTuple{System.Double,System.Double,System.Double})
  name.vb: Create((radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.SphericalCoordinate.Create(System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.SphericalCoordinate.Create(System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: SphericalCoordinate.Create((Double radius, Double azimuth, Double inclination))
  nameWithType.vb: SphericalCoordinate.Create((radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.SphericalCoordinate.Create*
  name: Create
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Create_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.Create
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.Create
  nameWithType: SphericalCoordinate.Create
- uid: Vim.Math3d.SphericalCoordinate.Deconstruct(System.Double@,System.Double@,System.Double@)
  name: Deconstruct(out Double, out Double, out Double)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Deconstruct_System_Double__System_Double__System_Double__
  commentId: M:Vim.Math3d.SphericalCoordinate.Deconstruct(System.Double@,System.Double@,System.Double@)
  name.vb: Deconstruct(ByRef Double, ByRef Double, ByRef Double)
  fullName: Vim.Math3d.SphericalCoordinate.Deconstruct(out System.Double, out System.Double, out System.Double)
  fullName.vb: Vim.Math3d.SphericalCoordinate.Deconstruct(ByRef System.Double, ByRef System.Double, ByRef System.Double)
  nameWithType: SphericalCoordinate.Deconstruct(out Double, out Double, out Double)
  nameWithType.vb: SphericalCoordinate.Deconstruct(ByRef Double, ByRef Double, ByRef Double)
- uid: Vim.Math3d.SphericalCoordinate.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Deconstruct_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.Deconstruct
  nameWithType: SphericalCoordinate.Deconstruct
- uid: Vim.Math3d.SphericalCoordinate.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Equals_System_Object_
  commentId: M:Vim.Math3d.SphericalCoordinate.Equals(System.Object)
  fullName: Vim.Math3d.SphericalCoordinate.Equals(System.Object)
  nameWithType: SphericalCoordinate.Equals(Object)
- uid: Vim.Math3d.SphericalCoordinate.Equals(Vim.Math3d.SphericalCoordinate)
  name: Equals(SphericalCoordinate)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Equals_Vim_Math3d_SphericalCoordinate_
  commentId: M:Vim.Math3d.SphericalCoordinate.Equals(Vim.Math3d.SphericalCoordinate)
  fullName: Vim.Math3d.SphericalCoordinate.Equals(Vim.Math3d.SphericalCoordinate)
  nameWithType: SphericalCoordinate.Equals(SphericalCoordinate)
- uid: Vim.Math3d.SphericalCoordinate.Equals*
  name: Equals
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Equals_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.Equals
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.Equals
  nameWithType: SphericalCoordinate.Equals
- uid: Vim.Math3d.SphericalCoordinate.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_GetHashCode
  commentId: M:Vim.Math3d.SphericalCoordinate.GetHashCode
  fullName: Vim.Math3d.SphericalCoordinate.GetHashCode()
  nameWithType: SphericalCoordinate.GetHashCode()
- uid: Vim.Math3d.SphericalCoordinate.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_GetHashCode_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.GetHashCode
  nameWithType: SphericalCoordinate.GetHashCode
- uid: Vim.Math3d.SphericalCoordinate.Inclination
  name: Inclination
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Inclination
  commentId: F:Vim.Math3d.SphericalCoordinate.Inclination
  fullName: Vim.Math3d.SphericalCoordinate.Inclination
  nameWithType: SphericalCoordinate.Inclination
- uid: Vim.Math3d.SphericalCoordinate.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_MaxValue
  commentId: F:Vim.Math3d.SphericalCoordinate.MaxValue
  fullName: Vim.Math3d.SphericalCoordinate.MaxValue
  nameWithType: SphericalCoordinate.MaxValue
- uid: Vim.Math3d.SphericalCoordinate.MinValue
  name: MinValue
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_MinValue
  commentId: F:Vim.Math3d.SphericalCoordinate.MinValue
  fullName: Vim.Math3d.SphericalCoordinate.MinValue
  nameWithType: SphericalCoordinate.MinValue
- uid: Vim.Math3d.SphericalCoordinate.op_Equality(Vim.Math3d.SphericalCoordinate,Vim.Math3d.SphericalCoordinate)
  name: Equality(SphericalCoordinate, SphericalCoordinate)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_op_Equality_Vim_Math3d_SphericalCoordinate_Vim_Math3d_SphericalCoordinate_
  commentId: M:Vim.Math3d.SphericalCoordinate.op_Equality(Vim.Math3d.SphericalCoordinate,Vim.Math3d.SphericalCoordinate)
  fullName: Vim.Math3d.SphericalCoordinate.Equality(Vim.Math3d.SphericalCoordinate, Vim.Math3d.SphericalCoordinate)
  nameWithType: SphericalCoordinate.Equality(SphericalCoordinate, SphericalCoordinate)
- uid: Vim.Math3d.SphericalCoordinate.op_Equality*
  name: Equality
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_op_Equality_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.Equality
  nameWithType: SphericalCoordinate.Equality
- uid: Vim.Math3d.SphericalCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.SphericalCoordinate
  name: Implicit((Double radius, Double azimuth, Double inclination) to SphericalCoordinate)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_op_Implicit_System_ValueTuple_System_Double_System_Double_System_Double___Vim_Math3d_SphericalCoordinate
  commentId: M:Vim.Math3d.SphericalCoordinate.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~Vim.Math3d.SphericalCoordinate
  name.vb: Widening((radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double) to SphericalCoordinate)
  fullName: Vim.Math3d.SphericalCoordinate.Implicit(System.ValueTuple<System.Double, System.Double, System.Double> to Vim.Math3d.SphericalCoordinate)
  fullName.vb: Vim.Math3d.SphericalCoordinate.Widening(System.ValueTuple(Of System.Double, System.Double, System.Double) to Vim.Math3d.SphericalCoordinate)
  nameWithType: SphericalCoordinate.Implicit((Double radius, Double azimuth, Double inclination) to SphericalCoordinate)
  nameWithType.vb: SphericalCoordinate.Widening((radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double) to SphericalCoordinate)
- uid: Vim.Math3d.SphericalCoordinate.op_Implicit(Vim.Math3d.SphericalCoordinate)~System.ValueTuple{System.Double,System.Double,System.Double}
  name: Implicit(SphericalCoordinate to (Double radius, Double azimuth, Double inclination))
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_op_Implicit_Vim_Math3d_SphericalCoordinate__System_ValueTuple_System_Double_System_Double_System_Double_
  commentId: M:Vim.Math3d.SphericalCoordinate.op_Implicit(Vim.Math3d.SphericalCoordinate)~System.ValueTuple{System.Double,System.Double,System.Double}
  name.vb: Widening(SphericalCoordinate to (radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double))
  fullName: Vim.Math3d.SphericalCoordinate.Implicit(Vim.Math3d.SphericalCoordinate to System.ValueTuple<System.Double, System.Double, System.Double>)
  fullName.vb: Vim.Math3d.SphericalCoordinate.Widening(Vim.Math3d.SphericalCoordinate to System.ValueTuple(Of System.Double, System.Double, System.Double))
  nameWithType: SphericalCoordinate.Implicit(SphericalCoordinate to (Double radius, Double azimuth, Double inclination))
  nameWithType.vb: SphericalCoordinate.Widening(SphericalCoordinate to (radius As Double, azimuth As Double, inclination As Double)(Of Double, Double, Double))
- uid: Vim.Math3d.SphericalCoordinate.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_op_Implicit_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.SphericalCoordinate.Implicit
  fullName.vb: Vim.Math3d.SphericalCoordinate.Widening
  nameWithType: SphericalCoordinate.Implicit
  nameWithType.vb: SphericalCoordinate.Widening
- uid: Vim.Math3d.SphericalCoordinate.op_Inequality(Vim.Math3d.SphericalCoordinate,Vim.Math3d.SphericalCoordinate)
  name: Inequality(SphericalCoordinate, SphericalCoordinate)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_op_Inequality_Vim_Math3d_SphericalCoordinate_Vim_Math3d_SphericalCoordinate_
  commentId: M:Vim.Math3d.SphericalCoordinate.op_Inequality(Vim.Math3d.SphericalCoordinate,Vim.Math3d.SphericalCoordinate)
  fullName: Vim.Math3d.SphericalCoordinate.Inequality(Vim.Math3d.SphericalCoordinate, Vim.Math3d.SphericalCoordinate)
  nameWithType: SphericalCoordinate.Inequality(SphericalCoordinate, SphericalCoordinate)
- uid: Vim.Math3d.SphericalCoordinate.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_op_Inequality_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.Inequality
  nameWithType: SphericalCoordinate.Inequality
- uid: Vim.Math3d.SphericalCoordinate.Radius
  name: Radius
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Radius
  commentId: F:Vim.Math3d.SphericalCoordinate.Radius
  fullName: Vim.Math3d.SphericalCoordinate.Radius
  nameWithType: SphericalCoordinate.Radius
- uid: Vim.Math3d.SphericalCoordinate.SetAzimuth(System.Double)
  name: SetAzimuth(Double)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_SetAzimuth_System_Double_
  commentId: M:Vim.Math3d.SphericalCoordinate.SetAzimuth(System.Double)
  fullName: Vim.Math3d.SphericalCoordinate.SetAzimuth(System.Double)
  nameWithType: SphericalCoordinate.SetAzimuth(Double)
- uid: Vim.Math3d.SphericalCoordinate.SetAzimuth*
  name: SetAzimuth
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_SetAzimuth_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.SetAzimuth
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.SetAzimuth
  nameWithType: SphericalCoordinate.SetAzimuth
- uid: Vim.Math3d.SphericalCoordinate.SetInclination(System.Double)
  name: SetInclination(Double)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_SetInclination_System_Double_
  commentId: M:Vim.Math3d.SphericalCoordinate.SetInclination(System.Double)
  fullName: Vim.Math3d.SphericalCoordinate.SetInclination(System.Double)
  nameWithType: SphericalCoordinate.SetInclination(Double)
- uid: Vim.Math3d.SphericalCoordinate.SetInclination*
  name: SetInclination
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_SetInclination_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.SetInclination
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.SetInclination
  nameWithType: SphericalCoordinate.SetInclination
- uid: Vim.Math3d.SphericalCoordinate.SetRadius(System.Double)
  name: SetRadius(Double)
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_SetRadius_System_Double_
  commentId: M:Vim.Math3d.SphericalCoordinate.SetRadius(System.Double)
  fullName: Vim.Math3d.SphericalCoordinate.SetRadius(System.Double)
  nameWithType: SphericalCoordinate.SetRadius(Double)
- uid: Vim.Math3d.SphericalCoordinate.SetRadius*
  name: SetRadius
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_SetRadius_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.SetRadius
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.SetRadius
  nameWithType: SphericalCoordinate.SetRadius
- uid: Vim.Math3d.SphericalCoordinate.ToString
  name: ToString()
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_ToString
  commentId: M:Vim.Math3d.SphericalCoordinate.ToString
  fullName: Vim.Math3d.SphericalCoordinate.ToString()
  nameWithType: SphericalCoordinate.ToString()
- uid: Vim.Math3d.SphericalCoordinate.ToString*
  name: ToString
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_ToString_
  commentId: Overload:Vim.Math3d.SphericalCoordinate.ToString
  isSpec: "True"
  fullName: Vim.Math3d.SphericalCoordinate.ToString
  nameWithType: SphericalCoordinate.ToString
- uid: Vim.Math3d.SphericalCoordinate.Zero
  name: Zero
  href: api/Vim.Math3d.SphericalCoordinate.html#Vim_Math3d_SphericalCoordinate_Zero
  commentId: F:Vim.Math3d.SphericalCoordinate.Zero
  fullName: Vim.Math3d.SphericalCoordinate.Zero
  nameWithType: SphericalCoordinate.Zero
- uid: Vim.Math3d.StatelessRandom
  name: StatelessRandom
  href: api/Vim.Math3d.StatelessRandom.html
  commentId: T:Vim.Math3d.StatelessRandom
  fullName: Vim.Math3d.StatelessRandom
  nameWithType: StatelessRandom
- uid: Vim.Math3d.StatelessRandom.RandomFloat(System.Int32,System.Int32)
  name: RandomFloat(Int32, Int32)
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomFloat_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.StatelessRandom.RandomFloat(System.Int32,System.Int32)
  fullName: Vim.Math3d.StatelessRandom.RandomFloat(System.Int32, System.Int32)
  nameWithType: StatelessRandom.RandomFloat(Int32, Int32)
- uid: Vim.Math3d.StatelessRandom.RandomFloat(System.Single,System.Single,System.Int32,System.Int32)
  name: RandomFloat(Single, Single, Int32, Int32)
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomFloat_System_Single_System_Single_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.StatelessRandom.RandomFloat(System.Single,System.Single,System.Int32,System.Int32)
  fullName: Vim.Math3d.StatelessRandom.RandomFloat(System.Single, System.Single, System.Int32, System.Int32)
  nameWithType: StatelessRandom.RandomFloat(Single, Single, Int32, Int32)
- uid: Vim.Math3d.StatelessRandom.RandomFloat*
  name: RandomFloat
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomFloat_
  commentId: Overload:Vim.Math3d.StatelessRandom.RandomFloat
  isSpec: "True"
  fullName: Vim.Math3d.StatelessRandom.RandomFloat
  nameWithType: StatelessRandom.RandomFloat
- uid: Vim.Math3d.StatelessRandom.RandomInt(System.Int32,System.Int32)
  name: RandomInt(Int32, Int32)
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomInt_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.StatelessRandom.RandomInt(System.Int32,System.Int32)
  fullName: Vim.Math3d.StatelessRandom.RandomInt(System.Int32, System.Int32)
  nameWithType: StatelessRandom.RandomInt(Int32, Int32)
- uid: Vim.Math3d.StatelessRandom.RandomInt*
  name: RandomInt
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomInt_
  commentId: Overload:Vim.Math3d.StatelessRandom.RandomInt
  isSpec: "True"
  fullName: Vim.Math3d.StatelessRandom.RandomInt
  nameWithType: StatelessRandom.RandomInt
- uid: Vim.Math3d.StatelessRandom.RandomUInt(System.Int32,System.Int32)
  name: RandomUInt(Int32, Int32)
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomUInt_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.StatelessRandom.RandomUInt(System.Int32,System.Int32)
  fullName: Vim.Math3d.StatelessRandom.RandomUInt(System.Int32, System.Int32)
  nameWithType: StatelessRandom.RandomUInt(Int32, Int32)
- uid: Vim.Math3d.StatelessRandom.RandomUInt*
  name: RandomUInt
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomUInt_
  commentId: Overload:Vim.Math3d.StatelessRandom.RandomUInt
  isSpec: "True"
  fullName: Vim.Math3d.StatelessRandom.RandomUInt
  nameWithType: StatelessRandom.RandomUInt
- uid: Vim.Math3d.StatelessRandom.RandomVector2(System.Int32,System.Int32)
  name: RandomVector2(Int32, Int32)
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomVector2_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.StatelessRandom.RandomVector2(System.Int32,System.Int32)
  fullName: Vim.Math3d.StatelessRandom.RandomVector2(System.Int32, System.Int32)
  nameWithType: StatelessRandom.RandomVector2(Int32, Int32)
- uid: Vim.Math3d.StatelessRandom.RandomVector2*
  name: RandomVector2
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomVector2_
  commentId: Overload:Vim.Math3d.StatelessRandom.RandomVector2
  isSpec: "True"
  fullName: Vim.Math3d.StatelessRandom.RandomVector2
  nameWithType: StatelessRandom.RandomVector2
- uid: Vim.Math3d.StatelessRandom.RandomVector3(System.Int32,System.Int32)
  name: RandomVector3(Int32, Int32)
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomVector3_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.StatelessRandom.RandomVector3(System.Int32,System.Int32)
  fullName: Vim.Math3d.StatelessRandom.RandomVector3(System.Int32, System.Int32)
  nameWithType: StatelessRandom.RandomVector3(Int32, Int32)
- uid: Vim.Math3d.StatelessRandom.RandomVector3*
  name: RandomVector3
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomVector3_
  commentId: Overload:Vim.Math3d.StatelessRandom.RandomVector3
  isSpec: "True"
  fullName: Vim.Math3d.StatelessRandom.RandomVector3
  nameWithType: StatelessRandom.RandomVector3
- uid: Vim.Math3d.StatelessRandom.RandomVector4(System.Int32,System.Int32)
  name: RandomVector4(Int32, Int32)
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomVector4_System_Int32_System_Int32_
  commentId: M:Vim.Math3d.StatelessRandom.RandomVector4(System.Int32,System.Int32)
  fullName: Vim.Math3d.StatelessRandom.RandomVector4(System.Int32, System.Int32)
  nameWithType: StatelessRandom.RandomVector4(Int32, Int32)
- uid: Vim.Math3d.StatelessRandom.RandomVector4*
  name: RandomVector4
  href: api/Vim.Math3d.StatelessRandom.html#Vim_Math3d_StatelessRandom_RandomVector4_
  commentId: Overload:Vim.Math3d.StatelessRandom.RandomVector4
  isSpec: "True"
  fullName: Vim.Math3d.StatelessRandom.RandomVector4
  nameWithType: StatelessRandom.RandomVector4
- uid: Vim.Math3d.Stats`1
  name: Stats<T>
  href: api/Vim.Math3d.Stats-1.html
  commentId: T:Vim.Math3d.Stats`1
  name.vb: Stats(Of T)
  fullName: Vim.Math3d.Stats<T>
  fullName.vb: Vim.Math3d.Stats(Of T)
  nameWithType: Stats<T>
  nameWithType.vb: Stats(Of T)
- uid: Vim.Math3d.Stats`1.#ctor(System.Int32,`0,`0,`0)
  name: Stats(Int32, T, T, T)
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1__ctor_System_Int32__0__0__0_
  commentId: M:Vim.Math3d.Stats`1.#ctor(System.Int32,`0,`0,`0)
  fullName: Vim.Math3d.Stats<T>.Stats(System.Int32, T, T, T)
  fullName.vb: Vim.Math3d.Stats(Of T).Stats(System.Int32, T, T, T)
  nameWithType: Stats<T>.Stats(Int32, T, T, T)
  nameWithType.vb: Stats(Of T).Stats(Int32, T, T, T)
- uid: Vim.Math3d.Stats`1.#ctor*
  name: Stats
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1__ctor_
  commentId: Overload:Vim.Math3d.Stats`1.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Stats<T>.Stats
  fullName.vb: Vim.Math3d.Stats(Of T).Stats
  nameWithType: Stats<T>.Stats
  nameWithType.vb: Stats(Of T).Stats
- uid: Vim.Math3d.Stats`1.Count
  name: Count
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Count
  commentId: F:Vim.Math3d.Stats`1.Count
  fullName: Vim.Math3d.Stats<T>.Count
  fullName.vb: Vim.Math3d.Stats(Of T).Count
  nameWithType: Stats<T>.Count
  nameWithType.vb: Stats(Of T).Count
- uid: Vim.Math3d.Stats`1.Default
  name: Default
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Default
  commentId: F:Vim.Math3d.Stats`1.Default
  fullName: Vim.Math3d.Stats<T>.Default
  fullName.vb: Vim.Math3d.Stats(Of T).Default
  nameWithType: Stats<T>.Default
  nameWithType.vb: Stats(Of T).Default
- uid: Vim.Math3d.Stats`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Equals_System_Object_
  commentId: M:Vim.Math3d.Stats`1.Equals(System.Object)
  fullName: Vim.Math3d.Stats<T>.Equals(System.Object)
  fullName.vb: Vim.Math3d.Stats(Of T).Equals(System.Object)
  nameWithType: Stats<T>.Equals(Object)
  nameWithType.vb: Stats(Of T).Equals(Object)
- uid: Vim.Math3d.Stats`1.Equals(Vim.Math3d.Stats{`0})
  name: Equals(Stats<T>)
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Equals_Vim_Math3d_Stats__0__
  commentId: M:Vim.Math3d.Stats`1.Equals(Vim.Math3d.Stats{`0})
  name.vb: Equals(Stats(Of T))
  fullName: Vim.Math3d.Stats<T>.Equals(Vim.Math3d.Stats<T>)
  fullName.vb: Vim.Math3d.Stats(Of T).Equals(Vim.Math3d.Stats(Of T))
  nameWithType: Stats<T>.Equals(Stats<T>)
  nameWithType.vb: Stats(Of T).Equals(Stats(Of T))
- uid: Vim.Math3d.Stats`1.Equals*
  name: Equals
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Equals_
  commentId: Overload:Vim.Math3d.Stats`1.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Stats<T>.Equals
  fullName.vb: Vim.Math3d.Stats(Of T).Equals
  nameWithType: Stats<T>.Equals
  nameWithType.vb: Stats(Of T).Equals
- uid: Vim.Math3d.Stats`1.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_GetHashCode
  commentId: M:Vim.Math3d.Stats`1.GetHashCode
  fullName: Vim.Math3d.Stats<T>.GetHashCode()
  fullName.vb: Vim.Math3d.Stats(Of T).GetHashCode()
  nameWithType: Stats<T>.GetHashCode()
  nameWithType.vb: Stats(Of T).GetHashCode()
- uid: Vim.Math3d.Stats`1.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_GetHashCode_
  commentId: Overload:Vim.Math3d.Stats`1.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Stats<T>.GetHashCode
  fullName.vb: Vim.Math3d.Stats(Of T).GetHashCode
  nameWithType: Stats<T>.GetHashCode
  nameWithType.vb: Stats(Of T).GetHashCode
- uid: Vim.Math3d.Stats`1.Max
  name: Max
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Max
  commentId: F:Vim.Math3d.Stats`1.Max
  fullName: Vim.Math3d.Stats<T>.Max
  fullName.vb: Vim.Math3d.Stats(Of T).Max
  nameWithType: Stats<T>.Max
  nameWithType.vb: Stats(Of T).Max
- uid: Vim.Math3d.Stats`1.Min
  name: Min
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Min
  commentId: F:Vim.Math3d.Stats`1.Min
  fullName: Vim.Math3d.Stats<T>.Min
  fullName.vb: Vim.Math3d.Stats(Of T).Min
  nameWithType: Stats<T>.Min
  nameWithType.vb: Stats(Of T).Min
- uid: Vim.Math3d.Stats`1.op_Equality(Vim.Math3d.Stats{`0},Vim.Math3d.Stats{`0})
  name: Equality(Stats<T>, Stats<T>)
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_op_Equality_Vim_Math3d_Stats__0__Vim_Math3d_Stats__0__
  commentId: M:Vim.Math3d.Stats`1.op_Equality(Vim.Math3d.Stats{`0},Vim.Math3d.Stats{`0})
  name.vb: Equality(Stats(Of T), Stats(Of T))
  fullName: Vim.Math3d.Stats<T>.Equality(Vim.Math3d.Stats<T>, Vim.Math3d.Stats<T>)
  fullName.vb: Vim.Math3d.Stats(Of T).Equality(Vim.Math3d.Stats(Of T), Vim.Math3d.Stats(Of T))
  nameWithType: Stats<T>.Equality(Stats<T>, Stats<T>)
  nameWithType.vb: Stats(Of T).Equality(Stats(Of T), Stats(Of T))
- uid: Vim.Math3d.Stats`1.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_op_Equality_
  commentId: Overload:Vim.Math3d.Stats`1.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Stats<T>.Equality
  fullName.vb: Vim.Math3d.Stats(Of T).Equality
  nameWithType: Stats<T>.Equality
  nameWithType.vb: Stats(Of T).Equality
- uid: Vim.Math3d.Stats`1.op_Inequality(Vim.Math3d.Stats{`0},Vim.Math3d.Stats{`0})
  name: Inequality(Stats<T>, Stats<T>)
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_op_Inequality_Vim_Math3d_Stats__0__Vim_Math3d_Stats__0__
  commentId: M:Vim.Math3d.Stats`1.op_Inequality(Vim.Math3d.Stats{`0},Vim.Math3d.Stats{`0})
  name.vb: Inequality(Stats(Of T), Stats(Of T))
  fullName: Vim.Math3d.Stats<T>.Inequality(Vim.Math3d.Stats<T>, Vim.Math3d.Stats<T>)
  fullName.vb: Vim.Math3d.Stats(Of T).Inequality(Vim.Math3d.Stats(Of T), Vim.Math3d.Stats(Of T))
  nameWithType: Stats<T>.Inequality(Stats<T>, Stats<T>)
  nameWithType.vb: Stats(Of T).Inequality(Stats(Of T), Stats(Of T))
- uid: Vim.Math3d.Stats`1.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_op_Inequality_
  commentId: Overload:Vim.Math3d.Stats`1.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Stats<T>.Inequality
  fullName.vb: Vim.Math3d.Stats(Of T).Inequality
  nameWithType: Stats<T>.Inequality
  nameWithType.vb: Stats(Of T).Inequality
- uid: Vim.Math3d.Stats`1.Sum
  name: Sum
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_Sum
  commentId: F:Vim.Math3d.Stats`1.Sum
  fullName: Vim.Math3d.Stats<T>.Sum
  fullName.vb: Vim.Math3d.Stats(Of T).Sum
  nameWithType: Stats<T>.Sum
  nameWithType.vb: Stats(Of T).Sum
- uid: Vim.Math3d.Stats`1.ToString
  name: ToString()
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_ToString
  commentId: M:Vim.Math3d.Stats`1.ToString
  fullName: Vim.Math3d.Stats<T>.ToString()
  fullName.vb: Vim.Math3d.Stats(Of T).ToString()
  nameWithType: Stats<T>.ToString()
  nameWithType.vb: Stats(Of T).ToString()
- uid: Vim.Math3d.Stats`1.ToString*
  name: ToString
  href: api/Vim.Math3d.Stats-1.html#Vim_Math3d_Stats_1_ToString_
  commentId: Overload:Vim.Math3d.Stats`1.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Stats<T>.ToString
  fullName.vb: Vim.Math3d.Stats(Of T).ToString
  nameWithType: Stats<T>.ToString
  nameWithType.vb: Stats(Of T).ToString
- uid: Vim.Math3d.Transform
  name: Transform
  href: api/Vim.Math3d.Transform.html
  commentId: T:Vim.Math3d.Transform
  fullName: Vim.Math3d.Transform
  nameWithType: Transform
- uid: Vim.Math3d.Transform.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion})
  name: Transform((Vector3 position, Quaternion orientation))
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform__ctor_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Quaternion__
  commentId: M:Vim.Math3d.Transform.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion})
  name.vb: Transform((position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion))
  fullName: Vim.Math3d.Transform.Transform(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Quaternion>)
  fullName.vb: Vim.Math3d.Transform.Transform(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Quaternion))
  nameWithType: Transform.Transform((Vector3 position, Quaternion orientation))
  nameWithType.vb: Transform.Transform((position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion))
- uid: Vim.Math3d.Transform.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  name: Transform(Vector3, Quaternion)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform__ctor_Vim_Math3d_Vector3_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Transform.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Transform.Transform(Vim.Math3d.Vector3, Vim.Math3d.Quaternion)
  nameWithType: Transform.Transform(Vector3, Quaternion)
- uid: Vim.Math3d.Transform.#ctor*
  name: Transform
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform__ctor_
  commentId: Overload:Vim.Math3d.Transform.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Transform.Transform
  nameWithType: Transform.Transform
- uid: Vim.Math3d.Transform.AlmostEquals(Vim.Math3d.Transform,System.Single)
  name: AlmostEquals(Transform, Single)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_AlmostEquals_Vim_Math3d_Transform_System_Single_
  commentId: M:Vim.Math3d.Transform.AlmostEquals(Vim.Math3d.Transform,System.Single)
  fullName: Vim.Math3d.Transform.AlmostEquals(Vim.Math3d.Transform, System.Single)
  nameWithType: Transform.AlmostEquals(Transform, Single)
- uid: Vim.Math3d.Transform.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_AlmostEquals_
  commentId: Overload:Vim.Math3d.Transform.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Transform.AlmostEquals
  nameWithType: Transform.AlmostEquals
- uid: Vim.Math3d.Transform.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion})
  name: Create((Vector3 position, Quaternion orientation))
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Create_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Quaternion__
  commentId: M:Vim.Math3d.Transform.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion})
  name.vb: Create((position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion))
  fullName: Vim.Math3d.Transform.Create(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Quaternion>)
  fullName.vb: Vim.Math3d.Transform.Create(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Quaternion))
  nameWithType: Transform.Create((Vector3 position, Quaternion orientation))
  nameWithType.vb: Transform.Create((position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion))
- uid: Vim.Math3d.Transform.Create(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  name: Create(Vector3, Quaternion)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Create_Vim_Math3d_Vector3_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Transform.Create(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Transform.Create(Vim.Math3d.Vector3, Vim.Math3d.Quaternion)
  nameWithType: Transform.Create(Vector3, Quaternion)
- uid: Vim.Math3d.Transform.Create*
  name: Create
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Create_
  commentId: Overload:Vim.Math3d.Transform.Create
  isSpec: "True"
  fullName: Vim.Math3d.Transform.Create
  nameWithType: Transform.Create
- uid: Vim.Math3d.Transform.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Quaternion@)
  name: Deconstruct(out Vector3, out Quaternion)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Deconstruct_Vim_Math3d_Vector3__Vim_Math3d_Quaternion__
  commentId: M:Vim.Math3d.Transform.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Quaternion@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Quaternion)
  fullName: Vim.Math3d.Transform.Deconstruct(out Vim.Math3d.Vector3, out Vim.Math3d.Quaternion)
  fullName.vb: Vim.Math3d.Transform.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Quaternion)
  nameWithType: Transform.Deconstruct(out Vector3, out Quaternion)
  nameWithType.vb: Transform.Deconstruct(ByRef Vector3, ByRef Quaternion)
- uid: Vim.Math3d.Transform.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Deconstruct_
  commentId: Overload:Vim.Math3d.Transform.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Transform.Deconstruct
  nameWithType: Transform.Deconstruct
- uid: Vim.Math3d.Transform.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Equals_System_Object_
  commentId: M:Vim.Math3d.Transform.Equals(System.Object)
  fullName: Vim.Math3d.Transform.Equals(System.Object)
  nameWithType: Transform.Equals(Object)
- uid: Vim.Math3d.Transform.Equals(Vim.Math3d.Transform)
  name: Equals(Transform)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Equals_Vim_Math3d_Transform_
  commentId: M:Vim.Math3d.Transform.Equals(Vim.Math3d.Transform)
  fullName: Vim.Math3d.Transform.Equals(Vim.Math3d.Transform)
  nameWithType: Transform.Equals(Transform)
- uid: Vim.Math3d.Transform.Equals*
  name: Equals
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Equals_
  commentId: Overload:Vim.Math3d.Transform.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Transform.Equals
  nameWithType: Transform.Equals
- uid: Vim.Math3d.Transform.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_GetHashCode
  commentId: M:Vim.Math3d.Transform.GetHashCode
  fullName: Vim.Math3d.Transform.GetHashCode()
  nameWithType: Transform.GetHashCode()
- uid: Vim.Math3d.Transform.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_GetHashCode_
  commentId: Overload:Vim.Math3d.Transform.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Transform.GetHashCode
  nameWithType: Transform.GetHashCode
- uid: Vim.Math3d.Transform.Identity
  name: Identity
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Identity
  commentId: P:Vim.Math3d.Transform.Identity
  fullName: Vim.Math3d.Transform.Identity
  nameWithType: Transform.Identity
- uid: Vim.Math3d.Transform.Identity*
  name: Identity
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Identity_
  commentId: Overload:Vim.Math3d.Transform.Identity
  isSpec: "True"
  fullName: Vim.Math3d.Transform.Identity
  nameWithType: Transform.Identity
- uid: Vim.Math3d.Transform.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_MaxValue
  commentId: F:Vim.Math3d.Transform.MaxValue
  fullName: Vim.Math3d.Transform.MaxValue
  nameWithType: Transform.MaxValue
- uid: Vim.Math3d.Transform.MinValue
  name: MinValue
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_MinValue
  commentId: F:Vim.Math3d.Transform.MinValue
  fullName: Vim.Math3d.Transform.MinValue
  nameWithType: Transform.MinValue
- uid: Vim.Math3d.Transform.op_Equality(Vim.Math3d.Transform,Vim.Math3d.Transform)
  name: Equality(Transform, Transform)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_op_Equality_Vim_Math3d_Transform_Vim_Math3d_Transform_
  commentId: M:Vim.Math3d.Transform.op_Equality(Vim.Math3d.Transform,Vim.Math3d.Transform)
  fullName: Vim.Math3d.Transform.Equality(Vim.Math3d.Transform, Vim.Math3d.Transform)
  nameWithType: Transform.Equality(Transform, Transform)
- uid: Vim.Math3d.Transform.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_op_Equality_
  commentId: Overload:Vim.Math3d.Transform.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Transform.Equality
  nameWithType: Transform.Equality
- uid: Vim.Math3d.Transform.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion})~Vim.Math3d.Transform
  name: Implicit((Vector3 position, Quaternion orientation) to Transform)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Quaternion___Vim_Math3d_Transform
  commentId: M:Vim.Math3d.Transform.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion})~Vim.Math3d.Transform
  name.vb: Widening((position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion) to Transform)
  fullName: Vim.Math3d.Transform.Implicit(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Quaternion> to Vim.Math3d.Transform)
  fullName.vb: Vim.Math3d.Transform.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Quaternion) to Vim.Math3d.Transform)
  nameWithType: Transform.Implicit((Vector3 position, Quaternion orientation) to Transform)
  nameWithType.vb: Transform.Widening((position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion) to Transform)
- uid: Vim.Math3d.Transform.op_Implicit(Vim.Math3d.Transform)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion}
  name: Implicit(Transform to (Vector3 position, Quaternion orientation))
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_op_Implicit_Vim_Math3d_Transform__System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Transform.op_Implicit(Vim.Math3d.Transform)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Quaternion}
  name.vb: Widening(Transform to (position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion))
  fullName: Vim.Math3d.Transform.Implicit(Vim.Math3d.Transform to System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Quaternion>)
  fullName.vb: Vim.Math3d.Transform.Widening(Vim.Math3d.Transform to System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Quaternion))
  nameWithType: Transform.Implicit(Transform to (Vector3 position, Quaternion orientation))
  nameWithType.vb: Transform.Widening(Transform to (position As Vector3, orientation As Quaternion)(Of Vector3, Quaternion))
- uid: Vim.Math3d.Transform.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_op_Implicit_
  commentId: Overload:Vim.Math3d.Transform.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Transform.Implicit
  fullName.vb: Vim.Math3d.Transform.Widening
  nameWithType: Transform.Implicit
  nameWithType.vb: Transform.Widening
- uid: Vim.Math3d.Transform.op_Inequality(Vim.Math3d.Transform,Vim.Math3d.Transform)
  name: Inequality(Transform, Transform)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_op_Inequality_Vim_Math3d_Transform_Vim_Math3d_Transform_
  commentId: M:Vim.Math3d.Transform.op_Inequality(Vim.Math3d.Transform,Vim.Math3d.Transform)
  fullName: Vim.Math3d.Transform.Inequality(Vim.Math3d.Transform, Vim.Math3d.Transform)
  nameWithType: Transform.Inequality(Transform, Transform)
- uid: Vim.Math3d.Transform.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_op_Inequality_
  commentId: Overload:Vim.Math3d.Transform.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Transform.Inequality
  nameWithType: Transform.Inequality
- uid: Vim.Math3d.Transform.Orientation
  name: Orientation
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Orientation
  commentId: F:Vim.Math3d.Transform.Orientation
  fullName: Vim.Math3d.Transform.Orientation
  nameWithType: Transform.Orientation
- uid: Vim.Math3d.Transform.Position
  name: Position
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Position
  commentId: F:Vim.Math3d.Transform.Position
  fullName: Vim.Math3d.Transform.Position
  nameWithType: Transform.Position
- uid: Vim.Math3d.Transform.SetOrientation(Vim.Math3d.Quaternion)
  name: SetOrientation(Quaternion)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_SetOrientation_Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Transform.SetOrientation(Vim.Math3d.Quaternion)
  fullName: Vim.Math3d.Transform.SetOrientation(Vim.Math3d.Quaternion)
  nameWithType: Transform.SetOrientation(Quaternion)
- uid: Vim.Math3d.Transform.SetOrientation*
  name: SetOrientation
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_SetOrientation_
  commentId: Overload:Vim.Math3d.Transform.SetOrientation
  isSpec: "True"
  fullName: Vim.Math3d.Transform.SetOrientation
  nameWithType: Transform.SetOrientation
- uid: Vim.Math3d.Transform.SetPosition(Vim.Math3d.Vector3)
  name: SetPosition(Vector3)
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_SetPosition_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Transform.SetPosition(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Transform.SetPosition(Vim.Math3d.Vector3)
  nameWithType: Transform.SetPosition(Vector3)
- uid: Vim.Math3d.Transform.SetPosition*
  name: SetPosition
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_SetPosition_
  commentId: Overload:Vim.Math3d.Transform.SetPosition
  isSpec: "True"
  fullName: Vim.Math3d.Transform.SetPosition
  nameWithType: Transform.SetPosition
- uid: Vim.Math3d.Transform.ToString
  name: ToString()
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_ToString
  commentId: M:Vim.Math3d.Transform.ToString
  fullName: Vim.Math3d.Transform.ToString()
  nameWithType: Transform.ToString()
- uid: Vim.Math3d.Transform.ToString*
  name: ToString
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_ToString_
  commentId: Overload:Vim.Math3d.Transform.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Transform.ToString
  nameWithType: Transform.ToString
- uid: Vim.Math3d.Transform.Zero
  name: Zero
  href: api/Vim.Math3d.Transform.html#Vim_Math3d_Transform_Zero
  commentId: F:Vim.Math3d.Transform.Zero
  fullName: Vim.Math3d.Transform.Zero
  nameWithType: Transform.Zero
- uid: Vim.Math3d.Transformable3D
  name: Transformable3D
  href: api/Vim.Math3d.Transformable3D.html
  commentId: T:Vim.Math3d.Transformable3D
  fullName: Vim.Math3d.Transformable3D
  nameWithType: Transformable3D
- uid: Vim.Math3d.Transformable3D.LookAt*
  name: LookAt
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_LookAt_
  commentId: Overload:Vim.Math3d.Transformable3D.LookAt
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.LookAt
  nameWithType: Transformable3D.LookAt
- uid: Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: LookAt<T>(ITransformable3D<T>, Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_LookAt__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name.vb: LookAt(Of T)(ITransformable3D(Of T), Vector3, Vector3, Vector3)
  fullName: Vim.Math3d.Transformable3D.LookAt<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.LookAt(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Transformable3D.LookAt<T>(ITransformable3D<T>, Vector3, Vector3, Vector3)
  nameWithType.vb: Transformable3D.LookAt(Of T)(ITransformable3D(Of T), Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Transformable3D.Multiply(Vim.Math3d.Matrix4x4[])
  name: Multiply(Matrix4x4[])
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Multiply_Vim_Math3d_Matrix4x4___
  commentId: M:Vim.Math3d.Transformable3D.Multiply(Vim.Math3d.Matrix4x4[])
  name.vb: Multiply(Matrix4x4())
  fullName: Vim.Math3d.Transformable3D.Multiply(Vim.Math3d.Matrix4x4[])
  fullName.vb: Vim.Math3d.Transformable3D.Multiply(Vim.Math3d.Matrix4x4())
  nameWithType: Transformable3D.Multiply(Matrix4x4[])
  nameWithType.vb: Transformable3D.Multiply(Matrix4x4())
- uid: Vim.Math3d.Transformable3D.Multiply*
  name: Multiply
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Multiply_
  commentId: Overload:Vim.Math3d.Transformable3D.Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.Multiply
  nameWithType: Transformable3D.Multiply
- uid: Vim.Math3d.Transformable3D.Reflect*
  name: Reflect
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Reflect_
  commentId: Overload:Vim.Math3d.Transformable3D.Reflect
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.Reflect
  nameWithType: Transformable3D.Reflect
- uid: Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
  name: Reflect<T>(ITransformable3D<T>, Plane)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Reflect__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Plane_
  commentId: M:Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
  name.vb: Reflect(Of T)(ITransformable3D(Of T), Plane)
  fullName: Vim.Math3d.Transformable3D.Reflect<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Plane)
  fullName.vb: Vim.Math3d.Transformable3D.Reflect(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Plane)
  nameWithType: Transformable3D.Reflect<T>(ITransformable3D<T>, Plane)
  nameWithType.vb: Transformable3D.Reflect(Of T)(ITransformable3D(Of T), Plane)
- uid: Vim.Math3d.Transformable3D.Rotate*
  name: Rotate
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Rotate_
  commentId: Overload:Vim.Math3d.Transformable3D.Rotate
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.Rotate
  nameWithType: Transformable3D.Rotate
- uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name: Rotate<T>(ITransformable3D<T>, Single, Single, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Rotate__1_Vim_Math3d_ITransformable3D___0__System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name.vb: Rotate(Of T)(ITransformable3D(Of T), Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Rotate<T>(Vim.Math3d.ITransformable3D<T>, System.Single, System.Single, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.Rotate(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single, System.Single, System.Single)
  nameWithType: Transformable3D.Rotate<T>(ITransformable3D<T>, Single, Single, Single)
  nameWithType.vb: Transformable3D.Rotate(Of T)(ITransformable3D(Of T), Single, Single, Single)
- uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
  name: Rotate<T>(ITransformable3D<T>, Quaternion)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Rotate__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Quaternion_
  commentId: M:Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
  name.vb: Rotate(Of T)(ITransformable3D(Of T), Quaternion)
  fullName: Vim.Math3d.Transformable3D.Rotate<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Quaternion)
  fullName.vb: Vim.Math3d.Transformable3D.Rotate(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Quaternion)
  nameWithType: Transformable3D.Rotate<T>(ITransformable3D<T>, Quaternion)
  nameWithType.vb: Transformable3D.Rotate(Of T)(ITransformable3D(Of T), Quaternion)
- uid: Vim.Math3d.Transformable3D.RotateAround*
  name: RotateAround
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateAround_
  commentId: Overload:Vim.Math3d.Transformable3D.RotateAround
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.RotateAround
  nameWithType: Transformable3D.RotateAround
- uid: Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
  name: RotateAround<T>(ITransformable3D<T>, Vector3, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateAround__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
  name.vb: RotateAround(Of T)(ITransformable3D(Of T), Vector3, Single)
  fullName: Vim.Math3d.Transformable3D.RotateAround<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateAround(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3, System.Single)
  nameWithType: Transformable3D.RotateAround<T>(ITransformable3D<T>, Vector3, Single)
  nameWithType.vb: Transformable3D.RotateAround(Of T)(ITransformable3D(Of T), Vector3, Single)
- uid: Vim.Math3d.Transformable3D.RotateX*
  name: RotateX
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateX_
  commentId: Overload:Vim.Math3d.Transformable3D.RotateX
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.RotateX
  nameWithType: Transformable3D.RotateX
- uid: Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: RotateX<T>(ITransformable3D<T>, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateX__1_Vim_Math3d_ITransformable3D___0__System_Single_
  commentId: M:Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name.vb: RotateX(Of T)(ITransformable3D(Of T), Single)
  fullName: Vim.Math3d.Transformable3D.RotateX<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateX(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  nameWithType: Transformable3D.RotateX<T>(ITransformable3D<T>, Single)
  nameWithType.vb: Transformable3D.RotateX(Of T)(ITransformable3D(Of T), Single)
- uid: Vim.Math3d.Transformable3D.RotateY*
  name: RotateY
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateY_
  commentId: Overload:Vim.Math3d.Transformable3D.RotateY
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.RotateY
  nameWithType: Transformable3D.RotateY
- uid: Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: RotateY<T>(ITransformable3D<T>, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateY__1_Vim_Math3d_ITransformable3D___0__System_Single_
  commentId: M:Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name.vb: RotateY(Of T)(ITransformable3D(Of T), Single)
  fullName: Vim.Math3d.Transformable3D.RotateY<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateY(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  nameWithType: Transformable3D.RotateY<T>(ITransformable3D<T>, Single)
  nameWithType.vb: Transformable3D.RotateY(Of T)(ITransformable3D(Of T), Single)
- uid: Vim.Math3d.Transformable3D.RotateZ*
  name: RotateZ
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateZ_
  commentId: Overload:Vim.Math3d.Transformable3D.RotateZ
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.RotateZ
  nameWithType: Transformable3D.RotateZ
- uid: Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: RotateZ<T>(ITransformable3D<T>, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_RotateZ__1_Vim_Math3d_ITransformable3D___0__System_Single_
  commentId: M:Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name.vb: RotateZ(Of T)(ITransformable3D(Of T), Single)
  fullName: Vim.Math3d.Transformable3D.RotateZ<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateZ(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  nameWithType: Transformable3D.RotateZ<T>(ITransformable3D<T>, Single)
  nameWithType.vb: Transformable3D.RotateZ(Of T)(ITransformable3D(Of T), Single)
- uid: Vim.Math3d.Transformable3D.Scale*
  name: Scale
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Scale_
  commentId: Overload:Vim.Math3d.Transformable3D.Scale
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.Scale
  nameWithType: Transformable3D.Scale
- uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: Scale<T>(ITransformable3D<T>, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Scale__1_Vim_Math3d_ITransformable3D___0__System_Single_
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name.vb: Scale(Of T)(ITransformable3D(Of T), Single)
  fullName: Vim.Math3d.Transformable3D.Scale<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  nameWithType: Transformable3D.Scale<T>(ITransformable3D<T>, Single)
  nameWithType.vb: Transformable3D.Scale(Of T)(ITransformable3D(Of T), Single)
- uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name: Scale<T>(ITransformable3D<T>, Single, Single, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Scale__1_Vim_Math3d_ITransformable3D___0__System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name.vb: Scale(Of T)(ITransformable3D(Of T), Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Scale<T>(Vim.Math3d.ITransformable3D<T>, System.Single, System.Single, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single, System.Single, System.Single)
  nameWithType: Transformable3D.Scale<T>(ITransformable3D<T>, Single, Single, Single)
  nameWithType.vb: Transformable3D.Scale(Of T)(ITransformable3D(Of T), Single, Single, Single)
- uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name: Scale<T>(ITransformable3D<T>, Vector3)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Scale__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name.vb: Scale(Of T)(ITransformable3D(Of T), Vector3)
  fullName: Vim.Math3d.Transformable3D.Scale<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3)
  nameWithType: Transformable3D.Scale<T>(ITransformable3D<T>, Vector3)
  nameWithType.vb: Transformable3D.Scale(Of T)(ITransformable3D(Of T), Vector3)
- uid: Vim.Math3d.Transformable3D.ScaleX*
  name: ScaleX
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_ScaleX_
  commentId: Overload:Vim.Math3d.Transformable3D.ScaleX
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.ScaleX
  nameWithType: Transformable3D.ScaleX
- uid: Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: ScaleX<T>(ITransformable3D<T>, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_ScaleX__1_Vim_Math3d_ITransformable3D___0__System_Single_
  commentId: M:Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name.vb: ScaleX(Of T)(ITransformable3D(Of T), Single)
  fullName: Vim.Math3d.Transformable3D.ScaleX<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleX(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  nameWithType: Transformable3D.ScaleX<T>(ITransformable3D<T>, Single)
  nameWithType.vb: Transformable3D.ScaleX(Of T)(ITransformable3D(Of T), Single)
- uid: Vim.Math3d.Transformable3D.ScaleY*
  name: ScaleY
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_ScaleY_
  commentId: Overload:Vim.Math3d.Transformable3D.ScaleY
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.ScaleY
  nameWithType: Transformable3D.ScaleY
- uid: Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: ScaleY<T>(ITransformable3D<T>, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_ScaleY__1_Vim_Math3d_ITransformable3D___0__System_Single_
  commentId: M:Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name.vb: ScaleY(Of T)(ITransformable3D(Of T), Single)
  fullName: Vim.Math3d.Transformable3D.ScaleY<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleY(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  nameWithType: Transformable3D.ScaleY<T>(ITransformable3D<T>, Single)
  nameWithType.vb: Transformable3D.ScaleY(Of T)(ITransformable3D(Of T), Single)
- uid: Vim.Math3d.Transformable3D.ScaleZ*
  name: ScaleZ
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_ScaleZ_
  commentId: Overload:Vim.Math3d.Transformable3D.ScaleZ
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.ScaleZ
  nameWithType: Transformable3D.ScaleZ
- uid: Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: ScaleZ<T>(ITransformable3D<T>, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_ScaleZ__1_Vim_Math3d_ITransformable3D___0__System_Single_
  commentId: M:Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name.vb: ScaleZ(Of T)(ITransformable3D(Of T), Single)
  fullName: Vim.Math3d.Transformable3D.ScaleZ<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleZ(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  nameWithType: Transformable3D.ScaleZ<T>(ITransformable3D<T>, Single)
  nameWithType.vb: Transformable3D.ScaleZ(Of T)(ITransformable3D(Of T), Single)
- uid: Vim.Math3d.Transformable3D.Transform*
  name: Transform
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Transform_
  commentId: Overload:Vim.Math3d.Transformable3D.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.Transform
  nameWithType: Transformable3D.Transform
- uid: Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
  name: Transform<T>(ITransformable3D<T>, Matrix4x4[])
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Transform__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Matrix4x4___
  commentId: M:Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
  name.vb: Transform(Of T)(ITransformable3D(Of T), Matrix4x4())
  fullName: Vim.Math3d.Transformable3D.Transform<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Matrix4x4[])
  fullName.vb: Vim.Math3d.Transformable3D.Transform(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Matrix4x4())
  nameWithType: Transformable3D.Transform<T>(ITransformable3D<T>, Matrix4x4[])
  nameWithType.vb: Transformable3D.Transform(Of T)(ITransformable3D(Of T), Matrix4x4())
- uid: Vim.Math3d.Transformable3D.Translate*
  name: Translate
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Translate_
  commentId: Overload:Vim.Math3d.Transformable3D.Translate
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.Translate
  nameWithType: Transformable3D.Translate
- uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name: Translate<T>(ITransformable3D<T>, Single, Single, Single)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Translate__1_Vim_Math3d_ITransformable3D___0__System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name.vb: Translate(Of T)(ITransformable3D(Of T), Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Translate<T>(Vim.Math3d.ITransformable3D<T>, System.Single, System.Single, System.Single)
  fullName.vb: Vim.Math3d.Transformable3D.Translate(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single, System.Single, System.Single)
  nameWithType: Transformable3D.Translate<T>(ITransformable3D<T>, Single, Single, Single)
  nameWithType.vb: Transformable3D.Translate(Of T)(ITransformable3D(Of T), Single, Single, Single)
- uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name: Translate<T>(ITransformable3D<T>, Vector3)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_Translate__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name.vb: Translate(Of T)(ITransformable3D(Of T), Vector3)
  fullName: Vim.Math3d.Transformable3D.Translate<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.Translate(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3)
  nameWithType: Transformable3D.Translate<T>(ITransformable3D<T>, Vector3)
  nameWithType.vb: Transformable3D.Translate(Of T)(ITransformable3D(Of T), Vector3)
- uid: Vim.Math3d.Transformable3D.TranslateRotateScale*
  name: TranslateRotateScale
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_TranslateRotateScale_
  commentId: Overload:Vim.Math3d.Transformable3D.TranslateRotateScale
  isSpec: "True"
  fullName: Vim.Math3d.Transformable3D.TranslateRotateScale
  nameWithType: Transformable3D.TranslateRotateScale
- uid: Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  name: TranslateRotateScale<T>(ITransformable3D<T>, Vector3, Quaternion, Vector3)
  href: api/Vim.Math3d.Transformable3D.html#Vim_Math3d_Transformable3D_TranslateRotateScale__1_Vim_Math3d_ITransformable3D___0__Vim_Math3d_Vector3_Vim_Math3d_Quaternion_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  name.vb: TranslateRotateScale(Of T)(ITransformable3D(Of T), Vector3, Quaternion, Vector3)
  fullName: Vim.Math3d.Transformable3D.TranslateRotateScale<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3, Vim.Math3d.Quaternion, Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.TranslateRotateScale(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3, Vim.Math3d.Quaternion, Vim.Math3d.Vector3)
  nameWithType: Transformable3D.TranslateRotateScale<T>(ITransformable3D<T>, Vector3, Quaternion, Vector3)
  nameWithType.vb: Transformable3D.TranslateRotateScale(Of T)(ITransformable3D(Of T), Vector3, Quaternion, Vector3)
- uid: Vim.Math3d.Triangle
  name: Triangle
  href: api/Vim.Math3d.Triangle.html
  commentId: T:Vim.Math3d.Triangle
  fullName: Vim.Math3d.Triangle
  nameWithType: Triangle
- uid: Vim.Math3d.Triangle.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Triangle((Vector3 a, Vector3 b, Vector3 c))
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle__ctor_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Triangle.#ctor(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Triangle((a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3))
  fullName: Vim.Math3d.Triangle.Triangle(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Triangle.Triangle(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Triangle.Triangle((Vector3 a, Vector3 b, Vector3 c))
  nameWithType.vb: Triangle.Triangle((a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3))
- uid: Vim.Math3d.Triangle.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Triangle(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle__ctor_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Triangle.#ctor(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Triangle.Triangle(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Triangle.Triangle(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Triangle.#ctor*
  name: Triangle
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle__ctor_
  commentId: Overload:Vim.Math3d.Triangle.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Triangle
  nameWithType: Triangle.Triangle
- uid: Vim.Math3d.Triangle.A
  name: A
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_A
  commentId: F:Vim.Math3d.Triangle.A
  fullName: Vim.Math3d.Triangle.A
  nameWithType: Triangle.A
- uid: Vim.Math3d.Triangle.AB
  name: AB
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_AB
  commentId: P:Vim.Math3d.Triangle.AB
  fullName: Vim.Math3d.Triangle.AB
  nameWithType: Triangle.AB
- uid: Vim.Math3d.Triangle.AB*
  name: AB
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_AB_
  commentId: Overload:Vim.Math3d.Triangle.AB
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.AB
  nameWithType: Triangle.AB
- uid: Vim.Math3d.Triangle.AC
  name: AC
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_AC
  commentId: P:Vim.Math3d.Triangle.AC
  fullName: Vim.Math3d.Triangle.AC
  nameWithType: Triangle.AC
- uid: Vim.Math3d.Triangle.AC*
  name: AC
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_AC_
  commentId: Overload:Vim.Math3d.Triangle.AC
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.AC
  nameWithType: Triangle.AC
- uid: Vim.Math3d.Triangle.AlmostEquals(Vim.Math3d.Triangle,System.Single)
  name: AlmostEquals(Triangle, Single)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_AlmostEquals_Vim_Math3d_Triangle_System_Single_
  commentId: M:Vim.Math3d.Triangle.AlmostEquals(Vim.Math3d.Triangle,System.Single)
  fullName: Vim.Math3d.Triangle.AlmostEquals(Vim.Math3d.Triangle, System.Single)
  nameWithType: Triangle.AlmostEquals(Triangle, Single)
- uid: Vim.Math3d.Triangle.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_AlmostEquals_
  commentId: Overload:Vim.Math3d.Triangle.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.AlmostEquals
  nameWithType: Triangle.AlmostEquals
- uid: Vim.Math3d.Triangle.Area
  name: Area
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Area
  commentId: P:Vim.Math3d.Triangle.Area
  fullName: Vim.Math3d.Triangle.Area
  nameWithType: Triangle.Area
- uid: Vim.Math3d.Triangle.Area*
  name: Area
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Area_
  commentId: Overload:Vim.Math3d.Triangle.Area
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Area
  nameWithType: Triangle.Area
- uid: Vim.Math3d.Triangle.B
  name: B
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_B
  commentId: F:Vim.Math3d.Triangle.B
  fullName: Vim.Math3d.Triangle.B
  nameWithType: Triangle.B
- uid: Vim.Math3d.Triangle.BA
  name: BA
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BA
  commentId: P:Vim.Math3d.Triangle.BA
  fullName: Vim.Math3d.Triangle.BA
  nameWithType: Triangle.BA
- uid: Vim.Math3d.Triangle.BA*
  name: BA
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BA_
  commentId: Overload:Vim.Math3d.Triangle.BA
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.BA
  nameWithType: Triangle.BA
- uid: Vim.Math3d.Triangle.BC
  name: BC
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BC
  commentId: P:Vim.Math3d.Triangle.BC
  fullName: Vim.Math3d.Triangle.BC
  nameWithType: Triangle.BC
- uid: Vim.Math3d.Triangle.BC*
  name: BC
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BC_
  commentId: Overload:Vim.Math3d.Triangle.BC
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.BC
  nameWithType: Triangle.BC
- uid: Vim.Math3d.Triangle.Binormal
  name: Binormal
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Binormal
  commentId: P:Vim.Math3d.Triangle.Binormal
  fullName: Vim.Math3d.Triangle.Binormal
  nameWithType: Triangle.Binormal
- uid: Vim.Math3d.Triangle.Binormal*
  name: Binormal
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Binormal_
  commentId: Overload:Vim.Math3d.Triangle.Binormal
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Binormal
  nameWithType: Triangle.Binormal
- uid: Vim.Math3d.Triangle.BoundingBox
  name: BoundingBox
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BoundingBox
  commentId: P:Vim.Math3d.Triangle.BoundingBox
  fullName: Vim.Math3d.Triangle.BoundingBox
  nameWithType: Triangle.BoundingBox
- uid: Vim.Math3d.Triangle.BoundingBox*
  name: BoundingBox
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BoundingBox_
  commentId: Overload:Vim.Math3d.Triangle.BoundingBox
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.BoundingBox
  nameWithType: Triangle.BoundingBox
- uid: Vim.Math3d.Triangle.BoundingSphere
  name: BoundingSphere
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BoundingSphere
  commentId: P:Vim.Math3d.Triangle.BoundingSphere
  fullName: Vim.Math3d.Triangle.BoundingSphere
  nameWithType: Triangle.BoundingSphere
- uid: Vim.Math3d.Triangle.BoundingSphere*
  name: BoundingSphere
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_BoundingSphere_
  commentId: Overload:Vim.Math3d.Triangle.BoundingSphere
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.BoundingSphere
  nameWithType: Triangle.BoundingSphere
- uid: Vim.Math3d.Triangle.C
  name: C
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_C
  commentId: F:Vim.Math3d.Triangle.C
  fullName: Vim.Math3d.Triangle.C
  nameWithType: Triangle.C
- uid: Vim.Math3d.Triangle.CA
  name: CA
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_CA
  commentId: P:Vim.Math3d.Triangle.CA
  fullName: Vim.Math3d.Triangle.CA
  nameWithType: Triangle.CA
- uid: Vim.Math3d.Triangle.CA*
  name: CA
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_CA_
  commentId: Overload:Vim.Math3d.Triangle.CA
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.CA
  nameWithType: Triangle.CA
- uid: Vim.Math3d.Triangle.CB
  name: CB
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_CB
  commentId: P:Vim.Math3d.Triangle.CB
  fullName: Vim.Math3d.Triangle.CB
  nameWithType: Triangle.CB
- uid: Vim.Math3d.Triangle.CB*
  name: CB
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_CB_
  commentId: Overload:Vim.Math3d.Triangle.CB
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.CB
  nameWithType: Triangle.CB
- uid: Vim.Math3d.Triangle.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Create((Vector3 a, Vector3 b, Vector3 c))
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Create_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Triangle.Create(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Create((a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3))
  fullName: Vim.Math3d.Triangle.Create(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Triangle.Create(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Triangle.Create((Vector3 a, Vector3 b, Vector3 c))
  nameWithType.vb: Triangle.Create((a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3))
- uid: Vim.Math3d.Triangle.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Create(Vector3, Vector3, Vector3)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Create_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Triangle.Create(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Triangle.Create(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Triangle.Create(Vector3, Vector3, Vector3)
- uid: Vim.Math3d.Triangle.Create*
  name: Create
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Create_
  commentId: Overload:Vim.Math3d.Triangle.Create
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Create
  nameWithType: Triangle.Create
- uid: Vim.Math3d.Triangle.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name: Deconstruct(out Vector3, out Vector3, out Vector3)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Deconstruct_Vim_Math3d_Vector3__Vim_Math3d_Vector3__Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Triangle.Deconstruct(Vim.Math3d.Vector3@,Vim.Math3d.Vector3@,Vim.Math3d.Vector3@)
  name.vb: Deconstruct(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  fullName: Vim.Math3d.Triangle.Deconstruct(out Vim.Math3d.Vector3, out Vim.Math3d.Vector3, out Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Triangle.Deconstruct(ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3, ByRef Vim.Math3d.Vector3)
  nameWithType: Triangle.Deconstruct(out Vector3, out Vector3, out Vector3)
  nameWithType.vb: Triangle.Deconstruct(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: Vim.Math3d.Triangle.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Deconstruct_
  commentId: Overload:Vim.Math3d.Triangle.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Deconstruct
  nameWithType: Triangle.Deconstruct
- uid: Vim.Math3d.Triangle.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Equals_System_Object_
  commentId: M:Vim.Math3d.Triangle.Equals(System.Object)
  fullName: Vim.Math3d.Triangle.Equals(System.Object)
  nameWithType: Triangle.Equals(Object)
- uid: Vim.Math3d.Triangle.Equals(Vim.Math3d.Triangle)
  name: Equals(Triangle)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Equals_Vim_Math3d_Triangle_
  commentId: M:Vim.Math3d.Triangle.Equals(Vim.Math3d.Triangle)
  fullName: Vim.Math3d.Triangle.Equals(Vim.Math3d.Triangle)
  nameWithType: Triangle.Equals(Triangle)
- uid: Vim.Math3d.Triangle.Equals*
  name: Equals
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Equals_
  commentId: Overload:Vim.Math3d.Triangle.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Equals
  nameWithType: Triangle.Equals
- uid: Vim.Math3d.Triangle.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_GetHashCode
  commentId: M:Vim.Math3d.Triangle.GetHashCode
  fullName: Vim.Math3d.Triangle.GetHashCode()
  nameWithType: Triangle.GetHashCode()
- uid: Vim.Math3d.Triangle.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_GetHashCode_
  commentId: Overload:Vim.Math3d.Triangle.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.GetHashCode
  nameWithType: Triangle.GetHashCode
- uid: Vim.Math3d.Triangle.GetPoint(System.Int32)
  name: GetPoint(Int32)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_GetPoint_System_Int32_
  commentId: M:Vim.Math3d.Triangle.GetPoint(System.Int32)
  fullName: Vim.Math3d.Triangle.GetPoint(System.Int32)
  nameWithType: Triangle.GetPoint(Int32)
- uid: Vim.Math3d.Triangle.GetPoint*
  name: GetPoint
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_GetPoint_
  commentId: Overload:Vim.Math3d.Triangle.GetPoint
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.GetPoint
  nameWithType: Triangle.GetPoint
- uid: Vim.Math3d.Triangle.HasArea
  name: HasArea
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_HasArea
  commentId: P:Vim.Math3d.Triangle.HasArea
  fullName: Vim.Math3d.Triangle.HasArea
  nameWithType: Triangle.HasArea
- uid: Vim.Math3d.Triangle.HasArea*
  name: HasArea
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_HasArea_
  commentId: Overload:Vim.Math3d.Triangle.HasArea
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.HasArea
  nameWithType: Triangle.HasArea
- uid: Vim.Math3d.Triangle.IsSliver(System.Single)
  name: IsSliver(Single)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_IsSliver_System_Single_
  commentId: M:Vim.Math3d.Triangle.IsSliver(System.Single)
  fullName: Vim.Math3d.Triangle.IsSliver(System.Single)
  nameWithType: Triangle.IsSliver(Single)
- uid: Vim.Math3d.Triangle.IsSliver*
  name: IsSliver
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_IsSliver_
  commentId: Overload:Vim.Math3d.Triangle.IsSliver
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.IsSliver
  nameWithType: Triangle.IsSliver
- uid: Vim.Math3d.Triangle.LengthA
  name: LengthA
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_LengthA
  commentId: P:Vim.Math3d.Triangle.LengthA
  fullName: Vim.Math3d.Triangle.LengthA
  nameWithType: Triangle.LengthA
- uid: Vim.Math3d.Triangle.LengthA*
  name: LengthA
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_LengthA_
  commentId: Overload:Vim.Math3d.Triangle.LengthA
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.LengthA
  nameWithType: Triangle.LengthA
- uid: Vim.Math3d.Triangle.LengthB
  name: LengthB
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_LengthB
  commentId: P:Vim.Math3d.Triangle.LengthB
  fullName: Vim.Math3d.Triangle.LengthB
  nameWithType: Triangle.LengthB
- uid: Vim.Math3d.Triangle.LengthB*
  name: LengthB
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_LengthB_
  commentId: Overload:Vim.Math3d.Triangle.LengthB
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.LengthB
  nameWithType: Triangle.LengthB
- uid: Vim.Math3d.Triangle.LengthC
  name: LengthC
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_LengthC
  commentId: P:Vim.Math3d.Triangle.LengthC
  fullName: Vim.Math3d.Triangle.LengthC
  nameWithType: Triangle.LengthC
- uid: Vim.Math3d.Triangle.LengthC*
  name: LengthC
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_LengthC_
  commentId: Overload:Vim.Math3d.Triangle.LengthC
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.LengthC
  nameWithType: Triangle.LengthC
- uid: Vim.Math3d.Triangle.Map(System.Func{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name: Map(Func<Vector3, Vector3>)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Map_System_Func_Vim_Math3d_Vector3_Vim_Math3d_Vector3__
  commentId: M:Vim.Math3d.Triangle.Map(System.Func{Vim.Math3d.Vector3,Vim.Math3d.Vector3})
  name.vb: Map(Func(Of Vector3, Vector3))
  fullName: Vim.Math3d.Triangle.Map(System.Func<Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Triangle.Map(System.Func(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Triangle.Map(Func<Vector3, Vector3>)
  nameWithType.vb: Triangle.Map(Func(Of Vector3, Vector3))
- uid: Vim.Math3d.Triangle.Map*
  name: Map
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Map_
  commentId: Overload:Vim.Math3d.Triangle.Map
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Map
  nameWithType: Triangle.Map
- uid: Vim.Math3d.Triangle.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_MaxValue
  commentId: F:Vim.Math3d.Triangle.MaxValue
  fullName: Vim.Math3d.Triangle.MaxValue
  nameWithType: Triangle.MaxValue
- uid: Vim.Math3d.Triangle.MidPoint
  name: MidPoint
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_MidPoint
  commentId: P:Vim.Math3d.Triangle.MidPoint
  fullName: Vim.Math3d.Triangle.MidPoint
  nameWithType: Triangle.MidPoint
- uid: Vim.Math3d.Triangle.MidPoint*
  name: MidPoint
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_MidPoint_
  commentId: Overload:Vim.Math3d.Triangle.MidPoint
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.MidPoint
  nameWithType: Triangle.MidPoint
- uid: Vim.Math3d.Triangle.MinValue
  name: MinValue
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_MinValue
  commentId: F:Vim.Math3d.Triangle.MinValue
  fullName: Vim.Math3d.Triangle.MinValue
  nameWithType: Triangle.MinValue
- uid: Vim.Math3d.Triangle.Normal
  name: Normal
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Normal
  commentId: P:Vim.Math3d.Triangle.Normal
  fullName: Vim.Math3d.Triangle.Normal
  nameWithType: Triangle.Normal
- uid: Vim.Math3d.Triangle.Normal*
  name: Normal
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Normal_
  commentId: Overload:Vim.Math3d.Triangle.Normal
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Normal
  nameWithType: Triangle.Normal
- uid: Vim.Math3d.Triangle.NormalDirection
  name: NormalDirection
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_NormalDirection
  commentId: P:Vim.Math3d.Triangle.NormalDirection
  fullName: Vim.Math3d.Triangle.NormalDirection
  nameWithType: Triangle.NormalDirection
- uid: Vim.Math3d.Triangle.NormalDirection*
  name: NormalDirection
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_NormalDirection_
  commentId: Overload:Vim.Math3d.Triangle.NormalDirection
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.NormalDirection
  nameWithType: Triangle.NormalDirection
- uid: Vim.Math3d.Triangle.NumPoints
  name: NumPoints
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_NumPoints
  commentId: P:Vim.Math3d.Triangle.NumPoints
  fullName: Vim.Math3d.Triangle.NumPoints
  nameWithType: Triangle.NumPoints
- uid: Vim.Math3d.Triangle.NumPoints*
  name: NumPoints
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_NumPoints_
  commentId: Overload:Vim.Math3d.Triangle.NumPoints
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.NumPoints
  nameWithType: Triangle.NumPoints
- uid: Vim.Math3d.Triangle.op_Equality(Vim.Math3d.Triangle,Vim.Math3d.Triangle)
  name: Equality(Triangle, Triangle)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_op_Equality_Vim_Math3d_Triangle_Vim_Math3d_Triangle_
  commentId: M:Vim.Math3d.Triangle.op_Equality(Vim.Math3d.Triangle,Vim.Math3d.Triangle)
  fullName: Vim.Math3d.Triangle.Equality(Vim.Math3d.Triangle, Vim.Math3d.Triangle)
  nameWithType: Triangle.Equality(Triangle, Triangle)
- uid: Vim.Math3d.Triangle.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_op_Equality_
  commentId: Overload:Vim.Math3d.Triangle.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Equality
  nameWithType: Triangle.Equality
- uid: Vim.Math3d.Triangle.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Triangle
  name: Implicit((Vector3 a, Vector3 b, Vector3 c) to Triangle)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_op_Implicit_System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3___Vim_Math3d_Triangle
  commentId: M:Vim.Math3d.Triangle.op_Implicit(System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3})~Vim.Math3d.Triangle
  name.vb: Widening((a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3) to Triangle)
  fullName: Vim.Math3d.Triangle.Implicit(System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3> to Vim.Math3d.Triangle)
  fullName.vb: Vim.Math3d.Triangle.Widening(System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3) to Vim.Math3d.Triangle)
  nameWithType: Triangle.Implicit((Vector3 a, Vector3 b, Vector3 c) to Triangle)
  nameWithType.vb: Triangle.Widening((a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3) to Triangle)
- uid: Vim.Math3d.Triangle.op_Implicit(Vim.Math3d.Triangle)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name: Implicit(Triangle to (Vector3 a, Vector3 b, Vector3 c))
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_op_Implicit_Vim_Math3d_Triangle__System_ValueTuple_Vim_Math3d_Vector3_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Triangle.op_Implicit(Vim.Math3d.Triangle)~System.ValueTuple{Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3}
  name.vb: Widening(Triangle to (a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3))
  fullName: Vim.Math3d.Triangle.Implicit(Vim.Math3d.Triangle to System.ValueTuple<Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3>)
  fullName.vb: Vim.Math3d.Triangle.Widening(Vim.Math3d.Triangle to System.ValueTuple(Of Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3))
  nameWithType: Triangle.Implicit(Triangle to (Vector3 a, Vector3 b, Vector3 c))
  nameWithType.vb: Triangle.Widening(Triangle to (a As Vector3, b As Vector3, c As Vector3)(Of Vector3, Vector3, Vector3))
- uid: Vim.Math3d.Triangle.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_op_Implicit_
  commentId: Overload:Vim.Math3d.Triangle.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Triangle.Implicit
  fullName.vb: Vim.Math3d.Triangle.Widening
  nameWithType: Triangle.Implicit
  nameWithType.vb: Triangle.Widening
- uid: Vim.Math3d.Triangle.op_Inequality(Vim.Math3d.Triangle,Vim.Math3d.Triangle)
  name: Inequality(Triangle, Triangle)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_op_Inequality_Vim_Math3d_Triangle_Vim_Math3d_Triangle_
  commentId: M:Vim.Math3d.Triangle.op_Inequality(Vim.Math3d.Triangle,Vim.Math3d.Triangle)
  fullName: Vim.Math3d.Triangle.Inequality(Vim.Math3d.Triangle, Vim.Math3d.Triangle)
  nameWithType: Triangle.Inequality(Triangle, Triangle)
- uid: Vim.Math3d.Triangle.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_op_Inequality_
  commentId: Overload:Vim.Math3d.Triangle.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Inequality
  nameWithType: Triangle.Inequality
- uid: Vim.Math3d.Triangle.Perimeter
  name: Perimeter
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Perimeter
  commentId: P:Vim.Math3d.Triangle.Perimeter
  fullName: Vim.Math3d.Triangle.Perimeter
  nameWithType: Triangle.Perimeter
- uid: Vim.Math3d.Triangle.Perimeter*
  name: Perimeter
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Perimeter_
  commentId: Overload:Vim.Math3d.Triangle.Perimeter
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Perimeter
  nameWithType: Triangle.Perimeter
- uid: Vim.Math3d.Triangle.SafeNormal
  name: SafeNormal
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SafeNormal
  commentId: P:Vim.Math3d.Triangle.SafeNormal
  fullName: Vim.Math3d.Triangle.SafeNormal
  nameWithType: Triangle.SafeNormal
- uid: Vim.Math3d.Triangle.SafeNormal*
  name: SafeNormal
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SafeNormal_
  commentId: Overload:Vim.Math3d.Triangle.SafeNormal
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.SafeNormal
  nameWithType: Triangle.SafeNormal
- uid: Vim.Math3d.Triangle.SetA(Vim.Math3d.Vector3)
  name: SetA(Vector3)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SetA_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Triangle.SetA(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Triangle.SetA(Vim.Math3d.Vector3)
  nameWithType: Triangle.SetA(Vector3)
- uid: Vim.Math3d.Triangle.SetA*
  name: SetA
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SetA_
  commentId: Overload:Vim.Math3d.Triangle.SetA
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.SetA
  nameWithType: Triangle.SetA
- uid: Vim.Math3d.Triangle.SetB(Vim.Math3d.Vector3)
  name: SetB(Vector3)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SetB_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Triangle.SetB(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Triangle.SetB(Vim.Math3d.Vector3)
  nameWithType: Triangle.SetB(Vector3)
- uid: Vim.Math3d.Triangle.SetB*
  name: SetB
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SetB_
  commentId: Overload:Vim.Math3d.Triangle.SetB
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.SetB
  nameWithType: Triangle.SetB
- uid: Vim.Math3d.Triangle.SetC(Vim.Math3d.Vector3)
  name: SetC(Vector3)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SetC_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Triangle.SetC(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Triangle.SetC(Vim.Math3d.Vector3)
  nameWithType: Triangle.SetC(Vector3)
- uid: Vim.Math3d.Triangle.SetC*
  name: SetC
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_SetC_
  commentId: Overload:Vim.Math3d.Triangle.SetC
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.SetC
  nameWithType: Triangle.SetC
- uid: Vim.Math3d.Triangle.Side(System.Int32)
  name: Side(Int32)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Side_System_Int32_
  commentId: M:Vim.Math3d.Triangle.Side(System.Int32)
  fullName: Vim.Math3d.Triangle.Side(System.Int32)
  nameWithType: Triangle.Side(Int32)
- uid: Vim.Math3d.Triangle.Side*
  name: Side
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Side_
  commentId: Overload:Vim.Math3d.Triangle.Side
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Side
  nameWithType: Triangle.Side
- uid: Vim.Math3d.Triangle.Tangent
  name: Tangent
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Tangent
  commentId: P:Vim.Math3d.Triangle.Tangent
  fullName: Vim.Math3d.Triangle.Tangent
  nameWithType: Triangle.Tangent
- uid: Vim.Math3d.Triangle.Tangent*
  name: Tangent
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Tangent_
  commentId: Overload:Vim.Math3d.Triangle.Tangent
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Tangent
  nameWithType: Triangle.Tangent
- uid: Vim.Math3d.Triangle.ToString
  name: ToString()
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_ToString
  commentId: M:Vim.Math3d.Triangle.ToString
  fullName: Vim.Math3d.Triangle.ToString()
  nameWithType: Triangle.ToString()
- uid: Vim.Math3d.Triangle.ToString*
  name: ToString
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_ToString_
  commentId: Overload:Vim.Math3d.Triangle.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.ToString
  nameWithType: Triangle.ToString
- uid: Vim.Math3d.Triangle.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Triangle.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Triangle.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Triangle.Transform(Matrix4x4)
- uid: Vim.Math3d.Triangle.Transform*
  name: Transform
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Transform_
  commentId: Overload:Vim.Math3d.Triangle.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Triangle.Transform
  nameWithType: Triangle.Transform
- uid: Vim.Math3d.Triangle.Zero
  name: Zero
  href: api/Vim.Math3d.Triangle.html#Vim_Math3d_Triangle_Zero
  commentId: F:Vim.Math3d.Triangle.Zero
  fullName: Vim.Math3d.Triangle.Zero
  nameWithType: Triangle.Zero
- uid: Vim.Math3d.Triangle2D
  name: Triangle2D
  href: api/Vim.Math3d.Triangle2D.html
  commentId: T:Vim.Math3d.Triangle2D
  fullName: Vim.Math3d.Triangle2D
  nameWithType: Triangle2D
- uid: Vim.Math3d.Triangle2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: Triangle2D((Vector2 a, Vector2 b, Vector2 c))
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D__ctor_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Triangle2D.#ctor(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: Triangle2D((a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2))
  fullName: Vim.Math3d.Triangle2D.Triangle2D(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Triangle2D.Triangle2D(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Triangle2D.Triangle2D((Vector2 a, Vector2 b, Vector2 c))
  nameWithType.vb: Triangle2D.Triangle2D((a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2))
- uid: Vim.Math3d.Triangle2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Triangle2D(Vector2, Vector2, Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D__ctor_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.#ctor(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Triangle2D.Triangle2D(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Triangle2D.Triangle2D(Vector2, Vector2, Vector2)
- uid: Vim.Math3d.Triangle2D.#ctor*
  name: Triangle2D
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D__ctor_
  commentId: Overload:Vim.Math3d.Triangle2D.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Triangle2D
  nameWithType: Triangle2D.Triangle2D
- uid: Vim.Math3d.Triangle2D.A
  name: A
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_A
  commentId: F:Vim.Math3d.Triangle2D.A
  fullName: Vim.Math3d.Triangle2D.A
  nameWithType: Triangle2D.A
- uid: Vim.Math3d.Triangle2D.AlmostEquals(Vim.Math3d.Triangle2D,System.Single)
  name: AlmostEquals(Triangle2D, Single)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_AlmostEquals_Vim_Math3d_Triangle2D_System_Single_
  commentId: M:Vim.Math3d.Triangle2D.AlmostEquals(Vim.Math3d.Triangle2D,System.Single)
  fullName: Vim.Math3d.Triangle2D.AlmostEquals(Vim.Math3d.Triangle2D, System.Single)
  nameWithType: Triangle2D.AlmostEquals(Triangle2D, Single)
- uid: Vim.Math3d.Triangle2D.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_AlmostEquals_
  commentId: Overload:Vim.Math3d.Triangle2D.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.AlmostEquals
  nameWithType: Triangle2D.AlmostEquals
- uid: Vim.Math3d.Triangle2D.Area
  name: Area
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Area
  commentId: P:Vim.Math3d.Triangle2D.Area
  fullName: Vim.Math3d.Triangle2D.Area
  nameWithType: Triangle2D.Area
- uid: Vim.Math3d.Triangle2D.Area*
  name: Area
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Area_
  commentId: Overload:Vim.Math3d.Triangle2D.Area
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Area
  nameWithType: Triangle2D.Area
- uid: Vim.Math3d.Triangle2D.B
  name: B
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_B
  commentId: F:Vim.Math3d.Triangle2D.B
  fullName: Vim.Math3d.Triangle2D.B
  nameWithType: Triangle2D.B
- uid: Vim.Math3d.Triangle2D.C
  name: C
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_C
  commentId: F:Vim.Math3d.Triangle2D.C
  fullName: Vim.Math3d.Triangle2D.C
  nameWithType: Triangle2D.C
- uid: Vim.Math3d.Triangle2D.Contains(Vim.Math3d.Vector2)
  name: Contains(Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Contains_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.Contains(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Triangle2D.Contains(Vim.Math3d.Vector2)
  nameWithType: Triangle2D.Contains(Vector2)
- uid: Vim.Math3d.Triangle2D.Contains*
  name: Contains
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Contains_
  commentId: Overload:Vim.Math3d.Triangle2D.Contains
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Contains
  nameWithType: Triangle2D.Contains
- uid: Vim.Math3d.Triangle2D.Count
  name: Count
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Count
  commentId: P:Vim.Math3d.Triangle2D.Count
  fullName: Vim.Math3d.Triangle2D.Count
  nameWithType: Triangle2D.Count
- uid: Vim.Math3d.Triangle2D.Count*
  name: Count
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Count_
  commentId: Overload:Vim.Math3d.Triangle2D.Count
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Count
  nameWithType: Triangle2D.Count
- uid: Vim.Math3d.Triangle2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name: Create((Vector2 a, Vector2 b, Vector2 c))
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Create_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Triangle2D.Create(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})
  name.vb: Create((a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2))
  fullName: Vim.Math3d.Triangle2D.Create(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Triangle2D.Create(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Triangle2D.Create((Vector2 a, Vector2 b, Vector2 c))
  nameWithType.vb: Triangle2D.Create((a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2))
- uid: Vim.Math3d.Triangle2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Create(Vector2, Vector2, Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Create_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.Create(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Triangle2D.Create(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Triangle2D.Create(Vector2, Vector2, Vector2)
- uid: Vim.Math3d.Triangle2D.Create*
  name: Create
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Create_
  commentId: Overload:Vim.Math3d.Triangle2D.Create
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Create
  nameWithType: Triangle2D.Create
- uid: Vim.Math3d.Triangle2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name: Deconstruct(out Vector2, out Vector2, out Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Deconstruct_Vim_Math3d_Vector2__Vim_Math3d_Vector2__Vim_Math3d_Vector2__
  commentId: M:Vim.Math3d.Triangle2D.Deconstruct(Vim.Math3d.Vector2@,Vim.Math3d.Vector2@,Vim.Math3d.Vector2@)
  name.vb: Deconstruct(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  fullName: Vim.Math3d.Triangle2D.Deconstruct(out Vim.Math3d.Vector2, out Vim.Math3d.Vector2, out Vim.Math3d.Vector2)
  fullName.vb: Vim.Math3d.Triangle2D.Deconstruct(ByRef Vim.Math3d.Vector2, ByRef Vim.Math3d.Vector2, ByRef Vim.Math3d.Vector2)
  nameWithType: Triangle2D.Deconstruct(out Vector2, out Vector2, out Vector2)
  nameWithType.vb: Triangle2D.Deconstruct(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: Vim.Math3d.Triangle2D.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Deconstruct_
  commentId: Overload:Vim.Math3d.Triangle2D.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Deconstruct
  nameWithType: Triangle2D.Deconstruct
- uid: Vim.Math3d.Triangle2D.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Equals_System_Object_
  commentId: M:Vim.Math3d.Triangle2D.Equals(System.Object)
  fullName: Vim.Math3d.Triangle2D.Equals(System.Object)
  nameWithType: Triangle2D.Equals(Object)
- uid: Vim.Math3d.Triangle2D.Equals(Vim.Math3d.Triangle2D)
  name: Equals(Triangle2D)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Equals_Vim_Math3d_Triangle2D_
  commentId: M:Vim.Math3d.Triangle2D.Equals(Vim.Math3d.Triangle2D)
  fullName: Vim.Math3d.Triangle2D.Equals(Vim.Math3d.Triangle2D)
  nameWithType: Triangle2D.Equals(Triangle2D)
- uid: Vim.Math3d.Triangle2D.Equals*
  name: Equals
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Equals_
  commentId: Overload:Vim.Math3d.Triangle2D.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Equals
  nameWithType: Triangle2D.Equals
- uid: Vim.Math3d.Triangle2D.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_GetHashCode
  commentId: M:Vim.Math3d.Triangle2D.GetHashCode
  fullName: Vim.Math3d.Triangle2D.GetHashCode()
  nameWithType: Triangle2D.GetHashCode()
- uid: Vim.Math3d.Triangle2D.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_GetHashCode_
  commentId: Overload:Vim.Math3d.Triangle2D.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.GetHashCode
  nameWithType: Triangle2D.GetHashCode
- uid: Vim.Math3d.Triangle2D.Item(System.Int32)
  name: Item[Int32]
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Item_System_Int32_
  commentId: P:Vim.Math3d.Triangle2D.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Vim.Math3d.Triangle2D.Item[System.Int32]
  fullName.vb: Vim.Math3d.Triangle2D.Item(System.Int32)
  nameWithType: Triangle2D.Item[Int32]
  nameWithType.vb: Triangle2D.Item(Int32)
- uid: Vim.Math3d.Triangle2D.Item*
  name: Item
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Item_
  commentId: Overload:Vim.Math3d.Triangle2D.Item
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Item
  nameWithType: Triangle2D.Item
- uid: Vim.Math3d.Triangle2D.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_MaxValue
  commentId: F:Vim.Math3d.Triangle2D.MaxValue
  fullName: Vim.Math3d.Triangle2D.MaxValue
  nameWithType: Triangle2D.MaxValue
- uid: Vim.Math3d.Triangle2D.MinValue
  name: MinValue
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_MinValue
  commentId: F:Vim.Math3d.Triangle2D.MinValue
  fullName: Vim.Math3d.Triangle2D.MinValue
  nameWithType: Triangle2D.MinValue
- uid: Vim.Math3d.Triangle2D.OnLeftSideOfLine(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: OnLeftSideOfLine(Vector2, Vector2, Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_OnLeftSideOfLine_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.OnLeftSideOfLine(Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Triangle2D.OnLeftSideOfLine(Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Triangle2D.OnLeftSideOfLine(Vector2, Vector2, Vector2)
- uid: Vim.Math3d.Triangle2D.OnLeftSideOfLine*
  name: OnLeftSideOfLine
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_OnLeftSideOfLine_
  commentId: Overload:Vim.Math3d.Triangle2D.OnLeftSideOfLine
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.OnLeftSideOfLine
  nameWithType: Triangle2D.OnLeftSideOfLine
- uid: Vim.Math3d.Triangle2D.op_Equality(Vim.Math3d.Triangle2D,Vim.Math3d.Triangle2D)
  name: Equality(Triangle2D, Triangle2D)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_op_Equality_Vim_Math3d_Triangle2D_Vim_Math3d_Triangle2D_
  commentId: M:Vim.Math3d.Triangle2D.op_Equality(Vim.Math3d.Triangle2D,Vim.Math3d.Triangle2D)
  fullName: Vim.Math3d.Triangle2D.Equality(Vim.Math3d.Triangle2D, Vim.Math3d.Triangle2D)
  nameWithType: Triangle2D.Equality(Triangle2D, Triangle2D)
- uid: Vim.Math3d.Triangle2D.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_op_Equality_
  commentId: Overload:Vim.Math3d.Triangle2D.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Equality
  nameWithType: Triangle2D.Equality
- uid: Vim.Math3d.Triangle2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.Triangle2D
  name: Implicit((Vector2 a, Vector2 b, Vector2 c) to Triangle2D)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_op_Implicit_System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2___Vim_Math3d_Triangle2D
  commentId: M:Vim.Math3d.Triangle2D.op_Implicit(System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2})~Vim.Math3d.Triangle2D
  name.vb: Widening((a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2) to Triangle2D)
  fullName: Vim.Math3d.Triangle2D.Implicit(System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2> to Vim.Math3d.Triangle2D)
  fullName.vb: Vim.Math3d.Triangle2D.Widening(System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2) to Vim.Math3d.Triangle2D)
  nameWithType: Triangle2D.Implicit((Vector2 a, Vector2 b, Vector2 c) to Triangle2D)
  nameWithType.vb: Triangle2D.Widening((a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2) to Triangle2D)
- uid: Vim.Math3d.Triangle2D.op_Implicit(Vim.Math3d.Triangle2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name: Implicit(Triangle2D to (Vector2 a, Vector2 b, Vector2 c))
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_op_Implicit_Vim_Math3d_Triangle2D__System_ValueTuple_Vim_Math3d_Vector2_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.op_Implicit(Vim.Math3d.Triangle2D)~System.ValueTuple{Vim.Math3d.Vector2,Vim.Math3d.Vector2,Vim.Math3d.Vector2}
  name.vb: Widening(Triangle2D to (a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2))
  fullName: Vim.Math3d.Triangle2D.Implicit(Vim.Math3d.Triangle2D to System.ValueTuple<Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2>)
  fullName.vb: Vim.Math3d.Triangle2D.Widening(Vim.Math3d.Triangle2D to System.ValueTuple(Of Vim.Math3d.Vector2, Vim.Math3d.Vector2, Vim.Math3d.Vector2))
  nameWithType: Triangle2D.Implicit(Triangle2D to (Vector2 a, Vector2 b, Vector2 c))
  nameWithType.vb: Triangle2D.Widening(Triangle2D to (a As Vector2, b As Vector2, c As Vector2)(Of Vector2, Vector2, Vector2))
- uid: Vim.Math3d.Triangle2D.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_op_Implicit_
  commentId: Overload:Vim.Math3d.Triangle2D.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Triangle2D.Implicit
  fullName.vb: Vim.Math3d.Triangle2D.Widening
  nameWithType: Triangle2D.Implicit
  nameWithType.vb: Triangle2D.Widening
- uid: Vim.Math3d.Triangle2D.op_Inequality(Vim.Math3d.Triangle2D,Vim.Math3d.Triangle2D)
  name: Inequality(Triangle2D, Triangle2D)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_op_Inequality_Vim_Math3d_Triangle2D_Vim_Math3d_Triangle2D_
  commentId: M:Vim.Math3d.Triangle2D.op_Inequality(Vim.Math3d.Triangle2D,Vim.Math3d.Triangle2D)
  fullName: Vim.Math3d.Triangle2D.Inequality(Vim.Math3d.Triangle2D, Vim.Math3d.Triangle2D)
  nameWithType: Triangle2D.Inequality(Triangle2D, Triangle2D)
- uid: Vim.Math3d.Triangle2D.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_op_Inequality_
  commentId: Overload:Vim.Math3d.Triangle2D.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.Inequality
  nameWithType: Triangle2D.Inequality
- uid: Vim.Math3d.Triangle2D.SetA(Vim.Math3d.Vector2)
  name: SetA(Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_SetA_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.SetA(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Triangle2D.SetA(Vim.Math3d.Vector2)
  nameWithType: Triangle2D.SetA(Vector2)
- uid: Vim.Math3d.Triangle2D.SetA*
  name: SetA
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_SetA_
  commentId: Overload:Vim.Math3d.Triangle2D.SetA
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.SetA
  nameWithType: Triangle2D.SetA
- uid: Vim.Math3d.Triangle2D.SetB(Vim.Math3d.Vector2)
  name: SetB(Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_SetB_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.SetB(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Triangle2D.SetB(Vim.Math3d.Vector2)
  nameWithType: Triangle2D.SetB(Vector2)
- uid: Vim.Math3d.Triangle2D.SetB*
  name: SetB
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_SetB_
  commentId: Overload:Vim.Math3d.Triangle2D.SetB
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.SetB
  nameWithType: Triangle2D.SetB
- uid: Vim.Math3d.Triangle2D.SetC(Vim.Math3d.Vector2)
  name: SetC(Vector2)
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_SetC_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Triangle2D.SetC(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Triangle2D.SetC(Vim.Math3d.Vector2)
  nameWithType: Triangle2D.SetC(Vector2)
- uid: Vim.Math3d.Triangle2D.SetC*
  name: SetC
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_SetC_
  commentId: Overload:Vim.Math3d.Triangle2D.SetC
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.SetC
  nameWithType: Triangle2D.SetC
- uid: Vim.Math3d.Triangle2D.ToString
  name: ToString()
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_ToString
  commentId: M:Vim.Math3d.Triangle2D.ToString
  fullName: Vim.Math3d.Triangle2D.ToString()
  nameWithType: Triangle2D.ToString()
- uid: Vim.Math3d.Triangle2D.ToString*
  name: ToString
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_ToString_
  commentId: Overload:Vim.Math3d.Triangle2D.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Triangle2D.ToString
  nameWithType: Triangle2D.ToString
- uid: Vim.Math3d.Triangle2D.Zero
  name: Zero
  href: api/Vim.Math3d.Triangle2D.html#Vim_Math3d_Triangle2D_Zero
  commentId: F:Vim.Math3d.Triangle2D.Zero
  fullName: Vim.Math3d.Triangle2D.Zero
  nameWithType: Triangle2D.Zero
- uid: Vim.Math3d.Vector2
  name: Vector2
  href: api/Vim.Math3d.Vector2.html
  commentId: T:Vim.Math3d.Vector2
  fullName: Vim.Math3d.Vector2
  nameWithType: Vector2
- uid: Vim.Math3d.Vector2.#ctor(System.Single)
  name: Vector2(Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2__ctor_System_Single_
  commentId: M:Vim.Math3d.Vector2.#ctor(System.Single)
  fullName: Vim.Math3d.Vector2.Vector2(System.Single)
  nameWithType: Vector2.Vector2(Single)
- uid: Vim.Math3d.Vector2.#ctor(System.Single,System.Single)
  name: Vector2(Single, Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2__ctor_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector2.#ctor(System.Single,System.Single)
  fullName: Vim.Math3d.Vector2.Vector2(System.Single, System.Single)
  nameWithType: Vector2.Vector2(Single, Single)
- uid: Vim.Math3d.Vector2.#ctor(System.ValueTuple{System.Single,System.Single})
  name: Vector2((Single x, Single y))
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2__ctor_System_ValueTuple_System_Single_System_Single__
  commentId: M:Vim.Math3d.Vector2.#ctor(System.ValueTuple{System.Single,System.Single})
  name.vb: Vector2((x As Single, y As Single)(Of Single, Single))
  fullName: Vim.Math3d.Vector2.Vector2(System.ValueTuple<System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector2.Vector2(System.ValueTuple(Of System.Single, System.Single))
  nameWithType: Vector2.Vector2((Single x, Single y))
  nameWithType.vb: Vector2.Vector2((x As Single, y As Single)(Of Single, Single))
- uid: Vim.Math3d.Vector2.#ctor*
  name: Vector2
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2__ctor_
  commentId: Overload:Vim.Math3d.Vector2.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Vector2
  nameWithType: Vector2.Vector2
- uid: Vim.Math3d.Vector2.AlmostEquals(Vim.Math3d.Vector2,System.Single)
  name: AlmostEquals(Vector2, Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_AlmostEquals_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.Vector2.AlmostEquals(Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.Vector2.AlmostEquals(Vim.Math3d.Vector2, System.Single)
  nameWithType: Vector2.AlmostEquals(Vector2, Single)
- uid: Vim.Math3d.Vector2.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_AlmostEquals_
  commentId: Overload:Vim.Math3d.Vector2.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.AlmostEquals
  nameWithType: Vector2.AlmostEquals
- uid: Vim.Math3d.Vector2.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Vector2.AlmostZero(System.Single)
  fullName: Vim.Math3d.Vector2.AlmostZero(System.Single)
  nameWithType: Vector2.AlmostZero(Single)
- uid: Vim.Math3d.Vector2.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_AlmostZero_
  commentId: Overload:Vim.Math3d.Vector2.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.AlmostZero
  nameWithType: Vector2.AlmostZero
- uid: Vim.Math3d.Vector2.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_AnyComponentNegative
  commentId: M:Vim.Math3d.Vector2.AnyComponentNegative
  fullName: Vim.Math3d.Vector2.AnyComponentNegative()
  nameWithType: Vector2.AnyComponentNegative()
- uid: Vim.Math3d.Vector2.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Vector2.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.AnyComponentNegative
  nameWithType: Vector2.AnyComponentNegative
- uid: Vim.Math3d.Vector2.CompareTo(Vim.Math3d.Vector2)
  name: CompareTo(Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_CompareTo_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.CompareTo(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.CompareTo(Vim.Math3d.Vector2)
  nameWithType: Vector2.CompareTo(Vector2)
- uid: Vim.Math3d.Vector2.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_CompareTo_
  commentId: Overload:Vim.Math3d.Vector2.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.CompareTo
  nameWithType: Vector2.CompareTo
- uid: Vim.Math3d.Vector2.Create(System.Single,System.Single)
  name: Create(Single, Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Create_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector2.Create(System.Single,System.Single)
  fullName: Vim.Math3d.Vector2.Create(System.Single, System.Single)
  nameWithType: Vector2.Create(Single, Single)
- uid: Vim.Math3d.Vector2.Create(System.ValueTuple{System.Single,System.Single})
  name: Create((Single x, Single y))
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Create_System_ValueTuple_System_Single_System_Single__
  commentId: M:Vim.Math3d.Vector2.Create(System.ValueTuple{System.Single,System.Single})
  name.vb: Create((x As Single, y As Single)(Of Single, Single))
  fullName: Vim.Math3d.Vector2.Create(System.ValueTuple<System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector2.Create(System.ValueTuple(Of System.Single, System.Single))
  nameWithType: Vector2.Create((Single x, Single y))
  nameWithType.vb: Vector2.Create((x As Single, y As Single)(Of Single, Single))
- uid: Vim.Math3d.Vector2.Create*
  name: Create
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Create_
  commentId: Overload:Vim.Math3d.Vector2.Create
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Create
  nameWithType: Vector2.Create
- uid: Vim.Math3d.Vector2.Cross(Vim.Math3d.Vector2)
  name: Cross(Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Cross_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.Cross(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Cross(Vim.Math3d.Vector2)
  nameWithType: Vector2.Cross(Vector2)
- uid: Vim.Math3d.Vector2.Cross*
  name: Cross
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Cross_
  commentId: Overload:Vim.Math3d.Vector2.Cross
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Cross
  nameWithType: Vector2.Cross
- uid: Vim.Math3d.Vector2.Deconstruct(System.Single@,System.Single@)
  name: Deconstruct(out Single, out Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Deconstruct_System_Single__System_Single__
  commentId: M:Vim.Math3d.Vector2.Deconstruct(System.Single@,System.Single@)
  name.vb: Deconstruct(ByRef Single, ByRef Single)
  fullName: Vim.Math3d.Vector2.Deconstruct(out System.Single, out System.Single)
  fullName.vb: Vim.Math3d.Vector2.Deconstruct(ByRef System.Single, ByRef System.Single)
  nameWithType: Vector2.Deconstruct(out Single, out Single)
  nameWithType.vb: Vector2.Deconstruct(ByRef Single, ByRef Single)
- uid: Vim.Math3d.Vector2.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Deconstruct_
  commentId: Overload:Vim.Math3d.Vector2.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Deconstruct
  nameWithType: Vector2.Deconstruct
- uid: Vim.Math3d.Vector2.Dot(Vim.Math3d.Vector2)
  name: Dot(Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Dot_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.Dot(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Dot(Vim.Math3d.Vector2)
  nameWithType: Vector2.Dot(Vector2)
- uid: Vim.Math3d.Vector2.Dot(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Dot(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Dot_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.Dot(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Dot(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.Dot(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.Dot*
  name: Dot
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Dot_
  commentId: Overload:Vim.Math3d.Vector2.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Dot
  nameWithType: Vector2.Dot
- uid: Vim.Math3d.Vector2.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Equals_System_Object_
  commentId: M:Vim.Math3d.Vector2.Equals(System.Object)
  fullName: Vim.Math3d.Vector2.Equals(System.Object)
  nameWithType: Vector2.Equals(Object)
- uid: Vim.Math3d.Vector2.Equals(Vim.Math3d.Vector2)
  name: Equals(Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Equals_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.Equals(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Equals(Vim.Math3d.Vector2)
  nameWithType: Vector2.Equals(Vector2)
- uid: Vim.Math3d.Vector2.Equals*
  name: Equals
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Equals_
  commentId: Overload:Vim.Math3d.Vector2.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Equals
  nameWithType: Vector2.Equals
- uid: Vim.Math3d.Vector2.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Vector2.GetComponent(System.Int32)
  fullName: Vim.Math3d.Vector2.GetComponent(System.Int32)
  nameWithType: Vector2.GetComponent(Int32)
- uid: Vim.Math3d.Vector2.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_GetComponent_
  commentId: Overload:Vim.Math3d.Vector2.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.GetComponent
  nameWithType: Vector2.GetComponent
- uid: Vim.Math3d.Vector2.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_GetHashCode
  commentId: M:Vim.Math3d.Vector2.GetHashCode
  fullName: Vim.Math3d.Vector2.GetHashCode()
  nameWithType: Vector2.GetHashCode()
- uid: Vim.Math3d.Vector2.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_GetHashCode_
  commentId: Overload:Vim.Math3d.Vector2.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.GetHashCode
  nameWithType: Vector2.GetHashCode
- uid: Vim.Math3d.Vector2.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_IsInfinity
  commentId: M:Vim.Math3d.Vector2.IsInfinity
  fullName: Vim.Math3d.Vector2.IsInfinity()
  nameWithType: Vector2.IsInfinity()
- uid: Vim.Math3d.Vector2.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_IsInfinity_
  commentId: Overload:Vim.Math3d.Vector2.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.IsInfinity
  nameWithType: Vector2.IsInfinity
- uid: Vim.Math3d.Vector2.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_IsNaN
  commentId: M:Vim.Math3d.Vector2.IsNaN
  fullName: Vim.Math3d.Vector2.IsNaN()
  nameWithType: Vector2.IsNaN()
- uid: Vim.Math3d.Vector2.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_IsNaN_
  commentId: Overload:Vim.Math3d.Vector2.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.IsNaN
  nameWithType: Vector2.IsNaN
- uid: Vim.Math3d.Vector2.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Magnitude
  commentId: M:Vim.Math3d.Vector2.Magnitude
  fullName: Vim.Math3d.Vector2.Magnitude()
  nameWithType: Vector2.Magnitude()
- uid: Vim.Math3d.Vector2.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Magnitude_
  commentId: Overload:Vim.Math3d.Vector2.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Magnitude
  nameWithType: Vector2.Magnitude
- uid: Vim.Math3d.Vector2.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MagnitudeSquared
  commentId: M:Vim.Math3d.Vector2.MagnitudeSquared
  fullName: Vim.Math3d.Vector2.MagnitudeSquared()
  nameWithType: Vector2.MagnitudeSquared()
- uid: Vim.Math3d.Vector2.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Vector2.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.MagnitudeSquared
  nameWithType: Vector2.MagnitudeSquared
- uid: Vim.Math3d.Vector2.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MaxComponent
  commentId: M:Vim.Math3d.Vector2.MaxComponent
  fullName: Vim.Math3d.Vector2.MaxComponent()
  nameWithType: Vector2.MaxComponent()
- uid: Vim.Math3d.Vector2.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MaxComponent_
  commentId: Overload:Vim.Math3d.Vector2.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.MaxComponent
  nameWithType: Vector2.MaxComponent
- uid: Vim.Math3d.Vector2.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MaxValue
  commentId: F:Vim.Math3d.Vector2.MaxValue
  fullName: Vim.Math3d.Vector2.MaxValue
  nameWithType: Vector2.MaxValue
- uid: Vim.Math3d.Vector2.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MinComponent
  commentId: M:Vim.Math3d.Vector2.MinComponent
  fullName: Vim.Math3d.Vector2.MinComponent()
  nameWithType: Vector2.MinComponent()
- uid: Vim.Math3d.Vector2.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MinComponent_
  commentId: Overload:Vim.Math3d.Vector2.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.MinComponent
  nameWithType: Vector2.MinComponent
- uid: Vim.Math3d.Vector2.MinValue
  name: MinValue
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_MinValue
  commentId: F:Vim.Math3d.Vector2.MinValue
  fullName: Vim.Math3d.Vector2.MinValue
  nameWithType: Vector2.MinValue
- uid: Vim.Math3d.Vector2.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_NumComponents
  commentId: F:Vim.Math3d.Vector2.NumComponents
  fullName: Vim.Math3d.Vector2.NumComponents
  nameWithType: Vector2.NumComponents
- uid: Vim.Math3d.Vector2.One
  name: One
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_One
  commentId: F:Vim.Math3d.Vector2.One
  fullName: Vim.Math3d.Vector2.One
  nameWithType: Vector2.One
- uid: Vim.Math3d.Vector2.op_Addition(System.Single,Vim.Math3d.Vector2)
  name: Addition(Single, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Addition_System_Single_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Addition(System.Single,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Addition(System.Single, Vim.Math3d.Vector2)
  nameWithType: Vector2.Addition(Single, Vector2)
- uid: Vim.Math3d.Vector2.op_Addition(Vim.Math3d.Vector2,System.Single)
  name: Addition(Vector2, Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Addition_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.Vector2.op_Addition(Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.Vector2.Addition(Vim.Math3d.Vector2, System.Single)
  nameWithType: Vector2.Addition(Vector2, Single)
- uid: Vim.Math3d.Vector2.op_Addition(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Addition(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Addition_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Addition(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Addition(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.Addition(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Addition_
  commentId: Overload:Vim.Math3d.Vector2.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Addition
  nameWithType: Vector2.Addition
- uid: Vim.Math3d.Vector2.op_Division(System.Single,Vim.Math3d.Vector2)
  name: Division(Single, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Division_System_Single_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Division(System.Single,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Division(System.Single, Vim.Math3d.Vector2)
  nameWithType: Vector2.Division(Single, Vector2)
- uid: Vim.Math3d.Vector2.op_Division(Vim.Math3d.Vector2,System.Single)
  name: Division(Vector2, Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Division_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.Vector2.op_Division(Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.Vector2.Division(Vim.Math3d.Vector2, System.Single)
  nameWithType: Vector2.Division(Vector2, Single)
- uid: Vim.Math3d.Vector2.op_Division(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Division(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Division_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Division(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Division(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.Division(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_Division*
  name: Division
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Division_
  commentId: Overload:Vim.Math3d.Vector2.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Division
  nameWithType: Vector2.Division
- uid: Vim.Math3d.Vector2.op_Equality(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Equality(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Equality_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Equality(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Equality(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.Equality(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Equality_
  commentId: Overload:Vim.Math3d.Vector2.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Equality
  nameWithType: Vector2.Equality
- uid: Vim.Math3d.Vector2.op_GreaterThan(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: GreaterThan(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_GreaterThan_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_GreaterThan(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.GreaterThan(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.GreaterThan(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Vector2.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.GreaterThan
  nameWithType: Vector2.GreaterThan
- uid: Vim.Math3d.Vector2.op_GreaterThanOrEqual(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: GreaterThanOrEqual(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_GreaterThanOrEqual_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_GreaterThanOrEqual(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.GreaterThanOrEqual(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.GreaterThanOrEqual(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Vector2.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.GreaterThanOrEqual
  nameWithType: Vector2.GreaterThanOrEqual
- uid: Vim.Math3d.Vector2.op_Implicit(System.ValueTuple{System.Single,System.Single})~Vim.Math3d.Vector2
  name: Implicit((Single x, Single y) to Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Implicit_System_ValueTuple_System_Single_System_Single___Vim_Math3d_Vector2
  commentId: M:Vim.Math3d.Vector2.op_Implicit(System.ValueTuple{System.Single,System.Single})~Vim.Math3d.Vector2
  name.vb: Widening((x As Single, y As Single)(Of Single, Single) to Vector2)
  fullName: Vim.Math3d.Vector2.Implicit(System.ValueTuple<System.Single, System.Single> to Vim.Math3d.Vector2)
  fullName.vb: Vim.Math3d.Vector2.Widening(System.ValueTuple(Of System.Single, System.Single) to Vim.Math3d.Vector2)
  nameWithType: Vector2.Implicit((Single x, Single y) to Vector2)
  nameWithType.vb: Vector2.Widening((x As Single, y As Single)(Of Single, Single) to Vector2)
- uid: Vim.Math3d.Vector2.op_Implicit(Vim.Math3d.Vector2)~System.ValueTuple{System.Single,System.Single}
  name: Implicit(Vector2 to (Single x, Single y))
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Implicit_Vim_Math3d_Vector2__System_ValueTuple_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector2.op_Implicit(Vim.Math3d.Vector2)~System.ValueTuple{System.Single,System.Single}
  name.vb: Widening(Vector2 to (x As Single, y As Single)(Of Single, Single))
  fullName: Vim.Math3d.Vector2.Implicit(Vim.Math3d.Vector2 to System.ValueTuple<System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector2.Widening(Vim.Math3d.Vector2 to System.ValueTuple(Of System.Single, System.Single))
  nameWithType: Vector2.Implicit(Vector2 to (Single x, Single y))
  nameWithType.vb: Vector2.Widening(Vector2 to (x As Single, y As Single)(Of Single, Single))
- uid: Vim.Math3d.Vector2.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Implicit_
  commentId: Overload:Vim.Math3d.Vector2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Vector2.Implicit
  fullName.vb: Vim.Math3d.Vector2.Widening
  nameWithType: Vector2.Implicit
  nameWithType.vb: Vector2.Widening
- uid: Vim.Math3d.Vector2.op_Inequality(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Inequality(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Inequality_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Inequality(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Inequality(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.Inequality(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Inequality_
  commentId: Overload:Vim.Math3d.Vector2.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Inequality
  nameWithType: Vector2.Inequality
- uid: Vim.Math3d.Vector2.op_LessThan(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: LessThan(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_LessThan_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_LessThan(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.LessThan(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.LessThan(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_LessThan_
  commentId: Overload:Vim.Math3d.Vector2.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.LessThan
  nameWithType: Vector2.LessThan
- uid: Vim.Math3d.Vector2.op_LessThanOrEqual(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: LessThanOrEqual(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_LessThanOrEqual_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_LessThanOrEqual(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.LessThanOrEqual(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.LessThanOrEqual(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Vector2.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.LessThanOrEqual
  nameWithType: Vector2.LessThanOrEqual
- uid: Vim.Math3d.Vector2.op_Multiply(System.Single,Vim.Math3d.Vector2)
  name: Multiply(Single, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Multiply_System_Single_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Multiply(System.Single,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Multiply(System.Single, Vim.Math3d.Vector2)
  nameWithType: Vector2.Multiply(Single, Vector2)
- uid: Vim.Math3d.Vector2.op_Multiply(Vim.Math3d.Vector2,System.Single)
  name: Multiply(Vector2, Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Multiply_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.Vector2.op_Multiply(Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.Vector2.Multiply(Vim.Math3d.Vector2, System.Single)
  nameWithType: Vector2.Multiply(Vector2, Single)
- uid: Vim.Math3d.Vector2.op_Multiply(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Multiply(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Multiply_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Multiply(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Multiply(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.Multiply(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Multiply_
  commentId: Overload:Vim.Math3d.Vector2.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Multiply
  nameWithType: Vector2.Multiply
- uid: Vim.Math3d.Vector2.op_Subtraction(System.Single,Vim.Math3d.Vector2)
  name: Subtraction(Single, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Subtraction_System_Single_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Subtraction(System.Single,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Subtraction(System.Single, Vim.Math3d.Vector2)
  nameWithType: Vector2.Subtraction(Single, Vector2)
- uid: Vim.Math3d.Vector2.op_Subtraction(Vim.Math3d.Vector2,System.Single)
  name: Subtraction(Vector2, Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Subtraction_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.Vector2.op_Subtraction(Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.Vector2.Subtraction(Vim.Math3d.Vector2, System.Single)
  nameWithType: Vector2.Subtraction(Vector2, Single)
- uid: Vim.Math3d.Vector2.op_Subtraction(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  name: Subtraction(Vector2, Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Subtraction_Vim_Math3d_Vector2_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_Subtraction(Vim.Math3d.Vector2,Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.Subtraction(Vim.Math3d.Vector2, Vim.Math3d.Vector2)
  nameWithType: Vector2.Subtraction(Vector2, Vector2)
- uid: Vim.Math3d.Vector2.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_Subtraction_
  commentId: Overload:Vim.Math3d.Vector2.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.Subtraction
  nameWithType: Vector2.Subtraction
- uid: Vim.Math3d.Vector2.op_UnaryNegation(Vim.Math3d.Vector2)
  name: UnaryNegation(Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_UnaryNegation_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.op_UnaryNegation(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.UnaryNegation(Vim.Math3d.Vector2)
  nameWithType: Vector2.UnaryNegation(Vector2)
- uid: Vim.Math3d.Vector2.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Vector2.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.UnaryNegation
  nameWithType: Vector2.UnaryNegation
- uid: Vim.Math3d.Vector2.PointCrossProduct(Vim.Math3d.Vector2)
  name: PointCrossProduct(Vector2)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_PointCrossProduct_Vim_Math3d_Vector2_
  commentId: M:Vim.Math3d.Vector2.PointCrossProduct(Vim.Math3d.Vector2)
  fullName: Vim.Math3d.Vector2.PointCrossProduct(Vim.Math3d.Vector2)
  nameWithType: Vector2.PointCrossProduct(Vector2)
- uid: Vim.Math3d.Vector2.PointCrossProduct*
  name: PointCrossProduct
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_PointCrossProduct_
  commentId: Overload:Vim.Math3d.Vector2.PointCrossProduct
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.PointCrossProduct
  nameWithType: Vector2.PointCrossProduct
- uid: Vim.Math3d.Vector2.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_ProductComponents
  commentId: M:Vim.Math3d.Vector2.ProductComponents
  fullName: Vim.Math3d.Vector2.ProductComponents()
  nameWithType: Vector2.ProductComponents()
- uid: Vim.Math3d.Vector2.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_ProductComponents_
  commentId: Overload:Vim.Math3d.Vector2.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.ProductComponents
  nameWithType: Vector2.ProductComponents
- uid: Vim.Math3d.Vector2.SetX(System.Single)
  name: SetX(Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SetX_System_Single_
  commentId: M:Vim.Math3d.Vector2.SetX(System.Single)
  fullName: Vim.Math3d.Vector2.SetX(System.Single)
  nameWithType: Vector2.SetX(Single)
- uid: Vim.Math3d.Vector2.SetX*
  name: SetX
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SetX_
  commentId: Overload:Vim.Math3d.Vector2.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.SetX
  nameWithType: Vector2.SetX
- uid: Vim.Math3d.Vector2.SetY(System.Single)
  name: SetY(Single)
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SetY_System_Single_
  commentId: M:Vim.Math3d.Vector2.SetY(System.Single)
  fullName: Vim.Math3d.Vector2.SetY(System.Single)
  nameWithType: Vector2.SetY(Single)
- uid: Vim.Math3d.Vector2.SetY*
  name: SetY
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SetY_
  commentId: Overload:Vim.Math3d.Vector2.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.SetY
  nameWithType: Vector2.SetY
- uid: Vim.Math3d.Vector2.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SumComponents
  commentId: M:Vim.Math3d.Vector2.SumComponents
  fullName: Vim.Math3d.Vector2.SumComponents()
  nameWithType: Vector2.SumComponents()
- uid: Vim.Math3d.Vector2.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SumComponents_
  commentId: Overload:Vim.Math3d.Vector2.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.SumComponents
  nameWithType: Vector2.SumComponents
- uid: Vim.Math3d.Vector2.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SumSqrComponents
  commentId: M:Vim.Math3d.Vector2.SumSqrComponents
  fullName: Vim.Math3d.Vector2.SumSqrComponents()
  nameWithType: Vector2.SumSqrComponents()
- uid: Vim.Math3d.Vector2.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Vector2.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.SumSqrComponents
  nameWithType: Vector2.SumSqrComponents
- uid: Vim.Math3d.Vector2.ToString
  name: ToString()
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_ToString
  commentId: M:Vim.Math3d.Vector2.ToString
  fullName: Vim.Math3d.Vector2.ToString()
  nameWithType: Vector2.ToString()
- uid: Vim.Math3d.Vector2.ToString*
  name: ToString
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_ToString_
  commentId: Overload:Vim.Math3d.Vector2.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Vector2.ToString
  nameWithType: Vector2.ToString
- uid: Vim.Math3d.Vector2.UnitX
  name: UnitX
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_UnitX
  commentId: F:Vim.Math3d.Vector2.UnitX
  fullName: Vim.Math3d.Vector2.UnitX
  nameWithType: Vector2.UnitX
- uid: Vim.Math3d.Vector2.UnitY
  name: UnitY
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_UnitY
  commentId: F:Vim.Math3d.Vector2.UnitY
  fullName: Vim.Math3d.Vector2.UnitY
  nameWithType: Vector2.UnitY
- uid: Vim.Math3d.Vector2.X
  name: X
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_X
  commentId: F:Vim.Math3d.Vector2.X
  fullName: Vim.Math3d.Vector2.X
  nameWithType: Vector2.X
- uid: Vim.Math3d.Vector2.Y
  name: Y
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Y
  commentId: F:Vim.Math3d.Vector2.Y
  fullName: Vim.Math3d.Vector2.Y
  nameWithType: Vector2.Y
- uid: Vim.Math3d.Vector2.Zero
  name: Zero
  href: api/Vim.Math3d.Vector2.html#Vim_Math3d_Vector2_Zero
  commentId: F:Vim.Math3d.Vector2.Zero
  fullName: Vim.Math3d.Vector2.Zero
  nameWithType: Vector2.Zero
- uid: Vim.Math3d.Vector3
  name: Vector3
  href: api/Vim.Math3d.Vector3.html
  commentId: T:Vim.Math3d.Vector3
  fullName: Vim.Math3d.Vector3
  nameWithType: Vector3
- uid: Vim.Math3d.Vector3.#ctor(System.Single)
  name: Vector3(Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3__ctor_System_Single_
  commentId: M:Vim.Math3d.Vector3.#ctor(System.Single)
  fullName: Vim.Math3d.Vector3.Vector3(System.Single)
  nameWithType: Vector3.Vector3(Single)
- uid: Vim.Math3d.Vector3.#ctor(System.Single,System.Single)
  name: Vector3(Single, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3__ctor_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector3.#ctor(System.Single,System.Single)
  fullName: Vim.Math3d.Vector3.Vector3(System.Single, System.Single)
  nameWithType: Vector3.Vector3(Single, Single)
- uid: Vim.Math3d.Vector3.#ctor(System.Single,System.Single,System.Single)
  name: Vector3(Single, Single, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3__ctor_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector3.#ctor(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Vector3.Vector3(System.Single, System.Single, System.Single)
  nameWithType: Vector3.Vector3(Single, Single, Single)
- uid: Vim.Math3d.Vector3.#ctor(System.ValueTuple{System.Single,System.Single,System.Single})
  name: Vector3((Single x, Single y, Single z))
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3__ctor_System_ValueTuple_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.Vector3.#ctor(System.ValueTuple{System.Single,System.Single,System.Single})
  name.vb: Vector3((x As Single, y As Single, z As Single)(Of Single, Single, Single))
  fullName: Vim.Math3d.Vector3.Vector3(System.ValueTuple<System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector3.Vector3(System.ValueTuple(Of System.Single, System.Single, System.Single))
  nameWithType: Vector3.Vector3((Single x, Single y, Single z))
  nameWithType.vb: Vector3.Vector3((x As Single, y As Single, z As Single)(Of Single, Single, Single))
- uid: Vim.Math3d.Vector3.#ctor(Vim.Math3d.Vector2,System.Single)
  name: Vector3(Vector2, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3__ctor_Vim_Math3d_Vector2_System_Single_
  commentId: M:Vim.Math3d.Vector3.#ctor(Vim.Math3d.Vector2,System.Single)
  fullName: Vim.Math3d.Vector3.Vector3(Vim.Math3d.Vector2, System.Single)
  nameWithType: Vector3.Vector3(Vector2, Single)
- uid: Vim.Math3d.Vector3.#ctor*
  name: Vector3
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3__ctor_
  commentId: Overload:Vim.Math3d.Vector3.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Vector3
  nameWithType: Vector3.Vector3
- uid: Vim.Math3d.Vector3.AlmostEquals(Vim.Math3d.Vector3,System.Single)
  name: AlmostEquals(Vector3, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_AlmostEquals_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Vector3.AlmostEquals(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Vector3.AlmostEquals(Vim.Math3d.Vector3, System.Single)
  nameWithType: Vector3.AlmostEquals(Vector3, Single)
- uid: Vim.Math3d.Vector3.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_AlmostEquals_
  commentId: Overload:Vim.Math3d.Vector3.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.AlmostEquals
  nameWithType: Vector3.AlmostEquals
- uid: Vim.Math3d.Vector3.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Vector3.AlmostZero(System.Single)
  fullName: Vim.Math3d.Vector3.AlmostZero(System.Single)
  nameWithType: Vector3.AlmostZero(Single)
- uid: Vim.Math3d.Vector3.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_AlmostZero_
  commentId: Overload:Vim.Math3d.Vector3.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.AlmostZero
  nameWithType: Vector3.AlmostZero
- uid: Vim.Math3d.Vector3.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_AnyComponentNegative
  commentId: M:Vim.Math3d.Vector3.AnyComponentNegative
  fullName: Vim.Math3d.Vector3.AnyComponentNegative()
  nameWithType: Vector3.AnyComponentNegative()
- uid: Vim.Math3d.Vector3.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Vector3.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.AnyComponentNegative
  nameWithType: Vector3.AnyComponentNegative
- uid: Vim.Math3d.Vector3.Clamp(Vim.Math3d.AABox)
  name: Clamp(AABox)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Clamp_Vim_Math3d_AABox_
  commentId: M:Vim.Math3d.Vector3.Clamp(Vim.Math3d.AABox)
  fullName: Vim.Math3d.Vector3.Clamp(Vim.Math3d.AABox)
  nameWithType: Vector3.Clamp(AABox)
- uid: Vim.Math3d.Vector3.Clamp*
  name: Clamp
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Clamp_
  commentId: Overload:Vim.Math3d.Vector3.Clamp
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Clamp
  nameWithType: Vector3.Clamp
- uid: Vim.Math3d.Vector3.CompareTo(Vim.Math3d.Vector3)
  name: CompareTo(Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_CompareTo_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.CompareTo(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.CompareTo(Vim.Math3d.Vector3)
  nameWithType: Vector3.CompareTo(Vector3)
- uid: Vim.Math3d.Vector3.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_CompareTo_
  commentId: Overload:Vim.Math3d.Vector3.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.CompareTo
  nameWithType: Vector3.CompareTo
- uid: Vim.Math3d.Vector3.Create(System.Single,System.Single,System.Single)
  name: Create(Single, Single, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Create_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector3.Create(System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Vector3.Create(System.Single, System.Single, System.Single)
  nameWithType: Vector3.Create(Single, Single, Single)
- uid: Vim.Math3d.Vector3.Create(System.ValueTuple{System.Single,System.Single,System.Single})
  name: Create((Single x, Single y, Single z))
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Create_System_ValueTuple_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.Vector3.Create(System.ValueTuple{System.Single,System.Single,System.Single})
  name.vb: Create((x As Single, y As Single, z As Single)(Of Single, Single, Single))
  fullName: Vim.Math3d.Vector3.Create(System.ValueTuple<System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector3.Create(System.ValueTuple(Of System.Single, System.Single, System.Single))
  nameWithType: Vector3.Create((Single x, Single y, Single z))
  nameWithType.vb: Vector3.Create((x As Single, y As Single, z As Single)(Of Single, Single, Single))
- uid: Vim.Math3d.Vector3.Create*
  name: Create
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Create_
  commentId: Overload:Vim.Math3d.Vector3.Create
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Create
  nameWithType: Vector3.Create
- uid: Vim.Math3d.Vector3.Cross(Vim.Math3d.Vector3)
  name: Cross(Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Cross_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.Cross(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Cross(Vim.Math3d.Vector3)
  nameWithType: Vector3.Cross(Vector3)
- uid: Vim.Math3d.Vector3.Cross*
  name: Cross
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Cross_
  commentId: Overload:Vim.Math3d.Vector3.Cross
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Cross
  nameWithType: Vector3.Cross
- uid: Vim.Math3d.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  name: Deconstruct(out Single, out Single, out Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Deconstruct_System_Single__System_Single__System_Single__
  commentId: M:Vim.Math3d.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  name.vb: Deconstruct(ByRef Single, ByRef Single, ByRef Single)
  fullName: Vim.Math3d.Vector3.Deconstruct(out System.Single, out System.Single, out System.Single)
  fullName.vb: Vim.Math3d.Vector3.Deconstruct(ByRef System.Single, ByRef System.Single, ByRef System.Single)
  nameWithType: Vector3.Deconstruct(out Single, out Single, out Single)
  nameWithType.vb: Vector3.Deconstruct(ByRef Single, ByRef Single, ByRef Single)
- uid: Vim.Math3d.Vector3.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Deconstruct_
  commentId: Overload:Vim.Math3d.Vector3.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Deconstruct
  nameWithType: Vector3.Deconstruct
- uid: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3)
  name: Dot(Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Dot_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3)
  nameWithType: Vector3.Dot(Vector3)
- uid: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Dot(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Dot_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.Dot(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.Dot*
  name: Dot
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Dot_
  commentId: Overload:Vim.Math3d.Vector3.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Dot
  nameWithType: Vector3.Dot
- uid: Vim.Math3d.Vector3.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Equals_System_Object_
  commentId: M:Vim.Math3d.Vector3.Equals(System.Object)
  fullName: Vim.Math3d.Vector3.Equals(System.Object)
  nameWithType: Vector3.Equals(Object)
- uid: Vim.Math3d.Vector3.Equals(Vim.Math3d.Vector3)
  name: Equals(Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Equals_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.Equals(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Equals(Vim.Math3d.Vector3)
  nameWithType: Vector3.Equals(Vector3)
- uid: Vim.Math3d.Vector3.Equals*
  name: Equals
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Equals_
  commentId: Overload:Vim.Math3d.Vector3.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Equals
  nameWithType: Vector3.Equals
- uid: Vim.Math3d.Vector3.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Vector3.GetComponent(System.Int32)
  fullName: Vim.Math3d.Vector3.GetComponent(System.Int32)
  nameWithType: Vector3.GetComponent(Int32)
- uid: Vim.Math3d.Vector3.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_GetComponent_
  commentId: Overload:Vim.Math3d.Vector3.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.GetComponent
  nameWithType: Vector3.GetComponent
- uid: Vim.Math3d.Vector3.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_GetHashCode
  commentId: M:Vim.Math3d.Vector3.GetHashCode
  fullName: Vim.Math3d.Vector3.GetHashCode()
  nameWithType: Vector3.GetHashCode()
- uid: Vim.Math3d.Vector3.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_GetHashCode_
  commentId: Overload:Vim.Math3d.Vector3.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.GetHashCode
  nameWithType: Vector3.GetHashCode
- uid: Vim.Math3d.Vector3.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_IsInfinity
  commentId: M:Vim.Math3d.Vector3.IsInfinity
  fullName: Vim.Math3d.Vector3.IsInfinity()
  nameWithType: Vector3.IsInfinity()
- uid: Vim.Math3d.Vector3.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_IsInfinity_
  commentId: Overload:Vim.Math3d.Vector3.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.IsInfinity
  nameWithType: Vector3.IsInfinity
- uid: Vim.Math3d.Vector3.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_IsNaN
  commentId: M:Vim.Math3d.Vector3.IsNaN
  fullName: Vim.Math3d.Vector3.IsNaN()
  nameWithType: Vector3.IsNaN()
- uid: Vim.Math3d.Vector3.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_IsNaN_
  commentId: Overload:Vim.Math3d.Vector3.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.IsNaN
  nameWithType: Vector3.IsNaN
- uid: Vim.Math3d.Vector3.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Magnitude
  commentId: M:Vim.Math3d.Vector3.Magnitude
  fullName: Vim.Math3d.Vector3.Magnitude()
  nameWithType: Vector3.Magnitude()
- uid: Vim.Math3d.Vector3.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Magnitude_
  commentId: Overload:Vim.Math3d.Vector3.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Magnitude
  nameWithType: Vector3.Magnitude
- uid: Vim.Math3d.Vector3.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MagnitudeSquared
  commentId: M:Vim.Math3d.Vector3.MagnitudeSquared
  fullName: Vim.Math3d.Vector3.MagnitudeSquared()
  nameWithType: Vector3.MagnitudeSquared()
- uid: Vim.Math3d.Vector3.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Vector3.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.MagnitudeSquared
  nameWithType: Vector3.MagnitudeSquared
- uid: Vim.Math3d.Vector3.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MaxComponent
  commentId: M:Vim.Math3d.Vector3.MaxComponent
  fullName: Vim.Math3d.Vector3.MaxComponent()
  nameWithType: Vector3.MaxComponent()
- uid: Vim.Math3d.Vector3.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MaxComponent_
  commentId: Overload:Vim.Math3d.Vector3.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.MaxComponent
  nameWithType: Vector3.MaxComponent
- uid: Vim.Math3d.Vector3.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MaxValue
  commentId: F:Vim.Math3d.Vector3.MaxValue
  fullName: Vim.Math3d.Vector3.MaxValue
  nameWithType: Vector3.MaxValue
- uid: Vim.Math3d.Vector3.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MinComponent
  commentId: M:Vim.Math3d.Vector3.MinComponent
  fullName: Vim.Math3d.Vector3.MinComponent()
  nameWithType: Vector3.MinComponent()
- uid: Vim.Math3d.Vector3.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MinComponent_
  commentId: Overload:Vim.Math3d.Vector3.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.MinComponent
  nameWithType: Vector3.MinComponent
- uid: Vim.Math3d.Vector3.MinValue
  name: MinValue
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MinValue
  commentId: F:Vim.Math3d.Vector3.MinValue
  fullName: Vim.Math3d.Vector3.MinValue
  nameWithType: Vector3.MinValue
- uid: Vim.Math3d.Vector3.MixedProduct(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: MixedProduct(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MixedProduct_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.MixedProduct(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.MixedProduct(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.MixedProduct(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.MixedProduct*
  name: MixedProduct
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_MixedProduct_
  commentId: Overload:Vim.Math3d.Vector3.MixedProduct
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.MixedProduct
  nameWithType: Vector3.MixedProduct
- uid: Vim.Math3d.Vector3.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_NumComponents
  commentId: F:Vim.Math3d.Vector3.NumComponents
  fullName: Vim.Math3d.Vector3.NumComponents
  nameWithType: Vector3.NumComponents
- uid: Vim.Math3d.Vector3.One
  name: One
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_One
  commentId: F:Vim.Math3d.Vector3.One
  fullName: Vim.Math3d.Vector3.One
  nameWithType: Vector3.One
- uid: Vim.Math3d.Vector3.op_Addition(System.Single,Vim.Math3d.Vector3)
  name: Addition(Single, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Addition_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Addition(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Addition(System.Single, Vim.Math3d.Vector3)
  nameWithType: Vector3.Addition(Single, Vector3)
- uid: Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,System.Single)
  name: Addition(Vector3, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Addition_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Vector3.Addition(Vim.Math3d.Vector3, System.Single)
  nameWithType: Vector3.Addition(Vector3, Single)
- uid: Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Addition(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Addition_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Addition(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.Addition(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Addition_
  commentId: Overload:Vim.Math3d.Vector3.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Addition
  nameWithType: Vector3.Addition
- uid: Vim.Math3d.Vector3.op_Division(System.Single,Vim.Math3d.Vector3)
  name: Division(Single, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Division_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Division(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Division(System.Single, Vim.Math3d.Vector3)
  nameWithType: Vector3.Division(Single, Vector3)
- uid: Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,System.Single)
  name: Division(Vector3, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Division_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Vector3.Division(Vim.Math3d.Vector3, System.Single)
  nameWithType: Vector3.Division(Vector3, Single)
- uid: Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Division(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Division_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Division(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.Division(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_Division*
  name: Division
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Division_
  commentId: Overload:Vim.Math3d.Vector3.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Division
  nameWithType: Vector3.Division
- uid: Vim.Math3d.Vector3.op_Equality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Equality(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Equality_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Equality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Equality(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.Equality(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Equality_
  commentId: Overload:Vim.Math3d.Vector3.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Equality
  nameWithType: Vector3.Equality
- uid: Vim.Math3d.Vector3.op_GreaterThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: GreaterThan(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_GreaterThan_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_GreaterThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.GreaterThan(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.GreaterThan(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Vector3.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.GreaterThan
  nameWithType: Vector3.GreaterThan
- uid: Vim.Math3d.Vector3.op_GreaterThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: GreaterThanOrEqual(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_GreaterThanOrEqual_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_GreaterThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.GreaterThanOrEqual(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.GreaterThanOrEqual(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Vector3.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.GreaterThanOrEqual
  nameWithType: Vector3.GreaterThanOrEqual
- uid: Vim.Math3d.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~Vim.Math3d.Vector3
  name: Implicit((Single x, Single y, Single z) to Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Implicit_System_ValueTuple_System_Single_System_Single_System_Single___Vim_Math3d_Vector3
  commentId: M:Vim.Math3d.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~Vim.Math3d.Vector3
  name.vb: Widening((x As Single, y As Single, z As Single)(Of Single, Single, Single) to Vector3)
  fullName: Vim.Math3d.Vector3.Implicit(System.ValueTuple<System.Single, System.Single, System.Single> to Vim.Math3d.Vector3)
  fullName.vb: Vim.Math3d.Vector3.Widening(System.ValueTuple(Of System.Single, System.Single, System.Single) to Vim.Math3d.Vector3)
  nameWithType: Vector3.Implicit((Single x, Single y, Single z) to Vector3)
  nameWithType.vb: Vector3.Widening((x As Single, y As Single, z As Single)(Of Single, Single, Single) to Vector3)
- uid: Vim.Math3d.Vector3.op_Implicit(Vim.Math3d.Vector3)~System.ValueTuple{System.Single,System.Single,System.Single}
  name: Implicit(Vector3 to (Single x, Single y, Single z))
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Implicit_Vim_Math3d_Vector3__System_ValueTuple_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector3.op_Implicit(Vim.Math3d.Vector3)~System.ValueTuple{System.Single,System.Single,System.Single}
  name.vb: Widening(Vector3 to (x As Single, y As Single, z As Single)(Of Single, Single, Single))
  fullName: Vim.Math3d.Vector3.Implicit(Vim.Math3d.Vector3 to System.ValueTuple<System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector3.Widening(Vim.Math3d.Vector3 to System.ValueTuple(Of System.Single, System.Single, System.Single))
  nameWithType: Vector3.Implicit(Vector3 to (Single x, Single y, Single z))
  nameWithType.vb: Vector3.Widening(Vector3 to (x As Single, y As Single, z As Single)(Of Single, Single, Single))
- uid: Vim.Math3d.Vector3.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Implicit_
  commentId: Overload:Vim.Math3d.Vector3.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Vector3.Implicit
  fullName.vb: Vim.Math3d.Vector3.Widening
  nameWithType: Vector3.Implicit
  nameWithType.vb: Vector3.Widening
- uid: Vim.Math3d.Vector3.op_Inequality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Inequality(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Inequality_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Inequality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Inequality(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.Inequality(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Inequality_
  commentId: Overload:Vim.Math3d.Vector3.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Inequality
  nameWithType: Vector3.Inequality
- uid: Vim.Math3d.Vector3.op_LessThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: LessThan(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_LessThan_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_LessThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.LessThan(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.LessThan(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_LessThan_
  commentId: Overload:Vim.Math3d.Vector3.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.LessThan
  nameWithType: Vector3.LessThan
- uid: Vim.Math3d.Vector3.op_LessThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: LessThanOrEqual(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_LessThanOrEqual_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_LessThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.LessThanOrEqual(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.LessThanOrEqual(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Vector3.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.LessThanOrEqual
  nameWithType: Vector3.LessThanOrEqual
- uid: Vim.Math3d.Vector3.op_Multiply(System.Single,Vim.Math3d.Vector3)
  name: Multiply(Single, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Multiply_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Multiply(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Multiply(System.Single, Vim.Math3d.Vector3)
  nameWithType: Vector3.Multiply(Single, Vector3)
- uid: Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,System.Single)
  name: Multiply(Vector3, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Multiply_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Vector3.Multiply(Vim.Math3d.Vector3, System.Single)
  nameWithType: Vector3.Multiply(Vector3, Single)
- uid: Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Multiply(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Multiply_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Multiply(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.Multiply(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Multiply_
  commentId: Overload:Vim.Math3d.Vector3.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Multiply
  nameWithType: Vector3.Multiply
- uid: Vim.Math3d.Vector3.op_Subtraction(System.Single,Vim.Math3d.Vector3)
  name: Subtraction(Single, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Subtraction_System_Single_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Subtraction(System.Single,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Subtraction(System.Single, Vim.Math3d.Vector3)
  nameWithType: Vector3.Subtraction(Single, Vector3)
- uid: Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,System.Single)
  name: Subtraction(Vector3, Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Subtraction_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Vector3.Subtraction(Vim.Math3d.Vector3, System.Single)
  nameWithType: Vector3.Subtraction(Vector3, Single)
- uid: Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Subtraction(Vector3, Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Subtraction_Vim_Math3d_Vector3_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Subtraction(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType: Vector3.Subtraction(Vector3, Vector3)
- uid: Vim.Math3d.Vector3.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_Subtraction_
  commentId: Overload:Vim.Math3d.Vector3.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Subtraction
  nameWithType: Vector3.Subtraction
- uid: Vim.Math3d.Vector3.op_UnaryNegation(Vim.Math3d.Vector3)
  name: UnaryNegation(Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_UnaryNegation_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.op_UnaryNegation(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.UnaryNegation(Vim.Math3d.Vector3)
  nameWithType: Vector3.UnaryNegation(Vector3)
- uid: Vim.Math3d.Vector3.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Vector3.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.UnaryNegation
  nameWithType: Vector3.UnaryNegation
- uid: Vim.Math3d.Vector3.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ProductComponents
  commentId: M:Vim.Math3d.Vector3.ProductComponents
  fullName: Vim.Math3d.Vector3.ProductComponents()
  nameWithType: Vector3.ProductComponents()
- uid: Vim.Math3d.Vector3.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ProductComponents_
  commentId: Overload:Vim.Math3d.Vector3.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.ProductComponents
  nameWithType: Vector3.ProductComponents
- uid: Vim.Math3d.Vector3.Reflect(Vim.Math3d.Vector3)
  name: Reflect(Vector3)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Reflect_Vim_Math3d_Vector3_
  commentId: M:Vim.Math3d.Vector3.Reflect(Vim.Math3d.Vector3)
  fullName: Vim.Math3d.Vector3.Reflect(Vim.Math3d.Vector3)
  nameWithType: Vector3.Reflect(Vector3)
- uid: Vim.Math3d.Vector3.Reflect*
  name: Reflect
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Reflect_
  commentId: Overload:Vim.Math3d.Vector3.Reflect
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Reflect
  nameWithType: Vector3.Reflect
- uid: Vim.Math3d.Vector3.SetX(System.Single)
  name: SetX(Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SetX_System_Single_
  commentId: M:Vim.Math3d.Vector3.SetX(System.Single)
  fullName: Vim.Math3d.Vector3.SetX(System.Single)
  nameWithType: Vector3.SetX(Single)
- uid: Vim.Math3d.Vector3.SetX*
  name: SetX
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SetX_
  commentId: Overload:Vim.Math3d.Vector3.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.SetX
  nameWithType: Vector3.SetX
- uid: Vim.Math3d.Vector3.SetY(System.Single)
  name: SetY(Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SetY_System_Single_
  commentId: M:Vim.Math3d.Vector3.SetY(System.Single)
  fullName: Vim.Math3d.Vector3.SetY(System.Single)
  nameWithType: Vector3.SetY(Single)
- uid: Vim.Math3d.Vector3.SetY*
  name: SetY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SetY_
  commentId: Overload:Vim.Math3d.Vector3.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.SetY
  nameWithType: Vector3.SetY
- uid: Vim.Math3d.Vector3.SetZ(System.Single)
  name: SetZ(Single)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SetZ_System_Single_
  commentId: M:Vim.Math3d.Vector3.SetZ(System.Single)
  fullName: Vim.Math3d.Vector3.SetZ(System.Single)
  nameWithType: Vector3.SetZ(Single)
- uid: Vim.Math3d.Vector3.SetZ*
  name: SetZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SetZ_
  commentId: Overload:Vim.Math3d.Vector3.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.SetZ
  nameWithType: Vector3.SetZ
- uid: Vim.Math3d.Vector3.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SumComponents
  commentId: M:Vim.Math3d.Vector3.SumComponents
  fullName: Vim.Math3d.Vector3.SumComponents()
  nameWithType: Vector3.SumComponents()
- uid: Vim.Math3d.Vector3.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SumComponents_
  commentId: Overload:Vim.Math3d.Vector3.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.SumComponents
  nameWithType: Vector3.SumComponents
- uid: Vim.Math3d.Vector3.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SumSqrComponents
  commentId: M:Vim.Math3d.Vector3.SumSqrComponents
  fullName: Vim.Math3d.Vector3.SumSqrComponents()
  nameWithType: Vector3.SumSqrComponents()
- uid: Vim.Math3d.Vector3.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Vector3.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.SumSqrComponents
  nameWithType: Vector3.SumSqrComponents
- uid: Vim.Math3d.Vector3.ToString
  name: ToString()
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ToString
  commentId: M:Vim.Math3d.Vector3.ToString
  fullName: Vim.Math3d.Vector3.ToString()
  nameWithType: Vector3.ToString()
- uid: Vim.Math3d.Vector3.ToString*
  name: ToString
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ToString_
  commentId: Overload:Vim.Math3d.Vector3.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.ToString
  nameWithType: Vector3.ToString
- uid: Vim.Math3d.Vector3.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Vector3.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Vector3.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Vector3.Transform(Matrix4x4)
- uid: Vim.Math3d.Vector3.Transform*
  name: Transform
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Transform_
  commentId: Overload:Vim.Math3d.Vector3.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.Transform
  nameWithType: Vector3.Transform
- uid: Vim.Math3d.Vector3.TransformNormal(Vim.Math3d.Matrix4x4)
  name: TransformNormal(Matrix4x4)
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_TransformNormal_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Vector3.TransformNormal(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Vector3.TransformNormal(Vim.Math3d.Matrix4x4)
  nameWithType: Vector3.TransformNormal(Matrix4x4)
- uid: Vim.Math3d.Vector3.TransformNormal*
  name: TransformNormal
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_TransformNormal_
  commentId: Overload:Vim.Math3d.Vector3.TransformNormal
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.TransformNormal
  nameWithType: Vector3.TransformNormal
- uid: Vim.Math3d.Vector3.UnitX
  name: UnitX
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_UnitX
  commentId: F:Vim.Math3d.Vector3.UnitX
  fullName: Vim.Math3d.Vector3.UnitX
  nameWithType: Vector3.UnitX
- uid: Vim.Math3d.Vector3.UnitY
  name: UnitY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_UnitY
  commentId: F:Vim.Math3d.Vector3.UnitY
  fullName: Vim.Math3d.Vector3.UnitY
  nameWithType: Vector3.UnitY
- uid: Vim.Math3d.Vector3.UnitZ
  name: UnitZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_UnitZ
  commentId: F:Vim.Math3d.Vector3.UnitZ
  fullName: Vim.Math3d.Vector3.UnitZ
  nameWithType: Vector3.UnitZ
- uid: Vim.Math3d.Vector3.X
  name: X
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_X
  commentId: F:Vim.Math3d.Vector3.X
  fullName: Vim.Math3d.Vector3.X
  nameWithType: Vector3.X
- uid: Vim.Math3d.Vector3.XY
  name: XY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_XY
  commentId: P:Vim.Math3d.Vector3.XY
  fullName: Vim.Math3d.Vector3.XY
  nameWithType: Vector3.XY
- uid: Vim.Math3d.Vector3.XY*
  name: XY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_XY_
  commentId: Overload:Vim.Math3d.Vector3.XY
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.XY
  nameWithType: Vector3.XY
- uid: Vim.Math3d.Vector3.XZ
  name: XZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_XZ
  commentId: P:Vim.Math3d.Vector3.XZ
  fullName: Vim.Math3d.Vector3.XZ
  nameWithType: Vector3.XZ
- uid: Vim.Math3d.Vector3.XZ*
  name: XZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_XZ_
  commentId: Overload:Vim.Math3d.Vector3.XZ
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.XZ
  nameWithType: Vector3.XZ
- uid: Vim.Math3d.Vector3.XZY
  name: XZY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_XZY
  commentId: P:Vim.Math3d.Vector3.XZY
  fullName: Vim.Math3d.Vector3.XZY
  nameWithType: Vector3.XZY
- uid: Vim.Math3d.Vector3.XZY*
  name: XZY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_XZY_
  commentId: Overload:Vim.Math3d.Vector3.XZY
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.XZY
  nameWithType: Vector3.XZY
- uid: Vim.Math3d.Vector3.Y
  name: Y
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Y
  commentId: F:Vim.Math3d.Vector3.Y
  fullName: Vim.Math3d.Vector3.Y
  nameWithType: Vector3.Y
- uid: Vim.Math3d.Vector3.YXZ
  name: YXZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_YXZ
  commentId: P:Vim.Math3d.Vector3.YXZ
  fullName: Vim.Math3d.Vector3.YXZ
  nameWithType: Vector3.YXZ
- uid: Vim.Math3d.Vector3.YXZ*
  name: YXZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_YXZ_
  commentId: Overload:Vim.Math3d.Vector3.YXZ
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.YXZ
  nameWithType: Vector3.YXZ
- uid: Vim.Math3d.Vector3.YZ
  name: YZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_YZ
  commentId: P:Vim.Math3d.Vector3.YZ
  fullName: Vim.Math3d.Vector3.YZ
  nameWithType: Vector3.YZ
- uid: Vim.Math3d.Vector3.YZ*
  name: YZ
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_YZ_
  commentId: Overload:Vim.Math3d.Vector3.YZ
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.YZ
  nameWithType: Vector3.YZ
- uid: Vim.Math3d.Vector3.YZX
  name: YZX
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_YZX
  commentId: P:Vim.Math3d.Vector3.YZX
  fullName: Vim.Math3d.Vector3.YZX
  nameWithType: Vector3.YZX
- uid: Vim.Math3d.Vector3.YZX*
  name: YZX
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_YZX_
  commentId: Overload:Vim.Math3d.Vector3.YZX
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.YZX
  nameWithType: Vector3.YZX
- uid: Vim.Math3d.Vector3.Z
  name: Z
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Z
  commentId: F:Vim.Math3d.Vector3.Z
  fullName: Vim.Math3d.Vector3.Z
  nameWithType: Vector3.Z
- uid: Vim.Math3d.Vector3.Zero
  name: Zero
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_Zero
  commentId: F:Vim.Math3d.Vector3.Zero
  fullName: Vim.Math3d.Vector3.Zero
  nameWithType: Vector3.Zero
- uid: Vim.Math3d.Vector3.ZXY
  name: ZXY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ZXY
  commentId: P:Vim.Math3d.Vector3.ZXY
  fullName: Vim.Math3d.Vector3.ZXY
  nameWithType: Vector3.ZXY
- uid: Vim.Math3d.Vector3.ZXY*
  name: ZXY
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ZXY_
  commentId: Overload:Vim.Math3d.Vector3.ZXY
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.ZXY
  nameWithType: Vector3.ZXY
- uid: Vim.Math3d.Vector3.ZYX
  name: ZYX
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ZYX
  commentId: P:Vim.Math3d.Vector3.ZYX
  fullName: Vim.Math3d.Vector3.ZYX
  nameWithType: Vector3.ZYX
- uid: Vim.Math3d.Vector3.ZYX*
  name: ZYX
  href: api/Vim.Math3d.Vector3.html#Vim_Math3d_Vector3_ZYX_
  commentId: Overload:Vim.Math3d.Vector3.ZYX
  isSpec: "True"
  fullName: Vim.Math3d.Vector3.ZYX
  nameWithType: Vector3.ZYX
- uid: Vim.Math3d.Vector4
  name: Vector4
  href: api/Vim.Math3d.Vector4.html
  commentId: T:Vim.Math3d.Vector4
  fullName: Vim.Math3d.Vector4
  nameWithType: Vector4
- uid: Vim.Math3d.Vector4.#ctor(System.Single)
  name: Vector4(Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4__ctor_System_Single_
  commentId: M:Vim.Math3d.Vector4.#ctor(System.Single)
  fullName: Vim.Math3d.Vector4.Vector4(System.Single)
  nameWithType: Vector4.Vector4(Single)
- uid: Vim.Math3d.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  name: Vector4(Single, Single, Single, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4__ctor_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Vector4.Vector4(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Vector4.Vector4(Single, Single, Single, Single)
- uid: Vim.Math3d.Vector4.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name: Vector4((Single x, Single y, Single z, Single w))
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4__ctor_System_ValueTuple_System_Single_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.Vector4.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name.vb: Vector4((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.Vector4.Vector4(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector4.Vector4(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: Vector4.Vector4((Single x, Single y, Single z, Single w))
  nameWithType.vb: Vector4.Vector4((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.Vector4.#ctor(Vim.Math3d.Vector2,System.Single,System.Single)
  name: Vector4(Vector2, Single, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4__ctor_Vim_Math3d_Vector2_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector4.#ctor(Vim.Math3d.Vector2,System.Single,System.Single)
  fullName: Vim.Math3d.Vector4.Vector4(Vim.Math3d.Vector2, System.Single, System.Single)
  nameWithType: Vector4.Vector4(Vector2, Single, Single)
- uid: Vim.Math3d.Vector4.#ctor(Vim.Math3d.Vector3,System.Single)
  name: Vector4(Vector3, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4__ctor_Vim_Math3d_Vector3_System_Single_
  commentId: M:Vim.Math3d.Vector4.#ctor(Vim.Math3d.Vector3,System.Single)
  fullName: Vim.Math3d.Vector4.Vector4(Vim.Math3d.Vector3, System.Single)
  nameWithType: Vector4.Vector4(Vector3, Single)
- uid: Vim.Math3d.Vector4.#ctor*
  name: Vector4
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4__ctor_
  commentId: Overload:Vim.Math3d.Vector4.#ctor
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Vector4
  nameWithType: Vector4.Vector4
- uid: Vim.Math3d.Vector4.AlmostEquals(Vim.Math3d.Vector4,System.Single)
  name: AlmostEquals(Vector4, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_AlmostEquals_Vim_Math3d_Vector4_System_Single_
  commentId: M:Vim.Math3d.Vector4.AlmostEquals(Vim.Math3d.Vector4,System.Single)
  fullName: Vim.Math3d.Vector4.AlmostEquals(Vim.Math3d.Vector4, System.Single)
  nameWithType: Vector4.AlmostEquals(Vector4, Single)
- uid: Vim.Math3d.Vector4.AlmostEquals*
  name: AlmostEquals
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_AlmostEquals_
  commentId: Overload:Vim.Math3d.Vector4.AlmostEquals
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.AlmostEquals
  nameWithType: Vector4.AlmostEquals
- uid: Vim.Math3d.Vector4.AlmostZero(System.Single)
  name: AlmostZero(Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_AlmostZero_System_Single_
  commentId: M:Vim.Math3d.Vector4.AlmostZero(System.Single)
  fullName: Vim.Math3d.Vector4.AlmostZero(System.Single)
  nameWithType: Vector4.AlmostZero(Single)
- uid: Vim.Math3d.Vector4.AlmostZero*
  name: AlmostZero
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_AlmostZero_
  commentId: Overload:Vim.Math3d.Vector4.AlmostZero
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.AlmostZero
  nameWithType: Vector4.AlmostZero
- uid: Vim.Math3d.Vector4.AnyComponentNegative
  name: AnyComponentNegative()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_AnyComponentNegative
  commentId: M:Vim.Math3d.Vector4.AnyComponentNegative
  fullName: Vim.Math3d.Vector4.AnyComponentNegative()
  nameWithType: Vector4.AnyComponentNegative()
- uid: Vim.Math3d.Vector4.AnyComponentNegative*
  name: AnyComponentNegative
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_AnyComponentNegative_
  commentId: Overload:Vim.Math3d.Vector4.AnyComponentNegative
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.AnyComponentNegative
  nameWithType: Vector4.AnyComponentNegative
- uid: Vim.Math3d.Vector4.CompareTo(Vim.Math3d.Vector4)
  name: CompareTo(Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_CompareTo_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.CompareTo(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.CompareTo(Vim.Math3d.Vector4)
  nameWithType: Vector4.CompareTo(Vector4)
- uid: Vim.Math3d.Vector4.CompareTo*
  name: CompareTo
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_CompareTo_
  commentId: Overload:Vim.Math3d.Vector4.CompareTo
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.CompareTo
  nameWithType: Vector4.CompareTo
- uid: Vim.Math3d.Vector4.Create(System.Single,System.Single,System.Single,System.Single)
  name: Create(Single, Single, Single, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Create_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector4.Create(System.Single,System.Single,System.Single,System.Single)
  fullName: Vim.Math3d.Vector4.Create(System.Single, System.Single, System.Single, System.Single)
  nameWithType: Vector4.Create(Single, Single, Single, Single)
- uid: Vim.Math3d.Vector4.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name: Create((Single x, Single y, Single z, Single w))
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Create_System_ValueTuple_System_Single_System_Single_System_Single_System_Single__
  commentId: M:Vim.Math3d.Vector4.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  name.vb: Create((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.Vector4.Create(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector4.Create(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: Vector4.Create((Single x, Single y, Single z, Single w))
  nameWithType.vb: Vector4.Create((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.Vector4.Create*
  name: Create
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Create_
  commentId: Overload:Vim.Math3d.Vector4.Create
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Create
  nameWithType: Vector4.Create
- uid: Vim.Math3d.Vector4.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  name: Deconstruct(out Single, out Single, out Single, out Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Deconstruct_System_Single__System_Single__System_Single__System_Single__
  commentId: M:Vim.Math3d.Vector4.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  name.vb: Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  fullName: Vim.Math3d.Vector4.Deconstruct(out System.Single, out System.Single, out System.Single, out System.Single)
  fullName.vb: Vim.Math3d.Vector4.Deconstruct(ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  nameWithType: Vector4.Deconstruct(out Single, out Single, out Single, out Single)
  nameWithType.vb: Vector4.Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
- uid: Vim.Math3d.Vector4.Deconstruct*
  name: Deconstruct
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Deconstruct_
  commentId: Overload:Vim.Math3d.Vector4.Deconstruct
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Deconstruct
  nameWithType: Vector4.Deconstruct
- uid: Vim.Math3d.Vector4.Dot(Vim.Math3d.Vector4)
  name: Dot(Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Dot_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.Dot(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Dot(Vim.Math3d.Vector4)
  nameWithType: Vector4.Dot(Vector4)
- uid: Vim.Math3d.Vector4.Dot(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Dot(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Dot_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.Dot(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Dot(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.Dot(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.Dot*
  name: Dot
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Dot_
  commentId: Overload:Vim.Math3d.Vector4.Dot
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Dot
  nameWithType: Vector4.Dot
- uid: Vim.Math3d.Vector4.Equals(System.Object)
  name: Equals(Object)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Equals_System_Object_
  commentId: M:Vim.Math3d.Vector4.Equals(System.Object)
  fullName: Vim.Math3d.Vector4.Equals(System.Object)
  nameWithType: Vector4.Equals(Object)
- uid: Vim.Math3d.Vector4.Equals(Vim.Math3d.Vector4)
  name: Equals(Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Equals_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.Equals(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Equals(Vim.Math3d.Vector4)
  nameWithType: Vector4.Equals(Vector4)
- uid: Vim.Math3d.Vector4.Equals*
  name: Equals
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Equals_
  commentId: Overload:Vim.Math3d.Vector4.Equals
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Equals
  nameWithType: Vector4.Equals
- uid: Vim.Math3d.Vector4.GetComponent(System.Int32)
  name: GetComponent(Int32)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_GetComponent_System_Int32_
  commentId: M:Vim.Math3d.Vector4.GetComponent(System.Int32)
  fullName: Vim.Math3d.Vector4.GetComponent(System.Int32)
  nameWithType: Vector4.GetComponent(Int32)
- uid: Vim.Math3d.Vector4.GetComponent*
  name: GetComponent
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_GetComponent_
  commentId: Overload:Vim.Math3d.Vector4.GetComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.GetComponent
  nameWithType: Vector4.GetComponent
- uid: Vim.Math3d.Vector4.GetHashCode
  name: GetHashCode()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_GetHashCode
  commentId: M:Vim.Math3d.Vector4.GetHashCode
  fullName: Vim.Math3d.Vector4.GetHashCode()
  nameWithType: Vector4.GetHashCode()
- uid: Vim.Math3d.Vector4.GetHashCode*
  name: GetHashCode
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_GetHashCode_
  commentId: Overload:Vim.Math3d.Vector4.GetHashCode
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.GetHashCode
  nameWithType: Vector4.GetHashCode
- uid: Vim.Math3d.Vector4.IsInfinity
  name: IsInfinity()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_IsInfinity
  commentId: M:Vim.Math3d.Vector4.IsInfinity
  fullName: Vim.Math3d.Vector4.IsInfinity()
  nameWithType: Vector4.IsInfinity()
- uid: Vim.Math3d.Vector4.IsInfinity*
  name: IsInfinity
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_IsInfinity_
  commentId: Overload:Vim.Math3d.Vector4.IsInfinity
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.IsInfinity
  nameWithType: Vector4.IsInfinity
- uid: Vim.Math3d.Vector4.IsNaN
  name: IsNaN()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_IsNaN
  commentId: M:Vim.Math3d.Vector4.IsNaN
  fullName: Vim.Math3d.Vector4.IsNaN()
  nameWithType: Vector4.IsNaN()
- uid: Vim.Math3d.Vector4.IsNaN*
  name: IsNaN
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_IsNaN_
  commentId: Overload:Vim.Math3d.Vector4.IsNaN
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.IsNaN
  nameWithType: Vector4.IsNaN
- uid: Vim.Math3d.Vector4.Magnitude
  name: Magnitude()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Magnitude
  commentId: M:Vim.Math3d.Vector4.Magnitude
  fullName: Vim.Math3d.Vector4.Magnitude()
  nameWithType: Vector4.Magnitude()
- uid: Vim.Math3d.Vector4.Magnitude*
  name: Magnitude
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Magnitude_
  commentId: Overload:Vim.Math3d.Vector4.Magnitude
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Magnitude
  nameWithType: Vector4.Magnitude
- uid: Vim.Math3d.Vector4.MagnitudeSquared
  name: MagnitudeSquared()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MagnitudeSquared
  commentId: M:Vim.Math3d.Vector4.MagnitudeSquared
  fullName: Vim.Math3d.Vector4.MagnitudeSquared()
  nameWithType: Vector4.MagnitudeSquared()
- uid: Vim.Math3d.Vector4.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MagnitudeSquared_
  commentId: Overload:Vim.Math3d.Vector4.MagnitudeSquared
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.MagnitudeSquared
  nameWithType: Vector4.MagnitudeSquared
- uid: Vim.Math3d.Vector4.MaxComponent
  name: MaxComponent()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MaxComponent
  commentId: M:Vim.Math3d.Vector4.MaxComponent
  fullName: Vim.Math3d.Vector4.MaxComponent()
  nameWithType: Vector4.MaxComponent()
- uid: Vim.Math3d.Vector4.MaxComponent*
  name: MaxComponent
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MaxComponent_
  commentId: Overload:Vim.Math3d.Vector4.MaxComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.MaxComponent
  nameWithType: Vector4.MaxComponent
- uid: Vim.Math3d.Vector4.MaxValue
  name: MaxValue
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MaxValue
  commentId: F:Vim.Math3d.Vector4.MaxValue
  fullName: Vim.Math3d.Vector4.MaxValue
  nameWithType: Vector4.MaxValue
- uid: Vim.Math3d.Vector4.MinComponent
  name: MinComponent()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MinComponent
  commentId: M:Vim.Math3d.Vector4.MinComponent
  fullName: Vim.Math3d.Vector4.MinComponent()
  nameWithType: Vector4.MinComponent()
- uid: Vim.Math3d.Vector4.MinComponent*
  name: MinComponent
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MinComponent_
  commentId: Overload:Vim.Math3d.Vector4.MinComponent
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.MinComponent
  nameWithType: Vector4.MinComponent
- uid: Vim.Math3d.Vector4.MinValue
  name: MinValue
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_MinValue
  commentId: F:Vim.Math3d.Vector4.MinValue
  fullName: Vim.Math3d.Vector4.MinValue
  nameWithType: Vector4.MinValue
- uid: Vim.Math3d.Vector4.NumComponents
  name: NumComponents
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_NumComponents
  commentId: F:Vim.Math3d.Vector4.NumComponents
  fullName: Vim.Math3d.Vector4.NumComponents
  nameWithType: Vector4.NumComponents
- uid: Vim.Math3d.Vector4.One
  name: One
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_One
  commentId: F:Vim.Math3d.Vector4.One
  fullName: Vim.Math3d.Vector4.One
  nameWithType: Vector4.One
- uid: Vim.Math3d.Vector4.op_Addition(System.Single,Vim.Math3d.Vector4)
  name: Addition(Single, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Addition_System_Single_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Addition(System.Single,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Addition(System.Single, Vim.Math3d.Vector4)
  nameWithType: Vector4.Addition(Single, Vector4)
- uid: Vim.Math3d.Vector4.op_Addition(Vim.Math3d.Vector4,System.Single)
  name: Addition(Vector4, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Addition_Vim_Math3d_Vector4_System_Single_
  commentId: M:Vim.Math3d.Vector4.op_Addition(Vim.Math3d.Vector4,System.Single)
  fullName: Vim.Math3d.Vector4.Addition(Vim.Math3d.Vector4, System.Single)
  nameWithType: Vector4.Addition(Vector4, Single)
- uid: Vim.Math3d.Vector4.op_Addition(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Addition(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Addition_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Addition(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Addition(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.Addition(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_Addition*
  name: Addition
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Addition_
  commentId: Overload:Vim.Math3d.Vector4.op_Addition
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Addition
  nameWithType: Vector4.Addition
- uid: Vim.Math3d.Vector4.op_Division(System.Single,Vim.Math3d.Vector4)
  name: Division(Single, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Division_System_Single_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Division(System.Single,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Division(System.Single, Vim.Math3d.Vector4)
  nameWithType: Vector4.Division(Single, Vector4)
- uid: Vim.Math3d.Vector4.op_Division(Vim.Math3d.Vector4,System.Single)
  name: Division(Vector4, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Division_Vim_Math3d_Vector4_System_Single_
  commentId: M:Vim.Math3d.Vector4.op_Division(Vim.Math3d.Vector4,System.Single)
  fullName: Vim.Math3d.Vector4.Division(Vim.Math3d.Vector4, System.Single)
  nameWithType: Vector4.Division(Vector4, Single)
- uid: Vim.Math3d.Vector4.op_Division(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Division(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Division_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Division(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Division(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.Division(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_Division*
  name: Division
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Division_
  commentId: Overload:Vim.Math3d.Vector4.op_Division
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Division
  nameWithType: Vector4.Division
- uid: Vim.Math3d.Vector4.op_Equality(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Equality(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Equality_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Equality(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Equality(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.Equality(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_Equality*
  name: Equality
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Equality_
  commentId: Overload:Vim.Math3d.Vector4.op_Equality
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Equality
  nameWithType: Vector4.Equality
- uid: Vim.Math3d.Vector4.op_GreaterThan(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: GreaterThan(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_GreaterThan_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_GreaterThan(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.GreaterThan(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.GreaterThan(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_GreaterThan*
  name: GreaterThan
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_GreaterThan_
  commentId: Overload:Vim.Math3d.Vector4.op_GreaterThan
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.GreaterThan
  nameWithType: Vector4.GreaterThan
- uid: Vim.Math3d.Vector4.op_GreaterThanOrEqual(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: GreaterThanOrEqual(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_GreaterThanOrEqual_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_GreaterThanOrEqual(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.GreaterThanOrEqual(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.GreaterThanOrEqual(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_GreaterThanOrEqual_
  commentId: Overload:Vim.Math3d.Vector4.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.GreaterThanOrEqual
  nameWithType: Vector4.GreaterThanOrEqual
- uid: Vim.Math3d.Vector4.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.Vector4
  name: Implicit((Single x, Single y, Single z, Single w) to Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Implicit_System_ValueTuple_System_Single_System_Single_System_Single_System_Single___Vim_Math3d_Vector4
  commentId: M:Vim.Math3d.Vector4.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.Vector4
  name.vb: Widening((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single) to Vector4)
  fullName: Vim.Math3d.Vector4.Implicit(System.ValueTuple<System.Single, System.Single, System.Single, System.Single> to Vim.Math3d.Vector4)
  fullName.vb: Vim.Math3d.Vector4.Widening(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single) to Vim.Math3d.Vector4)
  nameWithType: Vector4.Implicit((Single x, Single y, Single z, Single w) to Vector4)
  nameWithType.vb: Vector4.Widening((x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single) to Vector4)
- uid: Vim.Math3d.Vector4.op_Implicit(Vim.Math3d.Vector4)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  name: Implicit(Vector4 to (Single x, Single y, Single z, Single w))
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Implicit_Vim_Math3d_Vector4__System_ValueTuple_System_Single_System_Single_System_Single_System_Single_
  commentId: M:Vim.Math3d.Vector4.op_Implicit(Vim.Math3d.Vector4)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  name.vb: Widening(Vector4 to (x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
  fullName: Vim.Math3d.Vector4.Implicit(Vim.Math3d.Vector4 to System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  fullName.vb: Vim.Math3d.Vector4.Widening(Vim.Math3d.Vector4 to System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  nameWithType: Vector4.Implicit(Vector4 to (Single x, Single y, Single z, Single w))
  nameWithType.vb: Vector4.Widening(Vector4 to (x As Single, y As Single, z As Single, w As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.Vector4.op_Implicit*
  name: Implicit
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Implicit_
  commentId: Overload:Vim.Math3d.Vector4.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Vim.Math3d.Vector4.Implicit
  fullName.vb: Vim.Math3d.Vector4.Widening
  nameWithType: Vector4.Implicit
  nameWithType.vb: Vector4.Widening
- uid: Vim.Math3d.Vector4.op_Inequality(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Inequality(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Inequality_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Inequality(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Inequality(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.Inequality(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_Inequality*
  name: Inequality
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Inequality_
  commentId: Overload:Vim.Math3d.Vector4.op_Inequality
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Inequality
  nameWithType: Vector4.Inequality
- uid: Vim.Math3d.Vector4.op_LessThan(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: LessThan(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_LessThan_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_LessThan(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.LessThan(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.LessThan(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_LessThan*
  name: LessThan
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_LessThan_
  commentId: Overload:Vim.Math3d.Vector4.op_LessThan
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.LessThan
  nameWithType: Vector4.LessThan
- uid: Vim.Math3d.Vector4.op_LessThanOrEqual(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: LessThanOrEqual(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_LessThanOrEqual_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_LessThanOrEqual(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.LessThanOrEqual(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.LessThanOrEqual(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_LessThanOrEqual_
  commentId: Overload:Vim.Math3d.Vector4.op_LessThanOrEqual
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.LessThanOrEqual
  nameWithType: Vector4.LessThanOrEqual
- uid: Vim.Math3d.Vector4.op_Multiply(System.Single,Vim.Math3d.Vector4)
  name: Multiply(Single, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Multiply_System_Single_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Multiply(System.Single,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Multiply(System.Single, Vim.Math3d.Vector4)
  nameWithType: Vector4.Multiply(Single, Vector4)
- uid: Vim.Math3d.Vector4.op_Multiply(Vim.Math3d.Vector4,System.Single)
  name: Multiply(Vector4, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Multiply_Vim_Math3d_Vector4_System_Single_
  commentId: M:Vim.Math3d.Vector4.op_Multiply(Vim.Math3d.Vector4,System.Single)
  fullName: Vim.Math3d.Vector4.Multiply(Vim.Math3d.Vector4, System.Single)
  nameWithType: Vector4.Multiply(Vector4, Single)
- uid: Vim.Math3d.Vector4.op_Multiply(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Multiply(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Multiply_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Multiply(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Multiply(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.Multiply(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_Multiply*
  name: Multiply
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Multiply_
  commentId: Overload:Vim.Math3d.Vector4.op_Multiply
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Multiply
  nameWithType: Vector4.Multiply
- uid: Vim.Math3d.Vector4.op_Subtraction(System.Single,Vim.Math3d.Vector4)
  name: Subtraction(Single, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Subtraction_System_Single_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Subtraction(System.Single,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Subtraction(System.Single, Vim.Math3d.Vector4)
  nameWithType: Vector4.Subtraction(Single, Vector4)
- uid: Vim.Math3d.Vector4.op_Subtraction(Vim.Math3d.Vector4,System.Single)
  name: Subtraction(Vector4, Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Subtraction_Vim_Math3d_Vector4_System_Single_
  commentId: M:Vim.Math3d.Vector4.op_Subtraction(Vim.Math3d.Vector4,System.Single)
  fullName: Vim.Math3d.Vector4.Subtraction(Vim.Math3d.Vector4, System.Single)
  nameWithType: Vector4.Subtraction(Vector4, Single)
- uid: Vim.Math3d.Vector4.op_Subtraction(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  name: Subtraction(Vector4, Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Subtraction_Vim_Math3d_Vector4_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_Subtraction(Vim.Math3d.Vector4,Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.Subtraction(Vim.Math3d.Vector4, Vim.Math3d.Vector4)
  nameWithType: Vector4.Subtraction(Vector4, Vector4)
- uid: Vim.Math3d.Vector4.op_Subtraction*
  name: Subtraction
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_Subtraction_
  commentId: Overload:Vim.Math3d.Vector4.op_Subtraction
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Subtraction
  nameWithType: Vector4.Subtraction
- uid: Vim.Math3d.Vector4.op_UnaryNegation(Vim.Math3d.Vector4)
  name: UnaryNegation(Vector4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_UnaryNegation_Vim_Math3d_Vector4_
  commentId: M:Vim.Math3d.Vector4.op_UnaryNegation(Vim.Math3d.Vector4)
  fullName: Vim.Math3d.Vector4.UnaryNegation(Vim.Math3d.Vector4)
  nameWithType: Vector4.UnaryNegation(Vector4)
- uid: Vim.Math3d.Vector4.op_UnaryNegation*
  name: UnaryNegation
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_op_UnaryNegation_
  commentId: Overload:Vim.Math3d.Vector4.op_UnaryNegation
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.UnaryNegation
  nameWithType: Vector4.UnaryNegation
- uid: Vim.Math3d.Vector4.ProductComponents
  name: ProductComponents()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_ProductComponents
  commentId: M:Vim.Math3d.Vector4.ProductComponents
  fullName: Vim.Math3d.Vector4.ProductComponents()
  nameWithType: Vector4.ProductComponents()
- uid: Vim.Math3d.Vector4.ProductComponents*
  name: ProductComponents
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_ProductComponents_
  commentId: Overload:Vim.Math3d.Vector4.ProductComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.ProductComponents
  nameWithType: Vector4.ProductComponents
- uid: Vim.Math3d.Vector4.SetW(System.Single)
  name: SetW(Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetW_System_Single_
  commentId: M:Vim.Math3d.Vector4.SetW(System.Single)
  fullName: Vim.Math3d.Vector4.SetW(System.Single)
  nameWithType: Vector4.SetW(Single)
- uid: Vim.Math3d.Vector4.SetW*
  name: SetW
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetW_
  commentId: Overload:Vim.Math3d.Vector4.SetW
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.SetW
  nameWithType: Vector4.SetW
- uid: Vim.Math3d.Vector4.SetX(System.Single)
  name: SetX(Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetX_System_Single_
  commentId: M:Vim.Math3d.Vector4.SetX(System.Single)
  fullName: Vim.Math3d.Vector4.SetX(System.Single)
  nameWithType: Vector4.SetX(Single)
- uid: Vim.Math3d.Vector4.SetX*
  name: SetX
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetX_
  commentId: Overload:Vim.Math3d.Vector4.SetX
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.SetX
  nameWithType: Vector4.SetX
- uid: Vim.Math3d.Vector4.SetY(System.Single)
  name: SetY(Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetY_System_Single_
  commentId: M:Vim.Math3d.Vector4.SetY(System.Single)
  fullName: Vim.Math3d.Vector4.SetY(System.Single)
  nameWithType: Vector4.SetY(Single)
- uid: Vim.Math3d.Vector4.SetY*
  name: SetY
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetY_
  commentId: Overload:Vim.Math3d.Vector4.SetY
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.SetY
  nameWithType: Vector4.SetY
- uid: Vim.Math3d.Vector4.SetZ(System.Single)
  name: SetZ(Single)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetZ_System_Single_
  commentId: M:Vim.Math3d.Vector4.SetZ(System.Single)
  fullName: Vim.Math3d.Vector4.SetZ(System.Single)
  nameWithType: Vector4.SetZ(Single)
- uid: Vim.Math3d.Vector4.SetZ*
  name: SetZ
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SetZ_
  commentId: Overload:Vim.Math3d.Vector4.SetZ
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.SetZ
  nameWithType: Vector4.SetZ
- uid: Vim.Math3d.Vector4.SumComponents
  name: SumComponents()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SumComponents
  commentId: M:Vim.Math3d.Vector4.SumComponents
  fullName: Vim.Math3d.Vector4.SumComponents()
  nameWithType: Vector4.SumComponents()
- uid: Vim.Math3d.Vector4.SumComponents*
  name: SumComponents
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SumComponents_
  commentId: Overload:Vim.Math3d.Vector4.SumComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.SumComponents
  nameWithType: Vector4.SumComponents
- uid: Vim.Math3d.Vector4.SumSqrComponents
  name: SumSqrComponents()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SumSqrComponents
  commentId: M:Vim.Math3d.Vector4.SumSqrComponents
  fullName: Vim.Math3d.Vector4.SumSqrComponents()
  nameWithType: Vector4.SumSqrComponents()
- uid: Vim.Math3d.Vector4.SumSqrComponents*
  name: SumSqrComponents
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_SumSqrComponents_
  commentId: Overload:Vim.Math3d.Vector4.SumSqrComponents
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.SumSqrComponents
  nameWithType: Vector4.SumSqrComponents
- uid: Vim.Math3d.Vector4.ToString
  name: ToString()
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_ToString
  commentId: M:Vim.Math3d.Vector4.ToString
  fullName: Vim.Math3d.Vector4.ToString()
  nameWithType: Vector4.ToString()
- uid: Vim.Math3d.Vector4.ToString*
  name: ToString
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_ToString_
  commentId: Overload:Vim.Math3d.Vector4.ToString
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.ToString
  nameWithType: Vector4.ToString
- uid: Vim.Math3d.Vector4.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Transform_Vim_Math3d_Matrix4x4_
  commentId: M:Vim.Math3d.Vector4.Transform(Vim.Math3d.Matrix4x4)
  fullName: Vim.Math3d.Vector4.Transform(Vim.Math3d.Matrix4x4)
  nameWithType: Vector4.Transform(Matrix4x4)
- uid: Vim.Math3d.Vector4.Transform*
  name: Transform
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Transform_
  commentId: Overload:Vim.Math3d.Vector4.Transform
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.Transform
  nameWithType: Vector4.Transform
- uid: Vim.Math3d.Vector4.UnitW
  name: UnitW
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_UnitW
  commentId: F:Vim.Math3d.Vector4.UnitW
  fullName: Vim.Math3d.Vector4.UnitW
  nameWithType: Vector4.UnitW
- uid: Vim.Math3d.Vector4.UnitX
  name: UnitX
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_UnitX
  commentId: F:Vim.Math3d.Vector4.UnitX
  fullName: Vim.Math3d.Vector4.UnitX
  nameWithType: Vector4.UnitX
- uid: Vim.Math3d.Vector4.UnitY
  name: UnitY
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_UnitY
  commentId: F:Vim.Math3d.Vector4.UnitY
  fullName: Vim.Math3d.Vector4.UnitY
  nameWithType: Vector4.UnitY
- uid: Vim.Math3d.Vector4.UnitZ
  name: UnitZ
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_UnitZ
  commentId: F:Vim.Math3d.Vector4.UnitZ
  fullName: Vim.Math3d.Vector4.UnitZ
  nameWithType: Vector4.UnitZ
- uid: Vim.Math3d.Vector4.W
  name: W
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_W
  commentId: F:Vim.Math3d.Vector4.W
  fullName: Vim.Math3d.Vector4.W
  nameWithType: Vector4.W
- uid: Vim.Math3d.Vector4.X
  name: X
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_X
  commentId: F:Vim.Math3d.Vector4.X
  fullName: Vim.Math3d.Vector4.X
  nameWithType: Vector4.X
- uid: Vim.Math3d.Vector4.XY
  name: XY
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_XY
  commentId: P:Vim.Math3d.Vector4.XY
  fullName: Vim.Math3d.Vector4.XY
  nameWithType: Vector4.XY
- uid: Vim.Math3d.Vector4.XY*
  name: XY
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_XY_
  commentId: Overload:Vim.Math3d.Vector4.XY
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.XY
  nameWithType: Vector4.XY
- uid: Vim.Math3d.Vector4.XYZ
  name: XYZ
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_XYZ
  commentId: P:Vim.Math3d.Vector4.XYZ
  fullName: Vim.Math3d.Vector4.XYZ
  nameWithType: Vector4.XYZ
- uid: Vim.Math3d.Vector4.XYZ*
  name: XYZ
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_XYZ_
  commentId: Overload:Vim.Math3d.Vector4.XYZ
  isSpec: "True"
  fullName: Vim.Math3d.Vector4.XYZ
  nameWithType: Vector4.XYZ
- uid: Vim.Math3d.Vector4.Y
  name: Y
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Y
  commentId: F:Vim.Math3d.Vector4.Y
  fullName: Vim.Math3d.Vector4.Y
  nameWithType: Vector4.Y
- uid: Vim.Math3d.Vector4.Z
  name: Z
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Z
  commentId: F:Vim.Math3d.Vector4.Z
  fullName: Vim.Math3d.Vector4.Z
  nameWithType: Vector4.Z
- uid: Vim.Math3d.Vector4.Zero
  name: Zero
  href: api/Vim.Math3d.Vector4.html#Vim_Math3d_Vector4_Zero
  commentId: F:Vim.Math3d.Vector4.Zero
  fullName: Vim.Math3d.Vector4.Zero
  nameWithType: Vector4.Zero
